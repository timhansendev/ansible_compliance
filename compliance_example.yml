---
# Red Hat Insights has recommended one or more actions for you, a system administrator, to review and if you
# deem appropriate, deploy on your systems running Red Hat software. Based on the analysis, we have automatically
# generated an Ansible Playbook for you. Please review and test the recommended actions and the Playbook as
# they may contain configuration changes, updates, reboots and/or other changes to your systems. Red Hat is not
# responsible for any adverse outcomes related to these recommendations or Playbooks.
#
# corebridge_compliance_example
# https://console.redhat.com/insights/remediations/130d973f-3bdc-4758-8f09-32a6987bc47a
# Generated by Red Hat Insights on Wed, 14 May 2025 15:29:45 GMT
# Created by timhansendev

# Set Account Expiration Following Inactivity
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_account_disable_post_pw_expiration,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle,multi_platform_slmicro
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set Account Expiration Following Inactivity
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_account_disable_post_pw_expiration: '45'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaFlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      TkZPRkF2TXpKak9XSTJiWEpoWTFSSVJVTTBhR1kyTVRCQksxSUtNSEJ2TkdSa1ZXVk5XbXBEUTI1
      VU9TdEhabGRaWTNkQlluQlhRVXhXVFZSaFIySkNSR2MyZEc5dlNrTnhNV1Y2UjNKd01WWkZRMmhh
      UWtoTmEybGxhQXB2UlhWTmFUaEVWVWxDYkVwMWVHd3hXbG92VjNweFRGRkVSVmROYW1oM05UaENW
      bUUxZG1KQ1RXcFZTbFI2VEhJdlpHaDBSV2hqZWpsRFEzUk1SSGNyQ21oR0wwNTJhREZOVERCQldF
      RmtWM1JFUkhad1QxSjNVekZIWWt4VWIwVnVkWEYyZWt4RFZWWjNabWhQZDI5VUwyWkpZM0p1UVVa
      RlYyMVBUMmhrTHpVS1UyUTBWMUJuYTB4VFVraGFWVU5WUWtwNk9IQTRZelJVY2toVFJITklZaXR1
      Vmk5M01tNUlZMUEzVW5OTGVsQTBjMDR2TldKVFVEUkVaMEY2VkhoRk1nbzBNa1l6YkhkbmNWY3dN
      VFl2TmtWRWR6WnFkWFF3UkhGSGJqa3laRWhIV1Vka1pEWldUR0pPUW1neVJYWlBVMmhzV2t4ck9F
      VlNRMHN4VEhweWRsQXpDa3BYV21aeE9TOVRjVFU0U25ZMlpIWlJZbGhCVEVkT1pHdGpSazFQUTNS
      NFNuVllNMnBUTkhobE1qSXljRWQ0ZEVZcll6VTFaMUZvUzNaT1VVdzRXUzhLTDJSb1kyZGlXaTls
      UmxWelEwOWplU3RTWXpWVVlrUnZlVkl5V2pGS0t5OHdkRll5TlV3eU5uY3JabGMyVWpKVlVXMU9L
      MEZXYVRsM1FYWXpURGxuVndwNFVHWmxTbmxNTmtOTFZGSm9jV2xVVFZwV1NYaDFPR3B6VHpWWWVF
      eFJaRGhUYVRWa1RHMUJiMk5GUjJwb1YwRTJNRXAwYW1SUmN6TkxUMlkxUkdWdUNqbDJTREZ3U1dO
      SldVbHdWaXRQWml0YVoxaFdibUZKUXpRemNubHlkWEZXUkVzNWNDOUNUMnRZWXk5cVJscENRaXQ0
      Tm1veUwwOUJNMWxaVEZNclVEY0tTa1F6TlRCVFoxVnFPRmx0TUdsR2RVWktRbVpSYTJwTFVHY3ph
      MlZtTTBaWlFWa3hVbGhSYVZsc1UxZHBTbEp1ZVZOUGNHUmFPV3R0ZWs5M1JrSTJLd3BVVXpsSVVX
      UmtZbTlrTWxKc01UQklMMkZwT1FvOVdEUkdVQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83627-0
    - CJIS-5.6.2.1.1
    - DISA-STIG-RHEL-09-411050
    - NIST-800-171-3.5.6
    - NIST-800-53-AC-2(3)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-4(e)
    - PCI-DSS-Req-8.1.4
    - PCI-DSSv4-8.2
    - PCI-DSSv4-8.2.6
    - account_disable_post_pw_expiration
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set Account Expiration Following Inactivity
      lineinfile:
        create: true
        dest: /etc/default/useradd
        regexp: ^INACTIVE
        line: INACTIVE={{ var_account_disable_post_pw_expiration }}
      when: '"shadow-utils" in ansible_facts.packages'


# Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File.
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_account_password_pam_faillock_password_auth,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = enable
# complexity = low
# disruption = low
- name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File.
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86932-1
    - DISA-STIG-RHEL-09-611035
    - NIST-800-53-AC-7 (a)
    - account_password_pam_faillock_password_auth
    - enable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaFlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      bG5SVkF2TWpOdGMwMXpVM2hoUm1SU1ZGVTRjV2hLUzNCMVdHNEtjR1ZvUlhGVFRXOVBhbXRhTjJS
      dVkxWjBPWGRQVjA5R1NFMURTV0ZsWVdaUVNuRkVTazlCY0VrNE9XNXhkSGRPTDBkdkx6QnplVE5X
      WVVwRGRHOTFUQW8yY0VOclF6TnlTR3RIY1RZMmVIWmlORmwxZVdsdFQzQlhhRGhMVm1ZM1JHczBi
      SHBMVjFsQlRUUjVNWE5CV25ka1kyTTJWSFZxY2xscmJ6QnhSVVpHQ25sdU5YaE1Xa3BKT1V4RldI
      cFJNbFpZWjJwbE5YbGpOMmxXTWxZNVJWTlpSV0ZvUXpGMlUxVXlkM0psZVZGWGJ6ZDBhVEYzVjNO
      cFJYcGtXbWxRVldNS1pqaHVlV1JEV0RJM2NucFFTMjByVjI4dmFFOVRORmhLVVd0VFlYZ3plQ3Ry
      TkhKSFlrODVTbWxLUkhKUk0xSlRLMUV6T1VSdVZHczVVRVpZYUhoVE9BcG1kbWhMVUZBcmRsWnZV
      blU1YjI5TEsxbDFNMmhXUmxVMWRIRjFXRFJGT1RsdlJXMUtWMEZwU1RKS2IwdGtaVmxETld0TlFr
      dGxMMllyVjJoWFp6RnlDbXR1Y1ZsbVZqUXpaM1JMYnpOUFlVcEVaRVp5VG5Sb1EwbzRLMXAwYUU1
      eGVsRnJNbmxGV0VSRlRWZEJjMmRTVm1ocU9Xd3JSRXhHU2k5UlVYVlFRVk1LZW01Rk5YVm1ha1pM
      VGxjd1RtbEJSVGcxSzA4MU9YUlpVMmx1Um1kVGIwMXlSMUp2T1d4b01VNDNObmRTYkdkWk16SmpZ
      VXhyUWpFeE5XVm9XUzh4TWdwbGMwMXVUMlZoWTNCb2NrVnVXVWxyVjJwbk1rdDJTak16WVZKeU9F
      VlVSeXNyTUZBNUwzTm9ZMkZCWm0xa2RtdFBkVVozUzIxNUwxcFhiSEZ4UldSMkNuUlNiVEpHY1do
      NVJUQlJLM1pTVDNCRmJWWTFObTFJWW5ObmRsUkhNbWg0ZFZScGRIbElORU5zWmxWUFNXczBLM0oy
      TjNBeFdtSk5aazFuWXpKbVIyUUtSRTFvZVRkSVJXZHlSRms0YlNzMlJWUldNR3BSUkVNd2JUTmFN
      azB5YlhkWFRVTktOMDVVV21acWJIUnpTbnBTV1ZaRFpFRkphVEZ0WkRaU1EyUlBkd3BrYld0cGJW
      bHJXRE0xY21ZclZYTlVUa1ZUYlFvOVlUQmtNd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File. - Check if system relies on authselect tool
      ansible.builtin.stat:
        path: /usr/bin/authselect
      register: result_authselect_present

    - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File. - Remediation where authselect tool is present
      block:

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File. - Check integrity of authselect current profile
          ansible.builtin.command:
            cmd: authselect check
          register: result_authselect_check_cmd
          changed_when: false
          failed_when: false

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File. - Informative message based on the authselect integrity check result
          ansible.builtin.assert:
            that:
              - result_authselect_check_cmd.rc == 0
            fail_msg:
              - authselect integrity check failed. Remediation aborted!
              - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
              - It is not recommended to manually edit the PAM files when authselect tool is available.
              - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
            success_msg:
              - authselect integrity check passed

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File. - Get authselect current features
          ansible.builtin.shell:
            cmd: authselect current | tail -n+3 | awk '{ print $2 }'
          register: result_authselect_features
          changed_when: false
          when:
            - result_authselect_check_cmd is success

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File. - Ensure "with-faillock" feature is enabled using authselect tool
          ansible.builtin.command:
            cmd: authselect enable-feature with-faillock
          register: result_authselect_enable_feature_cmd
          when:
            - result_authselect_check_cmd is success
            - result_authselect_features.stdout is not search("with-faillock")

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File. - Ensure authselect changes are applied
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_enable_feature_cmd is not skipped
            - result_authselect_enable_feature_cmd is success
      when: result_authselect_present.stat.exists

    - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File. - Remediation where authselect tool is not present
      block:

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File. - Check if pam_faillock.so is already enabled
          ansible.builtin.lineinfile:
            path: /etc/pam.d/system-auth
            regexp: .*auth.*pam_faillock\.so (preauth|authfail)
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_faillock_is_enabled

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File. - Enable pam_faillock.so preauth editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: auth        required      pam_faillock.so preauth
            insertbefore: ^auth.*sufficient.*pam_unix\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File. - Enable pam_faillock.so authfail editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: auth        required      pam_faillock.so authfail
            insertbefore: ^auth.*required.*pam_deny\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/password-auth File. - Enable pam_faillock.so account section editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: account     required      pam_faillock.so
            insertbefore: ^account.*required.*pam_unix\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0
      when: not result_authselect_present.stat.exists


# Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File.
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_account_password_pam_faillock_system_auth,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = enable
# complexity = low
# disruption = low
- name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File.
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86917-2
    - DISA-STIG-RHEL-09-611030
    - NIST-800-53-AC-7 (a)
    - account_password_pam_faillock_system_auth
    - enable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaFlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      ODFUVkF2UVRZMFRFWTRPVEZVVmtsWU1WSlRXakJaUm1sQmJ6RUtkRXMyYVhkNFN6aHJOVkJGUlV4
      RUx6VnNPVE5YZUVOcllWVTFXRlpvYkV4eFNrbEJOa3AyY0RFeVZ6TTJVRUYxT1daU09GbHJlV3BT
      Wmt4T1JXcHhMd3BWUXpoUWVtTTRkMWxYZVdFdmFGTk1ZazF3T0ZRNVoyMUpNMlpzYmpkYVJqRlpW
      RXcxWkZkdFp5OHdNVlo2V2xKc1RHZFNOV2xCTlhoT2FXZFVNRXRLQ25Cak5IZzNOM1JOWm01cmRs
      VjFiQzlWVlU5MWRUUjVXbFExV0ROUE0xQkdWMUJGYkZWbGIyMXFNeTlrWVdzeVRtMXZMMEV4WWpr
      eFZWaE9NWHBoTm1RS1J6SkRaekJUYlZkME5UZFJaRXhCY0V4R1ExUmlVazE1Ukd0M1ZIZFBWVzkz
      WTI5VksyTkRibTk0VTFNM01ISm1hRzU0UTNCbEszUldSRkk1TTJvclV3cG1XSE5LTWpkV2FVbEZR
      MDlGWTFVeWVUTnliVUZwT1c0MFR6bFRSbG9yVW1sT0sycHlZbTVxY0RkT1pVcDVNakE0VldjNVRX
      Uk9SVFpqVUhOWVptaHhDbnBzYzBGd1VVVlFXRU5LUkRaSU1raG9aak00V1haTE1FcENhMDUxYjBa
      R2RHbzNVa0pUZVRWNFoweFJSMkV4YjJsemFHMUJZbmRNUWxKR2RVZFlaM1VLTW1Wc09GbGpOR2Q2
      Vm5FNVRXbGhjQ3RaTmtRd0wwODRURWhpYms5cWNVWkNhalJsU1dKWFpqTm1VM2xtZEhwb1MwYzBV
      RE16TWs0dlR5czVkRXhtYmdwSlRXaHRMemR1TVVaVFZHVXJhRWhUWjBSeE0wYzBNRVl6WTBGQ01u
      WjRXa3RIUW01TVIwTklVM1ZwV1ZSRU1tWndaMHhTYzJaek1EaE5ZelJKWWtsVENuZDJLMWMwT1da
      WlMzWmtkbUZzZUdaUGJYRnFVa0pLVFRCaU5uTTFkV1E0VkhoaGEwcDZUVWR1U0RkcFdFVkJUVGgy
      T1djdk1qUjFiVVZqV0RSSFZuQUtlVEpuZEVKVk1GRTNLMmt2ZVVKalpqUjBiRE12WW1oWmRWTnVS
      bnBPVWtOc2NUSTJSak5STkVwalFXczFiSFp5U2tGNVRVZ3hRMmN2UjB4d2NWTkdjZ3BQUVhwb1VE
      VlljbW81Ym1KbU9ESndTbGs1VHdvOU5HbG5aZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File. - Check if system relies on authselect tool
      ansible.builtin.stat:
        path: /usr/bin/authselect
      register: result_authselect_present

    - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File. - Remediation where authselect tool is present
      block:

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File. - Check integrity of authselect current profile
          ansible.builtin.command:
            cmd: authselect check
          register: result_authselect_check_cmd
          changed_when: false
          failed_when: false

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File. - Informative message based on the authselect integrity check result
          ansible.builtin.assert:
            that:
              - result_authselect_check_cmd.rc == 0
            fail_msg:
              - authselect integrity check failed. Remediation aborted!
              - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
              - It is not recommended to manually edit the PAM files when authselect tool is available.
              - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
            success_msg:
              - authselect integrity check passed

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File. - Get authselect current features
          ansible.builtin.shell:
            cmd: authselect current | tail -n+3 | awk '{ print $2 }'
          register: result_authselect_features
          changed_when: false
          when:
            - result_authselect_check_cmd is success

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File. - Ensure "with-faillock" feature is enabled using authselect tool
          ansible.builtin.command:
            cmd: authselect enable-feature with-faillock
          register: result_authselect_enable_feature_cmd
          when:
            - result_authselect_check_cmd is success
            - result_authselect_features.stdout is not search("with-faillock")

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File. - Ensure authselect changes are applied
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_enable_feature_cmd is not skipped
            - result_authselect_enable_feature_cmd is success
      when: result_authselect_present.stat.exists

    - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File. - Remediation where authselect tool is not present
      block:

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File. - Check if pam_faillock.so is already enabled
          ansible.builtin.lineinfile:
            path: /etc/pam.d/system-auth
            regexp: .*auth.*pam_faillock\.so (preauth|authfail)
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_faillock_is_enabled

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File. - Enable pam_faillock.so preauth editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: auth        required      pam_faillock.so preauth
            insertbefore: ^auth.*sufficient.*pam_unix\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File. - Enable pam_faillock.so authfail editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: auth        required      pam_faillock.so authfail
            insertbefore: ^auth.*required.*pam_deny\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0

        - name: Configure the Use of the pam_faillock.so Module in the /etc/pam.d/system-auth File. - Enable pam_faillock.so account section editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: account     required      pam_faillock.so
            insertbefore: ^account.*required.*pam_unix\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0
      when: not result_authselect_present.stat.exists


# Set Password Maximum Age
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_maximum_age_login_defs,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle,multi_platform_slmicro,multi_platform_debian
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set Password Maximum Age
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_accounts_maximum_age_login_defs: '365'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaFpRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      RmlkMUF2VW05cGNXNXJOblI1WTA5eVZFNXdjSEI0S3paWlUxQUtXa3h1UnpVNVZtSlFVMm8yZVdZ
      MVRVVnJiMmN4YkRGcldqWk9kWEpHVEM5WWJsb3pjRE12WTBnMVRWbFZTVWgyWldNd1NreHpWV014
      VnpBNU1ETlZOUXBJYzFCelJIUjBSalJNUmtoVlNFeEZWekJxWm5kS1pXOWxWREYyTm5ZME5rTjRU
      a2x3UWtkWU4xWTJTSGRXVEVWWVZVdENUMUpKTHpWVmFHVXhXVko1Q25KWWVHWmxlakZWWWtnMFUz
      ZGliSEJsZUdad2FVRkliVXRFTjBSWFJqRklNeTlhWkZVeE1HWm9XRlpUWlhKcGRqZHZUbkZTVm5s
      WFMyMVpjV0ZIVmtRS1JWWmtUMm8wWjBGS0wyUlphV05CZEhkdlpsTnJVMWgzT1haUU4yeHRha2h3
      Wmt0VVZWbG1la3BJTUd0cWVIVk1VVGw0YmtOS016QTRLMGxEV1RNMVdncFBkRkZJWldZck5uUjZU
      VEEzYzJaRVIzcHhSVE5QZFRSUU5WSklMMkYwVTNneVdESnFZVVl3Y2tkRk5VSm9OVzh6VTI5a1VX
      aFJXRXhuYVZGSWNIcEVDbXhoTlRsS01GaG9UMWRXTW5SclVXTlplbVk0WmsxRGFuSlpVVzVpU0RC
      d1ZHMXhOMjg1UXpBME9ETmhOM1ZZVGxwalRGVXZiVkJOUjNwS2FrWnRhMFFLVUZGcmFuRnFRa3R4
      TldWdk5qQnpTblJ0Yld0alYzQk9aVzlESzJ3clVuRTVUa05CZDBGWlN6aEVZbXBTY0hsaVdIVmlZ
      WFJLY0dJMGNpOHhja2xTTlFwRlpXWXdWWGhWWXpSMFVrRkZhazVxV25Ka1VFSk1ObmhSZWtoaWFV
      eHRlbGxVVjA1blVqUkpTVTU0VkRJelpHZG9jelpZTm14Nk1VWTBhSGxaVEVsU0NpOUtRa040TVdF
      eFIweHhkbEJtVVd4dldsZFNjRXhoYkd0MlUzZDRNbFJWYXpSbk9YUktTVkJwYkRWYU1YUlNTWFoy
      YlZadFZXMWFZVE5aVHpGblQwc0tiMDlSV0VrelVXODBNRGxRTm5WT2FIQTRXbGRXUVRkNWJFRlJa
      M2RXSzFwVWQwdHZWRkJDZW1JeE9UVk5XRnBtYmpCVWRUTkZjV2hOUlZkdGNFWkpOQXBGUVdvNEwx
      TnFSalpXTVdVemVVVTRXRVZRZHdvOWFVdFhMd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83606-4
    - CJIS-5.6.2.1
    - DISA-STIG-RHEL-09-411010
    - NIST-800-171-3.5.6
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(d)
    - NIST-800-53-IA-5(f)
    - PCI-DSS-Req-8.2.4
    - PCI-DSSv4-8.3
    - PCI-DSSv4-8.3.9
    - accounts_maximum_age_login_defs
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set Password Maximum Age
      lineinfile:
        create: true
        dest: /etc/login.defs
        regexp: ^#?PASS_MAX_DAYS
        line: PASS_MAX_DAYS {{ var_accounts_maximum_age_login_defs }}
      when: '"shadow-utils" in ansible_facts.packages'


# Ensure PAM Enforces Password Requirements - Prevent the Use of Dictionary Words
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_dictcheck,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure PAM Enforces Password Requirements - Prevent the Use of Dictionary Words
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_password_pam_dictcheck: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaFpRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      MVJjMUF2TTI5WlRVUlhSMU5RYXpaNWRUQklWR2xCTlhWUlMyMEtka0ZGWVhSdGRXdHZhVXRQT1VG
      SGNUSnBUMWxuUkhoVmFEVjFiU3RqZW10SmFXNW9RVlJuU1hWcWVYUkpXVUVyTWxwc05GQkJXRXBs
      ZERGeWRXdFliZ3BqY1RCd09YQjJkRXNyWTFwaVpHUllkRmgwWlhGbmVXUkxTMEZKYURZMlVtVlJW
      bVJDVG14QlV5czJla3czYUV3MU5rTk9kSEpEVDNabGJVSm5hekpZQ21JeGFrcGtVWEl5TTJKblow
      aERkMHczZGprMFZ6bEVTRXBUUm10T2FUaEJjMlZHWkZaS1pURnRTREJyWTNKT1VHTkhTWGRIVGxa
      R1lVRXdkRFlyUjNNS2NVMW5WWHB4TmxKbVVtdHVSV015VFd4V1ptVnNLMjB2WjFWcVNFZzJXbThy
      VTB0b1QwSlhSVWhEZG5sRVZVUklNaXRMV0ZobFNVcENRWFptZW5SMWVRcFhOQ3RzU3pCQ2RUbExM
      M2RCY2s1eGVsbEZiV1JhY0ZGd1FXdFhjek5yY25sdWJYcEVlVmRMT1RKNmVuRnpjSGRoSzNBeGNV
      TlVOMGcxWVRCdmNFTjFDakJZYTJjeGNWcDNXbWhRYVVkRWJpdHFNMnRMU1RST1JVUkViSEJQTmxC
      Tk1sRnJTa1ZIYldORFZTOUhXbWhDUzFaS1dTdHpiRmRJUmxSNlowNVdkRzRLWW5KMlprc3paRWRq
      YXl0bFZWVlFRVkJuYWtwVlVqZFZTMmxCZFV0Rk5XeEJSV3R4TkU5RVNFRjZXRVJOV0dZelRURk1l
      RGs1VUVka1EzbGhTa2MzTmdwalZrWlZkRUpVVG1KT0szbzBhbnBzTXl0TU5ESlVaMHRxTDJkcUww
      TndkbWRWVFcxRE5qUnpWMll6WWs5S2JHTnVUaTlZVkhGWVFrTXJVVnBST0hCckNtSktiWE5MU2xo
      b2IzQlhaRkk0VVdGWk9USTFjVUZEVlRZclNXMUZiWEJFWms5VFJuUlNUSE4xZGl0T1luVlJSVXRr
      YzBWaVZXaHJTeXRXVVd0emIwWUtUVWN5TW5NclZXRlNZa3RJTm5aaWFISnFTbmRVVmxKQ1NIWk1O
      bWN5UkhaRlVVOVhUMnhRTjNsT1VFdFBPVzFQVWxOSlFXdE9ZalF5U2xsalVsQjZTd3BPYnk5UVdq
      ZzFVR1JqVldJNE1EZFFUR0o1TmdvOVNrZDRiUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-88413-0
    - DISA-STIG-RHEL-09-611105
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(4)
    - NIST-800-53-IA-5(c)
    - accounts_password_pam_dictcheck
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure PAM Enforces Password Requirements - Prevent the Use of Dictionary Words - Find pwquality.conf.d files
      ansible.builtin.find:
        paths: /etc/security/pwquality.conf.d/
        patterns: '*.conf'
      register: pwquality_conf_d_files
      when: '"pam" in ansible_facts.packages'

    - name: Ensure PAM Enforces Password Requirements - Prevent the Use of Dictionary Words - Ensure dictcheck is not set in pwquality.conf.d
      ansible.builtin.lineinfile:
        path: '{{ item.path }}'
        regexp: ^\s*\bdictcheck\b.*
        state: absent
      with_items: '{{ pwquality_conf_d_files.files }}'
      when: '"pam" in ansible_facts.packages'

    - name: Ensure PAM Enforces Password Requirements - Prevent the Use of Dictionary Words - Ensure PAM variable dictcheck is set accordingly
      ansible.builtin.lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*dictcheck
        line: dictcheck = {{ var_password_pam_dictcheck }}
      when: '"pam" in ansible_facts.packages'


# Set Password Strength Minimum Different Characters
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_difok,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure PAM Enforces Password Requirements - Minimum Different Characters
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_password_pam_difok: '2'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaFpRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      TTVTVkF2TVdGMmVWTnlhWGwyVGxVNVNWQnJkRmhHUkRGUGNGWUtjbXhYYTBSSFduWXhWR05NYWpK
      aVlYTXpjRTFsVjJoSWVYcEdRMll5YkRnd05XWlZUMnRuY0hoRFdWUmlVMFpDVkZkaVZtSnZVMVV2
      YzA0MVFUSm9Md3BpVFdac1NtdE5LMUZ4WkZGeVRVRnViamxRVlZBemJqTXdWMFpTUkdKRmJEVTBa
      U3N6V2xoQ1ltcFZOblJrSzBkcVdWb3ZRa2RLVG5kdlV5czVUMjkwQ2tWWWR6bHZkR2xKVTFwa2J5
      OHpaMGN2Y0M5aGVHMUxUV2RaT0ZVeGF5OUpjV05UUzB0d2NtVlJhMnhNVW10cGNuSlNZamg2VURo
      b1JFdFNMemxMT0ZnS1ZFUTBOMHBUTTB4cmNIcHRURTVVUTJsTVRsVTVhRkF5TkdSNE5VMU1MMFJp
      TUdaa05WSm5NWFZyVVZOUGJVNXZiVTFUVjFSTFJ6ZHpNbFF2ZGpBeVF3cGFjekZrV2xkYWQxVlBZ
      bVppYTBKTlFYbzFaMGhTY1RCQloyeDVVSGc1Y0dGaGVscGtjRVpVV2toaFZWbzFRMlprVFZWSlQw
      MDRVRWRpS3pKdFNVSmpDbFUzTUhNM2JUZzRiR0p6ZGxoRFdHNXZSRk5qTTNGRlFtSkpUVGN6TUhk
      alZ6aHZkWE12ZEVzNGVVTXlhazVxZEZRNVJqVmxZVzU2TmtkNFJsaDBOWFlLT0c5YUwyVTJaVXhu
      YkVaTWFtUmxXVXhvUTBoUU4xWlphbFpSU0RSSlRYWXpUMGxxWTBoSVNVSnJLMHhFY1ZaTE9XbGli
      R2xoZDFJMlkzUlJaMWN4YWdwd1YwRk5SblpUZEhwd1NUTTFNV3BoZG1aWlprODJSMGhxVlZsb1lX
      NU5lRWxvU0VwVFp6ZE5hWEpOT0hOcUsyaE5ZVkpRVnpBM2EwRXZVVmcxT1dOVUNuZEpUR2QxZGto
      Q0x6Um9WRmcxUkRCT0szTkZZMjRyYzBwQ1dESlVSRmxXYmpnMWNqaElUVlV3SzFWbFpGWmFjVEJt
      THpCRGRrNWFkbkZCUVdSRFdEa0tlV1ZzYTFsUVp6TTViamc1VG05cVEyRnBURFJpYUVWYWMwUTFi
      azgyWVdaSVpFMTZNRVZYVVVNMWJYVlZObTEzYzJSWFRsUllRVEZLTmpaalZsVkNOUW92YTNabmVq
      bG5jM0JrYXpWNE5UTjNaV3RoZHdvOUwyc3lVQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83564-5
    - CJIS-5.6.2.1.1
    - DISA-STIG-RHEL-09-611115
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(b)
    - NIST-800-53-IA-5(4)
    - NIST-800-53-IA-5(c)
    - accounts_password_pam_difok
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure PAM Enforces Password Requirements - Minimum Different Characters - Find pwquality.conf.d files
      ansible.builtin.find:
        paths: /etc/security/pwquality.conf.d/
        patterns: '*.conf'
      register: pwquality_conf_d_files
      when: '"pam" in ansible_facts.packages'

    - name: Ensure PAM Enforces Password Requirements - Minimum Different Characters - Ensure difok is not set in pwquality.conf.d
      ansible.builtin.lineinfile:
        path: '{{ item.path }}'
        regexp: ^\s*\bdifok\b.*
        state: absent
      with_items: '{{ pwquality_conf_d_files.files }}'
      when: '"pam" in ansible_facts.packages'

    - name: Ensure PAM Enforces Password Requirements - Minimum Different Characters - Ensure PAM variable difok is set accordingly
      ansible.builtin.lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*difok
        line: difok = {{ var_password_pam_difok }}
      when: '"pam" in ansible_facts.packages'


# Ensure PAM Enforces Password Requirements - Enforce for root User
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_enforce_root,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure PAM Enforces Password Requirements - Enforce for root User
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86356-3
    - DISA-STIG-RHEL-09-611060
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(4)
    - NIST-800-53-IA-5(c)
    - accounts_password_pam_enforce_root
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaGFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rp
      czRZMUF2YVVGV2FrSXJWM016ZVdSSmNVcGhaMkZaYUVZMVptVUtZa1ZPTkhaNVRVZDBibVJ3ZG5a
      dFlXZEdkekJMTVhWbFdWUXpjVWRVUkZONFVuSlhjbWR4WWs4d1lTc3ZZVzVvU1VseU1HbFdSMFl2
      VkV4YWNVSjRTQW8yZDJKUWRXZG1OU3MwWVdaVFIxaFRhREYxY25OUVJ6SlFlRWgyYUVGd1QxQnZa
      RVJFZERZd2VGRktVMjQ1WlU1NlRsTnpjMDk2Y1VwamRrOHdMMlpSQ2tseWNraFBWemh4WmpGVVUz
      RldWa1V3V0hwTlNVVk5lbmRuU2xsNk4yZ3dhVFpaUmxGaE9VVTVja0ZuZFhONFlXODRjV2hWVlRk
      QlRFWmxlbVpSY1U0S1l6RnRVQ3RITVhCVFpVOVdaMHhEWkhaUlVIQk9aMHBaVjB0bk56ZGlZV3RG
      WTNodVNUQjFTRXBTV1VSMU1WSTJUbVF6Vm14VU1FNHllVmRQZFN0VWVncE9la1ZzTUdZM2FuaFFW
      a1IwUkVKdGVIVkZRazVCTjJVNFQzWjJRM2hhYUZkWVVGZDVTekpNTjBOa09XdFdWbkEyTXpCYVlt
      WTNWamg2YlU4MlJubDZDbEZ3YkUwclVFMTVLMmxTTm5sd1pqUldXRmx6TjJGalJtdFpkVm8yTlZO
      clNsWkxZMDlsVUVwbVJsQldVWGRZUzFwRmIycEtaWE53UkVkcWRFZE9WRFFLVW1SWlVsSmFOREpE
      Wkd0c05WRlZiWGxDYjFkUFVHcE9kbGg0YXk5UFFVeG5jVE12ZVhvMU9VNUdSSEZOU1RSWGIzQm5T
      RVl2V2xJM1ltRktaVUZ3VUFwSU1YVjNUVEp2TjNCVU5WY3ZSM05ETldkMllrTTNVblF2ZDFCQ01t
      MWhkMkpxVjJ0WGNWTlFMMk5PZGpOWk5WUTBRWHBPZGtKYVVUTllXRVpsUkM4MENuSnphRzlFTDBa
      Rk9XRkRRbE5RV1M5RFJsSnRTMGQ0Ym10clozbE9WblFyVEdsdmMwVnNiVWg2YUVaUmJ6TnFjVVUx
      Tmk4eFNIZzNSMmxQV1doSmNISUtNWE4zYzJWTVFVMDFhSFZ5YVdsT1QwNWtRWFpsTWpWRU1FcFJO
      alpMV0djdmQyTXdhR05NVFVzck5VMXZNa3RUZG1WTk9YRmhha3RtVUhsWlRtSkNZZ3BtWjA5cFdG
      ZFZSR2RuUjFwSlFXOWhUbFpQVUFvOU4wbExTd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure PAM Enforces Password Requirements - Enforce for root User
      lineinfile:
        path: /etc/security/pwquality.conf
        create: true
        regexp: ''
        line: enforce_for_root
        state: present
      when: '"pam" in ansible_facts.packages'


# Set Password to Maximum of Three Consecutive Repeating Characters
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_maxrepeat,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set Password Maximum Consecutive Repeating Characters
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_password_pam_maxrepeat: '3'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaGFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      NTBZMUZCU1dwdmJEaE9UVTVMVWxGck5YVnBjbEEyVjNFeFYxb0tNMk5MV1dKSmQwRllUR1JTY1Vo
      d1pHRTJUMjlUVDBzMmVEQk9RMFJZU0hoUVUzUlplVEZ2Ykhab1VDOVBaSEI2TUdwSGNFTjROa3BK
      WkRad2FURktUd293U1U0Mk0yOXhWWEp4YVVSaFZHZzVVM2t3Y1RneVExcFNNMUEyYlZka09YTjZh
      M2s0ZW5aTGJHMXVjV1JGWW5WRE1VSXJlVkJtY1ZrNGFraHRlRk0yQ2tVMWJVeG1WM2RzYmxkemNH
      bFVZblZ6ZUV3clNqUnhVRUZhY2pscmRuWmtaMGg2ZW1oak9VdGlOWFZOYTBvdlZsZDNkVTFYSzBz
      MlZGUmFVRWhwVkRFS2FITkNRMHhQY0c1VkwzSktValE0WlhKMFpuaE9URU0yV1RGdVNIZDFTVzQy
      TjFWTGFrMDJORmRhWlVRellTdDRiRlpFTDFkNmEwSnNkVWc1TWxGMVNRb3lhWEJUTWpBcmQxRTBM
      Mm81TmxCWksyOVRhVFZJTmt4MGFFMXBhMFJqUkZvM2FDdGFLMEZoUjBaR2NVMVZjRUZ6VWpOVFJ6
      SjFWWE5oTkRCaVVUWTVDbFEzTVVNelVIWTNiMVIxYkdoRFJEQm9NVzl5WW5wWlFXMHlaRlY1U0U5
      aFpHUjFlREpTWTJVeFdsZDNibTgwVlhJcmNHUnhOazluZDJ4dVIwSXplbTBLT1hCcFkzUkNUSFZI
      ZUcxdVJtMDBPRGM0VlhodmVVTkpiRk0zY2tKNlJVUTNWMEpuU1dkb1kxUnNaVWxGWW5sbksxY3JT
      bFZCVUU0NVkxTTRTSGxpUlFvMUwzSjNjMFExU2pRMFNqVnJaaXRxVWswdllWZEhPRlZXTnpCbU9F
      aGpNR2hpTHpkTldIRkZjVmQxUlhoTFFuQmpSbEozV0ROdk5FOWhWblp1UXpOdUNtazRaekJ1TTJs
      dlFXRTRWbU5wVm1semR6WmtSa3B0Um1sR2EycGpSazFVZGxWWkwwbFVabU55VkdKS2JIWmxiSEky
      U2tsdVp6ZDRXRXd4UjBodVlqUUtSVXRtYTNWTVNYbDZUV3RsZVVjMmJYTlFNazlSVnk5QmIyRjNW
      M1ZqZW1STFIyRkNlRmR0T0M5eE4wWlpSV2Q0U1dveEwyVk9RWG93YkdNdlNVNVJRZ3BFWlU5SGNr
      OXZaa1JRTXpGdGQzUmtNa1l5T0FvOWVuUkpLd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83567-8
    - DISA-STIG-RHEL-09-611125
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(4)
    - NIST-800-53-IA-5(c)
    - accounts_password_pam_maxrepeat
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set Password Maximum Consecutive Repeating Characters - Find pwquality.conf.d files
      ansible.builtin.find:
        paths: /etc/security/pwquality.conf.d/
        patterns: '*.conf'
      register: pwquality_conf_d_files
      when: '"pam" in ansible_facts.packages'

    - name: Set Password Maximum Consecutive Repeating Characters - Ensure maxrepeat is not set in pwquality.conf.d
      ansible.builtin.lineinfile:
        path: '{{ item.path }}'
        regexp: ^\s*\bmaxrepeat\b.*
        state: absent
      with_items: '{{ pwquality_conf_d_files.files }}'
      when: '"pam" in ansible_facts.packages'

    - name: Set Password Maximum Consecutive Repeating Characters - Ensure PAM variable maxrepeat is set accordingly
      ansible.builtin.lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*maxrepeat
        line: maxrepeat = {{ var_password_pam_maxrepeat }}
      when: '"pam" in ansible_facts.packages'


# Ensure PAM Enforces Password Requirements - Minimum Different Categories
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_minclass,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure PAM Enforces Password Requirements - Minimum Different Categories
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_password_pam_minclass: '4'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaGFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      SlFjMUFyZDFaUlJYSk9XVEkyZFRSSmFWY3dSWFE1VlU5U1RFY0tVbU14TDFwQlV6bFBVVTl4VHpK
      cmMyVkJkMDlxTUZweVpWRkJXSGxCVDIxd1ozUnhVVGhZV1VWRU9VOUZMMkZEUjBSblRVNXhjamxX
      YlVkcGRVNTBZUXBSVmxWclZXUkJSMngxVDFKUGVIUlFXRVZGVG1ab2VGSnNiMEYxYzFCMFREYzNj
      M2hOUVcxT05VTlRWMEpzU0RVMlprbzVUbGxJVHpSRE5HTkVRMDVSQ2s5bk9VVXJVamx3VW1wUE1V
      aFZaWGxYVVUwMlpubHliRU56T0d0TE5rY3liV1ZITmxGMFVGZFZhMDR5UWk5WldXeENRVEZLUzB0
      cVNEZHdaVWROY1RBS1EyUldUVXRFZUVSYVlYUnRiMjUxUVU1b1lXcGxMME5pZEVaT1JtSnFTQzkx
      ZUV0NVdtTXlVemhCWjNRNVQzTkRNMGMwTjFoV1ZVaDBhQ3QzSzFoSVlnbzNZbGMyVEhGbGFERjZT
      WGxoVW5sU0t6QTNUV28zS3l0dk9TOW5PWGhIUm5aMGQySndaekpzYW01aVpqTnJkVU5IZUZoeGQz
      TktkM0kyTW1ZMloxSndDbWM0V0ZOMGFVUlpiQ3ROYjFSVVFVTmlUbTlzYzFWbGVtcEZWM0p5TW1o
      aE1GZEdRU3RaWmxJNGRXeG5XamtyU0VSVk5XTXdWVFprVVd4VVN6UXZNV2tLZW14a1VWQnhSbTVp
      Wm5SMGMzVlhjVlJCTkZCRE1HdHlaREZNVW1WaVQwMUNia3MwZDNGNFREVm1abXhDVTNNM1oxVlFR
      MFpTS3pOUVpGSjRSVmxMZGdwR2RUQlVPRnB0WW1oSmVVUjZOVzVQU1NzM1dFTk1ZM0JTYm5KTVow
      cExXbU5vUnpnM2VtZHdlbWhZVGswelZGcDNRbkkwV21kS01DOU9ObXRxZGxOcUNrMXNjMVZwUjI1
      UE1FbENlVEkyYkZVM2ExYzRaVXRCY1ZNd2JFeE5SVGx2VTFaRlZqUjRORFpRTVZGWlJsQTFjMWxT
      VEVOVlEzUXhjbGh5WkhaQmVHUUtLM2hHZEM4MVVWVXJla2xSTDA5Ull6SkNRVVZCUjJSMlptOUxl
      bmxCY3k5TFkyVTNRbEZrUVN0cE56UkxWa1F6YlRrd1ozRmtNbGs1VVRGamNUaFJaUXBUTVROa1lX
      UjVkRmRKWWpBNWRFVTRiVUZ3V0FvOWFVSkJRd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83563-7
    - DISA-STIG-RHEL-09-611130
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(4)
    - NIST-800-53-IA-5(c)
    - accounts_password_pam_minclass
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure PAM Enforces Password Requirements - Minimum Different Categories - Find pwquality.conf.d files
      ansible.builtin.find:
        paths: /etc/security/pwquality.conf.d/
        patterns: '*.conf'
      register: pwquality_conf_d_files
      when: '"pam" in ansible_facts.packages'

    - name: Ensure PAM Enforces Password Requirements - Minimum Different Categories - Ensure minclass is not set in pwquality.conf.d
      ansible.builtin.lineinfile:
        path: '{{ item.path }}'
        regexp: ^\s*\bminclass\b.*
        state: absent
      with_items: '{{ pwquality_conf_d_files.files }}'
      when: '"pam" in ansible_facts.packages'

    - name: Ensure PAM Enforces Password Requirements - Minimum Different Categories - Ensure PAM variable minclass is set accordingly
      ansible.builtin.lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*minclass
        line: minclass = {{ var_password_pam_minclass }}
      when: '"pam" in ansible_facts.packages'


# Ensure PAM Enforces Password Requirements - Minimum Length
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_minlen,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure PAM Enforces Password Requirements - Minimum Length
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_password_pam_minlen: '14'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaGFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      bFdWVkF2UVM5U1UwcHNkMDFWVFdGVmNrcExXa04xVURVNVZGb0tXV3RQU1ZvMFRHeHpUV1J2VW0x
      Q01XRjZkMmRYYVRkTFZrbHJVMjFaVTI1dlZYZFRVSFpSU0ZOc04yNVFTMUpXZUhSclltUndNa0ZN
      Um5BMFdUWkNkZ29yYjJRMk5qUXhRVkUyTm5CbVRYZDFiR2RMWjIxSFkzZHVlbXh5Tm1OdmEwMTZk
      RFpKTTFvM1prRnZRbUY2WW5OMkwwUkpPR3hDVmt4dVFuSk5ZV3BQQ25Cb09UaDZhVkJOWm01NU4w
      aEJiak5hVGxOUGQybGtlVFUyVEVrNFNGVjBiRzF5Ykd4UU0wRndkV1ZpYUROb2RuRTBVVFJTYWtG
      eVprRmlOVkpRTjNvS1EzTXpMM1IwUWxWYVZWaFVhV2N6SzFJMWNVaDRTbFZxZGs1NE0xaGtUa2hw
      VWpSNWRYSkdiWEpVUTFORWFrZENXRVZ1WWpCRmJITlhObmxzTVZKQ1ZncENkRVpKTjBGaFpDdFlj
      elJzTUhNeU9XMHJSRTlpSzBkSWVXb3lOblI2YVZBeU9WTXlRMEpGU2pJMmJIQXpORlUwY0dKTmJV
      RTVSUzl6WjBvd1pqUldDbVJWTkRseWFIUXZiMnBSUWtsVE56UTJVV3BtYmk5UlIyeHVXWFZhWnk5
      WFdHWXpWVEZ6YURJMWFXNXVlRFpMV21KcEswcFdVRkZCVDFSNmFEbExTRUlLWmxwUlNVNU5URWRK
      VVZOS09HaERXRnBOTkdSTGVFbG9URzAwV0hsVU9FTjZUa1pLYTBFdlJEVldUa1ZVVFhGQ01UZFVM
      MklyUm1odlJWQTNVVzQxUlFwdlVETlZSbFJzTnpoVWFWUXdXVEZyWTJWRlluRTFlalpoTkhKWllW
      RjJkR0YzT0dwUFZtNUVVVlFyTkU5SFltUkhUMGRrUlhSaVVsSjZOVWc1YURaRUNtNUdWMFZSYjNG
      Q1dHOXdlbVpoV0dac1NFRkhOVUV5WVM5VWIxTkdVazloVjFGWmVGa3lXWGRGTm1wVGFrMWtibXc1
      YVRoak9EaE9aRlJTVVhoSllVVUtkVnBLUjFSSU9GUkJRbFF3YVZvMk5qWnlVV2xYZUdzMmVWVkZW
      bEZhUkRabk9IbzJObk5LVDFaM2NFZ3JlR2hoUmtNM1NXeFlRVWQyYUZGWmNYZHhaQXBWT0hsb2FI
      bHNTQzlEVkZncllUbFdRM1YzU3dvOWVEYzFNQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83579-3
    - CJIS-5.6.2.1.1
    - DISA-STIG-RHEL-09-611090
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(4)
    - NIST-800-53-IA-5(c)
    - PCI-DSS-Req-8.2.3
    - PCI-DSSv4-8.3
    - PCI-DSSv4-8.3.6
    - accounts_password_pam_minlen
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure PAM Enforces Password Requirements - Minimum Length - Find pwquality.conf.d files
      ansible.builtin.find:
        paths: /etc/security/pwquality.conf.d/
        patterns: '*.conf'
      register: pwquality_conf_d_files
      when: '"pam" in ansible_facts.packages'

    - name: Ensure PAM Enforces Password Requirements - Minimum Length - Ensure minlen is not set in pwquality.conf.d
      ansible.builtin.lineinfile:
        path: '{{ item.path }}'
        regexp: ^\s*\bminlen\b.*
        state: absent
      with_items: '{{ pwquality_conf_d_files.files }}'
      when: '"pam" in ansible_facts.packages'

    - name: Ensure PAM Enforces Password Requirements - Minimum Length - Ensure PAM variable minlen is set accordingly
      ansible.builtin.lineinfile:
        create: true
        dest: /etc/security/pwquality.conf
        regexp: ^#?\s*minlen
        line: minlen = {{ var_password_pam_minlen }}
      when: '"pam" in ansible_facts.packages'


# Limit Password Reuse: password-auth
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_pwhistory_remember_password_auth,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle,multi_platform_almalinux
# reboot = false
# strategy = configure
# complexity = low
# disruption = medium
- name: 'Limit Password Reuse: password-auth'
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_password_pam_remember: '24'
    var_password_pam_remember_control_flag: requisite,required
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaGhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      bDNiMUF2VW1kd2QxRkVRM0o0UVdGNmFrMXFNU3QxTkRWeFpYWUthR2RvT0ZoU0sydE9VRGw2V0dO
      U2NESjFXVWw0V21jd2VUSktkbEZEUm5aeFZYSktlbU4xVUdFclZWZFBia3RCV2pCcmVqSmtaalpD
      TVVsSE1ESkZTd28xT0ZkSldHOHlZMmw2WkdscmVWTnZjMVZzU1RaVWJYUmlaWFp3VDIxNlEwZHNT
      eko1ZERKcE16SjJSak01WTJ0b1dYUkVhRkJFV2xOUGEwOWxVSGt6Q25CRFNrNDVURGg0WTNoa1RH
      bGtjMmgyU1hwalFWbENiRXczY1RCblVYRm1ka0ZOVkVSR2EwdE1ZM0paV0c1dlYzTjBSbnBIUkhW
      bVNqaHFlR3czUlhvS1dWUklhRU4yVlhKVGFHWmlhVFpJWkhsQ1QySk5WbFF4Y1Vab2NrWldUblJW
      TTNwM01uSkdlbGNyVmxOVmJreFNiMjVDYlc5aFduSllVR04yVUZaeGVncDNlVE5YYlcxR05GZ3lj
      VlpwUzNBeWRsRklTR2RXVGxWS2JVZEJWRTl3TjFodFJuRk1lVTlGU1ZNeU1FbERTbVJQYWxnNVV6
      Wk9WMmxWTlV4VVNUSTNDaXRtZWpGd2VrUlpXRFphT0RoaWMyVktiSEY0Y0RCYVFuWldkMnhLWVUx
      eVFuSlBaRXR3Ym5kV2RtNTNkWEpOTTJwR1JIcDROalY0U21SeGJYbDZTV2dLV1cxdE5YSm9Zek5Y
      VFhsSlRGaGtkbVJNTWpGSGMwVkdhMDVNTUN0alMybzRhVlozTURkdU1UZFZTVzlzUW5wak5GRjBN
      VlZ1TWtJNFMwRXJSa05EYkFwaWFYWndkRlZPTkd4emVtcHdhVEl6Y0dkS05GcFZkV3huYW5FNE1V
      dEJabTVJTkUxVmMyUlFWemQ1Ym5Nd2FFaEpiVmRvTVRSamJHZGxVR3N4ZDI5RUNsazVOMUZaUWxC
      b1ZIbFBjVE5zY0cxVGJWTm9RbmQzTVRSWE5tOWtTVGt2YlcxNEszYzJSVTlTUWtSSVpHNTNWemx6
      YWs5UlJFbHJkRlZsZFV4SVIxa0tTbVZrVDBSWllYRnZZVFZqTDB4TFJWWTFMM0ZwWTBWUlFYQm9a
      bmRYVURCVFpURndZekl3VG5nMlJFcFZjMkZTTjBRM01tSm1ValJVU0d0elFraE1id3BSYXpsTGJU
      STFRamRxVkVoRVIwbElUSEpIU3dvOVVYRlVWd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86354-8
    - CJIS-5.6.2.1.1
    - NIST-800-171-3.5.8
    - NIST-800-53-IA-5(1)(e)
    - NIST-800-53-IA-5(f)
    - PCI-DSS-Req-8.2.5
    - PCI-DSSv4-8.3
    - PCI-DSSv4-8.3.7
    - accounts_password_pam_pwhistory_remember_password_auth
    - configure_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: 'Limit Password Reuse: password-auth - Check if system relies on authselect tool'
      ansible.builtin.stat:
        path: /usr/bin/authselect
      register: result_authselect_present
      when: '"pam" in ansible_facts.packages'

    - name: 'Limit Password Reuse: password-auth - Collect the available authselect features'
      ansible.builtin.command:
        cmd: authselect list-features sssd
      register: result_authselect_available_features
      changed_when: false
      when:
        - '"pam" in ansible_facts.packages'
        - result_authselect_present.stat.exists

    - name: 'Limit Password Reuse: password-auth - Enable pam_pwhistory.so using authselect feature'
      block:

        - name: 'Limit Password Reuse: password-auth - Check integrity of authselect current profile'
          ansible.builtin.command:
            cmd: authselect check
          register: result_authselect_check_cmd
          changed_when: false
          failed_when: false

        - name: 'Limit Password Reuse: password-auth - Informative message based on the authselect integrity check result'
          ansible.builtin.assert:
            that:
              - result_authselect_check_cmd.rc == 0
            fail_msg:
              - authselect integrity check failed. Remediation aborted!
              - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
              - It is not recommended to manually edit the PAM files when authselect tool is available.
              - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
            success_msg:
              - authselect integrity check passed

        - name: 'Limit Password Reuse: password-auth - Get authselect current features'
          ansible.builtin.shell:
            cmd: authselect current | tail -n+3 | awk '{ print $2 }'
          register: result_authselect_features
          changed_when: false
          when:
            - result_authselect_check_cmd is success

        - name: 'Limit Password Reuse: password-auth - Ensure "with-pwhistory" feature is enabled using authselect tool'
          ansible.builtin.command:
            cmd: authselect enable-feature with-pwhistory
          register: result_authselect_enable_feature_cmd
          when:
            - result_authselect_check_cmd is success
            - result_authselect_features.stdout is not search("with-pwhistory")

        - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_enable_feature_cmd is not skipped
            - result_authselect_enable_feature_cmd is success
      when:
        - '"pam" in ansible_facts.packages'
        - result_authselect_present.stat.exists
        - result_authselect_available_features.stdout is search("with-pwhistory")

    - name: 'Limit Password Reuse: password-auth - Enable pam_pwhistory.so in appropriate PAM files'
      block:

        - name: 'Limit Password Reuse: password-auth - Define the PAM file to be edited as a local fact'
          ansible.builtin.set_fact:
            pam_file_path: /etc/pam.d/password-auth

        - name: 'Limit Password Reuse: password-auth - Check if system relies on authselect tool'
          ansible.builtin.stat:
            path: /usr/bin/authselect
          register: result_authselect_present

        - name: 'Limit Password Reuse: password-auth - Ensure authselect custom profile is used if authselect is present'
          block:

            - name: 'Limit Password Reuse: password-auth - Check integrity of authselect current profile'
              ansible.builtin.command:
                cmd: authselect check
              register: result_authselect_check_cmd
              changed_when: false
              failed_when: false

            - name: 'Limit Password Reuse: password-auth - Informative message based on the authselect integrity check result'
              ansible.builtin.assert:
                that:
                  - result_authselect_check_cmd.rc == 0
                fail_msg:
                  - authselect integrity check failed. Remediation aborted!
                  - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                  - It is not recommended to manually edit the PAM files when authselect tool is available.
                  - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                success_msg:
                  - authselect integrity check passed

            - name: 'Limit Password Reuse: password-auth - Get authselect current profile'
              ansible.builtin.shell:
                cmd: authselect current -r | awk '{ print $1 }'
              register: result_authselect_profile
              changed_when: false
              when:
                - result_authselect_check_cmd is success

            - name: 'Limit Password Reuse: password-auth - Define the current authselect profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is match("custom/")

            - name: 'Limit Password Reuse: password-auth - Define the new authselect custom profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: custom/hardening
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is not match("custom/")

            - name: 'Limit Password Reuse: password-auth - Get authselect current features to also enable them in the custom profile'
              ansible.builtin.shell:
                cmd: authselect current | tail -n+3 | awk '{ print $2 }'
              register: result_authselect_features
              changed_when: false
              when:
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: password-auth - Check if any custom profile with the same name was already created'
              ansible.builtin.stat:
                path: /etc/authselect/{{ authselect_custom_profile }}
              register: result_authselect_custom_profile_present
              changed_when: false
              when:
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: password-auth - Create an authselect custom profile based on the current profile'
              ansible.builtin.command:
                cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
              when:
                - result_authselect_check_cmd is success
                - authselect_current_profile is not match("^(custom/|local)")
                - not result_authselect_custom_profile_present.stat.exists

            - name: 'Limit Password Reuse: password-auth - Create an authselect custom profile based on sssd profile'
              ansible.builtin.command:
                cmd: authselect create-profile hardening -b sssd
              when:
                - result_authselect_check_cmd is success
                - authselect_current_profile is match("local")
                - not result_authselect_custom_profile_present.stat.exists

            - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: password-auth - Ensure the authselect custom profile is selected'
              ansible.builtin.command:
                cmd: authselect select {{ authselect_custom_profile }}
              register: result_pam_authselect_select_profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: password-auth - Restore the authselect features in the custom profile'
              ansible.builtin.command:
                cmd: authselect enable-feature {{ item }}
              loop: '{{ result_authselect_features.stdout_lines }}'
              register: result_pam_authselect_restore_features
              when:
                - result_authselect_profile is not skipped
                - result_authselect_features is not skipped
                - result_pam_authselect_select_profile is not skipped

            - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - result_pam_authselect_restore_features is not skipped

            - name: 'Limit Password Reuse: password-auth - Change the PAM file to be edited according to the custom authselect profile'
              ansible.builtin.set_fact:
                pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
          when:
            - result_authselect_present.stat.exists

        - name: 'Limit Password Reuse: password-auth - Define a fact for control already filtered in case filters are used'
          ansible.builtin.set_fact:
            pam_module_control: '{{ var_password_pam_remember_control_flag.split(",")[0] }}'

        - name: 'Limit Password Reuse: password-auth - Check if expected PAM module line is present in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            regexp: ^\s*password\s+{{ pam_module_control | regex_escape() }}\s+pam_pwhistory.so\s*.*
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_line_present

        - name: 'Limit Password Reuse: password-auth - Include or update the PAM module line in {{ pam_file_path }}'
          block:

            - name: 'Limit Password Reuse: password-auth - Check if required PAM module line is present in {{ pam_file_path }} with different control'
              ansible.builtin.lineinfile:
                path: '{{ pam_file_path }}'
                regexp: ^\s*password\s+.*\s+pam_pwhistory.so\s*
                state: absent
              check_mode: true
              changed_when: false
              register: result_pam_line_other_control_present

            - name: 'Limit Password Reuse: password-auth - Ensure the correct control for the required PAM module line in {{ pam_file_path }}'
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: ^(\s*password\s+).*(\bpam_pwhistory.so.*)
                replace: \1{{ pam_module_control }} \2
              register: result_pam_module_edit
              when:
                - result_pam_line_other_control_present.found == 1

            - name: 'Limit Password Reuse: password-auth - Ensure the required PAM module line is included in {{ pam_file_path }}'
              ansible.builtin.lineinfile:
                dest: '{{ pam_file_path }}'
                insertafter: ^password.*requisite.*pam_pwquality\.so
                line: password    {{ pam_module_control }}    pam_pwhistory.so
              register: result_pam_module_add
              when:
                - result_pam_line_other_control_present.found == 0 or result_pam_line_other_control_present.found > 1

            - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present is defined
                - result_authselect_present.stat.exists
                - |-
                  (result_pam_module_add is defined and result_pam_module_add.changed)
                   or (result_pam_module_edit is defined and result_pam_module_edit.changed)
          when:
            - result_pam_line_present.found is defined
            - result_pam_line_present.found == 0
      when:
        - '"pam" in ansible_facts.packages'
        - |
          (result_authselect_available_features.stdout is defined and result_authselect_available_features.stdout is not search("with-pwhistory")) or result_authselect_available_features is not defined

    - name: 'Limit Password Reuse: password-auth - Check the presence of /etc/security/pwhistory.conf file'
      ansible.builtin.stat:
        path: /etc/security/pwhistory.conf
      register: result_pwhistory_conf_check
      when: '"pam" in ansible_facts.packages'

    - name: 'Limit Password Reuse: password-auth - pam_pwhistory.so parameters are configured in /etc/security/pwhistory.conf file'
      block:

        - name: 'Limit Password Reuse: password-auth - Ensure the pam_pwhistory.so remember parameter in /etc/security/pwhistory.conf'
          ansible.builtin.lineinfile:
            path: /etc/security/pwhistory.conf
            regexp: ^\s*remember\s*=
            line: remember = {{ var_password_pam_remember }}
            state: present

        - name: 'Limit Password Reuse: password-auth - Ensure the pam_pwhistory.so remember parameter is removed from PAM files'
          block:

            - name: 'Limit Password Reuse: password-auth - Check if /etc/pam.d/password-auth file is present'
              ansible.builtin.stat:
                path: /etc/pam.d/password-auth
              register: result_pam_file_present

            - name: 'Limit Password Reuse: password-auth - Check the proper remediation for the system'
              block:

                - name: 'Limit Password Reuse: password-auth - Define the PAM file to be edited as a local fact'
                  ansible.builtin.set_fact:
                    pam_file_path: /etc/pam.d/password-auth

                - name: 'Limit Password Reuse: password-auth - Check if system relies on authselect tool'
                  ansible.builtin.stat:
                    path: /usr/bin/authselect
                  register: result_authselect_present

                - name: 'Limit Password Reuse: password-auth - Ensure authselect custom profile is used if authselect is present'
                  block:

                    - name: 'Limit Password Reuse: password-auth - Check integrity of authselect current profile'
                      ansible.builtin.command:
                        cmd: authselect check
                      register: result_authselect_check_cmd
                      changed_when: false
                      failed_when: false

                    - name: 'Limit Password Reuse: password-auth - Informative message based on the authselect integrity check result'
                      ansible.builtin.assert:
                        that:
                          - result_authselect_check_cmd.rc == 0
                        fail_msg:
                          - authselect integrity check failed. Remediation aborted!
                          - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                          - It is not recommended to manually edit the PAM files when authselect tool is available.
                          - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                        success_msg:
                          - authselect integrity check passed

                    - name: 'Limit Password Reuse: password-auth - Get authselect current profile'
                      ansible.builtin.shell:
                        cmd: authselect current -r | awk '{ print $1 }'
                      register: result_authselect_profile
                      changed_when: false
                      when:
                        - result_authselect_check_cmd is success

                    - name: 'Limit Password Reuse: password-auth - Define the current authselect profile as a local fact'
                      ansible.builtin.set_fact:
                        authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                        authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
                      when:
                        - result_authselect_profile is not skipped
                        - result_authselect_profile.stdout is match("custom/")

                    - name: 'Limit Password Reuse: password-auth - Define the new authselect custom profile as a local fact'
                      ansible.builtin.set_fact:
                        authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                        authselect_custom_profile: custom/hardening
                      when:
                        - result_authselect_profile is not skipped
                        - result_authselect_profile.stdout is not match("custom/")

                    - name: 'Limit Password Reuse: password-auth - Get authselect current features to also enable them in the custom profile'
                      ansible.builtin.shell:
                        cmd: authselect current | tail -n+3 | awk '{ print $2 }'
                      register: result_authselect_features
                      changed_when: false
                      when:
                        - result_authselect_profile is not skipped
                        - authselect_current_profile is not match("custom/")

                    - name: 'Limit Password Reuse: password-auth - Check if any custom profile with the same name was already created'
                      ansible.builtin.stat:
                        path: /etc/authselect/{{ authselect_custom_profile }}
                      register: result_authselect_custom_profile_present
                      changed_when: false
                      when:
                        - authselect_current_profile is not match("custom/")

                    - name: 'Limit Password Reuse: password-auth - Create an authselect custom profile based on the current profile'
                      ansible.builtin.command:
                        cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
                      when:
                        - result_authselect_check_cmd is success
                        - authselect_current_profile is not match("^(custom/|local)")
                        - not result_authselect_custom_profile_present.stat.exists

                    - name: 'Limit Password Reuse: password-auth - Create an authselect custom profile based on sssd profile'
                      ansible.builtin.command:
                        cmd: authselect create-profile hardening -b sssd
                      when:
                        - result_authselect_check_cmd is success
                        - authselect_current_profile is match("local")
                        - not result_authselect_custom_profile_present.stat.exists

                    - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
                      ansible.builtin.command:
                        cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
                      when:
                        - result_authselect_check_cmd is success
                        - result_authselect_profile is not skipped
                        - authselect_current_profile is not match("custom/")
                        - authselect_custom_profile is not match(authselect_current_profile)

                    - name: 'Limit Password Reuse: password-auth - Ensure the authselect custom profile is selected'
                      ansible.builtin.command:
                        cmd: authselect select {{ authselect_custom_profile }}
                      register: result_pam_authselect_select_profile
                      when:
                        - result_authselect_check_cmd is success
                        - result_authselect_profile is not skipped
                        - authselect_current_profile is not match("custom/")
                        - authselect_custom_profile is not match(authselect_current_profile)

                    - name: 'Limit Password Reuse: password-auth - Restore the authselect features in the custom profile'
                      ansible.builtin.command:
                        cmd: authselect enable-feature {{ item }}
                      loop: '{{ result_authselect_features.stdout_lines }}'
                      register: result_pam_authselect_restore_features
                      when:
                        - result_authselect_profile is not skipped
                        - result_authselect_features is not skipped
                        - result_pam_authselect_select_profile is not skipped

                    - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
                      ansible.builtin.command:
                        cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
                      when:
                        - result_authselect_check_cmd is success
                        - result_authselect_profile is not skipped
                        - result_pam_authselect_restore_features is not skipped

                    - name: 'Limit Password Reuse: password-auth - Change the PAM file to be edited according to the custom authselect profile'
                      ansible.builtin.set_fact:
                        pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
                  when:
                    - result_authselect_present.stat.exists

                - name: 'Limit Password Reuse: password-auth - Define a fact for control already filtered in case filters are used'
                  ansible.builtin.set_fact:
                    pam_module_control: ''

                - name: 'Limit Password Reuse: password-auth - Ensure the "remember" option from "pam_pwhistory.so" is not present in {{ pam_file_path }}'
                  ansible.builtin.replace:
                    dest: '{{ pam_file_path }}'
                    regexp: (.*password.*pam_pwhistory.so.*)\bremember\b=?[0-9a-zA-Z]*(.*)
                    replace: \1\2
                  register: result_pam_option_removal

                - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b
                  when:
                    - result_authselect_present.stat.exists
                    - result_pam_option_removal is changed
              when:
                - result_pam_file_present.stat.exists
      when:
        - '"pam" in ansible_facts.packages'
        - result_pwhistory_conf_check.stat.exists

    - name: 'Limit Password Reuse: password-auth - pam_pwhistory.so parameters are configured in PAM files'
      block:

        - name: 'Limit Password Reuse: password-auth - Define the PAM file to be edited as a local fact'
          ansible.builtin.set_fact:
            pam_file_path: /etc/pam.d/password-auth

        - name: 'Limit Password Reuse: password-auth - Check if system relies on authselect tool'
          ansible.builtin.stat:
            path: /usr/bin/authselect
          register: result_authselect_present

        - name: 'Limit Password Reuse: password-auth - Ensure authselect custom profile is used if authselect is present'
          block:

            - name: 'Limit Password Reuse: password-auth - Check integrity of authselect current profile'
              ansible.builtin.command:
                cmd: authselect check
              register: result_authselect_check_cmd
              changed_when: false
              failed_when: false

            - name: 'Limit Password Reuse: password-auth - Informative message based on the authselect integrity check result'
              ansible.builtin.assert:
                that:
                  - result_authselect_check_cmd.rc == 0
                fail_msg:
                  - authselect integrity check failed. Remediation aborted!
                  - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                  - It is not recommended to manually edit the PAM files when authselect tool is available.
                  - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                success_msg:
                  - authselect integrity check passed

            - name: 'Limit Password Reuse: password-auth - Get authselect current profile'
              ansible.builtin.shell:
                cmd: authselect current -r | awk '{ print $1 }'
              register: result_authselect_profile
              changed_when: false
              when:
                - result_authselect_check_cmd is success

            - name: 'Limit Password Reuse: password-auth - Define the current authselect profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is match("custom/")

            - name: 'Limit Password Reuse: password-auth - Define the new authselect custom profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: custom/hardening
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is not match("custom/")

            - name: 'Limit Password Reuse: password-auth - Get authselect current features to also enable them in the custom profile'
              ansible.builtin.shell:
                cmd: authselect current | tail -n+3 | awk '{ print $2 }'
              register: result_authselect_features
              changed_when: false
              when:
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: password-auth - Check if any custom profile with the same name was already created'
              ansible.builtin.stat:
                path: /etc/authselect/{{ authselect_custom_profile }}
              register: result_authselect_custom_profile_present
              changed_when: false
              when:
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: password-auth - Create an authselect custom profile based on the current profile'
              ansible.builtin.command:
                cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
              when:
                - result_authselect_check_cmd is success
                - authselect_current_profile is not match("^(custom/|local)")
                - not result_authselect_custom_profile_present.stat.exists

            - name: 'Limit Password Reuse: password-auth - Create an authselect custom profile based on sssd profile'
              ansible.builtin.command:
                cmd: authselect create-profile hardening -b sssd
              when:
                - result_authselect_check_cmd is success
                - authselect_current_profile is match("local")
                - not result_authselect_custom_profile_present.stat.exists

            - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: password-auth - Ensure the authselect custom profile is selected'
              ansible.builtin.command:
                cmd: authselect select {{ authselect_custom_profile }}
              register: result_pam_authselect_select_profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: password-auth - Restore the authselect features in the custom profile'
              ansible.builtin.command:
                cmd: authselect enable-feature {{ item }}
              loop: '{{ result_authselect_features.stdout_lines }}'
              register: result_pam_authselect_restore_features
              when:
                - result_authselect_profile is not skipped
                - result_authselect_features is not skipped
                - result_pam_authselect_select_profile is not skipped

            - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - result_pam_authselect_restore_features is not skipped

            - name: 'Limit Password Reuse: password-auth - Change the PAM file to be edited according to the custom authselect profile'
              ansible.builtin.set_fact:
                pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
          when:
            - result_authselect_present.stat.exists

        - name: 'Limit Password Reuse: password-auth - Define a fact for control already filtered in case filters are used'
          ansible.builtin.set_fact:
            pam_module_control: requisite

        - name: 'Limit Password Reuse: password-auth - Check if expected PAM module line is present in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            regexp: ^\s*password\s+{{ pam_module_control | regex_escape() }}\s+pam_pwhistory.so\s*.*
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_line_present

        - name: 'Limit Password Reuse: password-auth - Include or update the PAM module line in {{ pam_file_path }}'
          block:

            - name: 'Limit Password Reuse: password-auth - Check if required PAM module line is present in {{ pam_file_path }} with different control'
              ansible.builtin.lineinfile:
                path: '{{ pam_file_path }}'
                regexp: ^\s*password\s+.*\s+pam_pwhistory.so\s*
                state: absent
              check_mode: true
              changed_when: false
              register: result_pam_line_other_control_present

            - name: 'Limit Password Reuse: password-auth - Ensure the correct control for the required PAM module line in {{ pam_file_path }}'
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: ^(\s*password\s+).*(\bpam_pwhistory.so.*)
                replace: \1{{ pam_module_control }} \2
              register: result_pam_module_edit
              when:
                - result_pam_line_other_control_present.found == 1

            - name: 'Limit Password Reuse: password-auth - Ensure the required PAM module line is included in {{ pam_file_path }}'
              ansible.builtin.lineinfile:
                dest: '{{ pam_file_path }}'
                line: password    {{ pam_module_control }}    pam_pwhistory.so
              register: result_pam_module_add
              when:
                - result_pam_line_other_control_present.found == 0 or result_pam_line_other_control_present.found > 1

            - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present is defined
                - result_authselect_present.stat.exists
                - |-
                  (result_pam_module_add is defined and result_pam_module_add.changed)
                   or (result_pam_module_edit is defined and result_pam_module_edit.changed)
          when:
            - result_pam_line_present.found is defined
            - result_pam_line_present.found == 0

        - name: 'Limit Password Reuse: password-auth - Define a fact for control already filtered in case filters are used'
          ansible.builtin.set_fact:
            pam_module_control: requisite

        - name: 'Limit Password Reuse: password-auth - Check if the required PAM module option is present in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            regexp: ^\s*password\s+{{ pam_module_control | regex_escape() }}\s+pam_pwhistory.so\s*.*\sremember\b
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_module_accounts_password_pam_pwhistory_remember_password_auth_option_present

        - name: 'Limit Password Reuse: password-auth - Ensure the "remember" PAM option for "pam_pwhistory.so" is included in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            backrefs: true
            regexp: ^(\s*password\s+{{ pam_module_control | regex_escape() }}\s+pam_pwhistory.so.*)
            line: \1 remember={{ var_password_pam_remember }}
            state: present
          register: result_pam_accounts_password_pam_pwhistory_remember_password_auth_add
          when:
            - result_pam_module_accounts_password_pam_pwhistory_remember_password_auth_option_present.found == 0

        - name: 'Limit Password Reuse: password-auth - Ensure the required value for "remember" PAM option from "pam_pwhistory.so" in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            backrefs: true
            regexp: ^(\s*password\s+{{ pam_module_control | regex_escape() }}\s+pam_pwhistory.so\s+.*)(remember)=[0-9a-zA-Z]+\s*(.*)
            line: \1\2={{ var_password_pam_remember }} \3
          register: result_pam_accounts_password_pam_pwhistory_remember_password_auth_edit
          when:
            - result_pam_module_accounts_password_pam_pwhistory_remember_password_auth_option_present.found > 0

        - name: 'Limit Password Reuse: password-auth - Ensure authselect changes are applied'
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_present.stat.exists
            - (result_pam_remember_add is defined and result_pam_remember_add.changed) or (result_pam_remember_edit is defined and result_pam_remember_edit.changed)
      when:
        - '"pam" in ansible_facts.packages'
        - not result_pwhistory_conf_check.stat.exists


# Limit Password Reuse: system-auth
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_password_pam_pwhistory_remember_system_auth,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_sle,multi_platform_almalinux
# reboot = false
# strategy = configure
# complexity = low
# disruption = medium
- name: 'Limit Password Reuse: system-auth'
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_password_pam_remember: '24'
    var_password_pam_remember_control_flag: requisite,required
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaGlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rp
      c3lVVkZCU25GQmVrRjJjVk5VUjFKMVprczFhM0ZLWlU5U05FRUtaRlJKTTNZMU1qVnVNbE5rWmsx
      WWQzVndWRGxKV21KNk1sWm1OSGh3WlZWcFRHZEdaV1kyV0c5QlJrdFhSRFJCTkc1b2FGRlFTVU5D
      WVhacE5tUldUQXBLZG5GcGJVZ3lhRlZyZEROVmEyaGtkMDE0ZVhNd1prOW1kR0ZhU25GemNrcFlT
      RUpoYVZsNmVFOUZkbXBvWlc0NVNUQkZiRFZUUjFsTWRFUlFUVGt6Q2pWWGVtNVpWbkpXVTAwMVMz
      VTNSMlZKVVRaaU5rOVlhRkZPZFdod09VTXJTbWQ2VFV0elpWRklRMGxGZFUwMVJteFFXa1J4YzB0
      SmFEQjBRbU5FU1c4S0wzaHdZVms1UVU0M0t6RTVVQ3RLU1RSWk4waHZaM0JRWnpnNFNESnBNWE5S
      V1VzMU5UQm9Za0p1VEZkSFJrZFBSbVJRTldoaVNHeFROa2xSWWpSRFZncENha1JRYUVsTlprTmth
      VGN5YjBJM00wa3dZVTVwYWpJd1l6VkZNVVZ2TXpOUFNHVjBZMmxpUmxwaVJrSmtNa1E0ZFRBd2NG
      ZHpTakU0TVhOWFIySnRDblk0TUVsSFVtcFlPV1Y1U3k5T1VHTlhXU3R3WWpBMlRqZGFRekJPUWpS
      cU1TOUVUMFZrWm5sUVFtaDFWek5uWkZvcmMyWkNhREJqUlU1d2JrdFVNbk1LVWpKQ1ltSkxUblZ6
      VkZCSU1XRlViV3hYVlRaU1kyVjVVRUo2V25KV1dWWjFTVUp2V1haaGIwUm9VbGNyT1c5bWNVMTBj
      bXg0TDNKclEyY3lhSFVyTndwc1VuWmxUaTlTTjBac2MzZGhabmQyTVVsTFJUVnlRelZ3ZFhOdlRq
      WkhiVU5XUjNZeFF6aENhMFJQWmxCNVNubzVla1owZUhGQlRXSmhjRFpXT0hkUENrUkNhbUp0VUdK
      emFWVTFSbFZ3Wm5velIzQXZVM05JSzFjMFUyMWphR1IwUlhONk5sSmljR2g1SzFBelpXa3ZNR0po
      YTI1clJFRTJWVVkyYVRWeE5VVUtOMU53SzA1VGMwWkxNVFpuY1ROMFJ5dFJURk5SWkZCVmVrbDJT
      R1UyTkVkaGRYTlVjVVYwTDFaa2Mzb3ZkMnRGVW01UlIweERObWxYT0N0eFdVWTVWZ3B1UW5GemJF
      NU5WVEJ2UlRkek9HdERUSFYwZVFvOWNDOW1WQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-89176-2
    - CJIS-5.6.2.1.1
    - NIST-800-171-3.5.8
    - NIST-800-53-IA-5(1)(e)
    - NIST-800-53-IA-5(f)
    - PCI-DSS-Req-8.2.5
    - PCI-DSSv4-8.3
    - PCI-DSSv4-8.3.7
    - accounts_password_pam_pwhistory_remember_system_auth
    - configure_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - no_reboot_needed
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: 'Limit Password Reuse: system-auth - Check if system relies on authselect tool'
      ansible.builtin.stat:
        path: /usr/bin/authselect
      register: result_authselect_present
      when: '"pam" in ansible_facts.packages'

    - name: 'Limit Password Reuse: system-auth - Collect the available authselect features'
      ansible.builtin.command:
        cmd: authselect list-features sssd
      register: result_authselect_available_features
      changed_when: false
      when:
        - '"pam" in ansible_facts.packages'
        - result_authselect_present.stat.exists

    - name: 'Limit Password Reuse: system-auth - Enable pam_pwhistory.so using authselect feature'
      block:

        - name: 'Limit Password Reuse: system-auth - Check integrity of authselect current profile'
          ansible.builtin.command:
            cmd: authselect check
          register: result_authselect_check_cmd
          changed_when: false
          failed_when: false

        - name: 'Limit Password Reuse: system-auth - Informative message based on the authselect integrity check result'
          ansible.builtin.assert:
            that:
              - result_authselect_check_cmd.rc == 0
            fail_msg:
              - authselect integrity check failed. Remediation aborted!
              - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
              - It is not recommended to manually edit the PAM files when authselect tool is available.
              - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
            success_msg:
              - authselect integrity check passed

        - name: 'Limit Password Reuse: system-auth - Get authselect current features'
          ansible.builtin.shell:
            cmd: authselect current | tail -n+3 | awk '{ print $2 }'
          register: result_authselect_features
          changed_when: false
          when:
            - result_authselect_check_cmd is success

        - name: 'Limit Password Reuse: system-auth - Ensure "with-pwhistory" feature is enabled using authselect tool'
          ansible.builtin.command:
            cmd: authselect enable-feature with-pwhistory
          register: result_authselect_enable_feature_cmd
          when:
            - result_authselect_check_cmd is success
            - result_authselect_features.stdout is not search("with-pwhistory")

        - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_enable_feature_cmd is not skipped
            - result_authselect_enable_feature_cmd is success
      when:
        - '"pam" in ansible_facts.packages'
        - result_authselect_present.stat.exists
        - result_authselect_available_features.stdout is search("with-pwhistory")

    - name: 'Limit Password Reuse: system-auth - Enable pam_pwhistory.so in appropriate PAM files'
      block:

        - name: 'Limit Password Reuse: system-auth - Define the PAM file to be edited as a local fact'
          ansible.builtin.set_fact:
            pam_file_path: /etc/pam.d/system-auth

        - name: 'Limit Password Reuse: system-auth - Check if system relies on authselect tool'
          ansible.builtin.stat:
            path: /usr/bin/authselect
          register: result_authselect_present

        - name: 'Limit Password Reuse: system-auth - Ensure authselect custom profile is used if authselect is present'
          block:

            - name: 'Limit Password Reuse: system-auth - Check integrity of authselect current profile'
              ansible.builtin.command:
                cmd: authselect check
              register: result_authselect_check_cmd
              changed_when: false
              failed_when: false

            - name: 'Limit Password Reuse: system-auth - Informative message based on the authselect integrity check result'
              ansible.builtin.assert:
                that:
                  - result_authselect_check_cmd.rc == 0
                fail_msg:
                  - authselect integrity check failed. Remediation aborted!
                  - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                  - It is not recommended to manually edit the PAM files when authselect tool is available.
                  - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                success_msg:
                  - authselect integrity check passed

            - name: 'Limit Password Reuse: system-auth - Get authselect current profile'
              ansible.builtin.shell:
                cmd: authselect current -r | awk '{ print $1 }'
              register: result_authselect_profile
              changed_when: false
              when:
                - result_authselect_check_cmd is success

            - name: 'Limit Password Reuse: system-auth - Define the current authselect profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is match("custom/")

            - name: 'Limit Password Reuse: system-auth - Define the new authselect custom profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: custom/hardening
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is not match("custom/")

            - name: 'Limit Password Reuse: system-auth - Get authselect current features to also enable them in the custom profile'
              ansible.builtin.shell:
                cmd: authselect current | tail -n+3 | awk '{ print $2 }'
              register: result_authselect_features
              changed_when: false
              when:
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: system-auth - Check if any custom profile with the same name was already created'
              ansible.builtin.stat:
                path: /etc/authselect/{{ authselect_custom_profile }}
              register: result_authselect_custom_profile_present
              changed_when: false
              when:
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: system-auth - Create an authselect custom profile based on the current profile'
              ansible.builtin.command:
                cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
              when:
                - result_authselect_check_cmd is success
                - authselect_current_profile is not match("^(custom/|local)")
                - not result_authselect_custom_profile_present.stat.exists

            - name: 'Limit Password Reuse: system-auth - Create an authselect custom profile based on sssd profile'
              ansible.builtin.command:
                cmd: authselect create-profile hardening -b sssd
              when:
                - result_authselect_check_cmd is success
                - authselect_current_profile is match("local")
                - not result_authselect_custom_profile_present.stat.exists

            - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: system-auth - Ensure the authselect custom profile is selected'
              ansible.builtin.command:
                cmd: authselect select {{ authselect_custom_profile }}
              register: result_pam_authselect_select_profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: system-auth - Restore the authselect features in the custom profile'
              ansible.builtin.command:
                cmd: authselect enable-feature {{ item }}
              loop: '{{ result_authselect_features.stdout_lines }}'
              register: result_pam_authselect_restore_features
              when:
                - result_authselect_profile is not skipped
                - result_authselect_features is not skipped
                - result_pam_authselect_select_profile is not skipped

            - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - result_pam_authselect_restore_features is not skipped

            - name: 'Limit Password Reuse: system-auth - Change the PAM file to be edited according to the custom authselect profile'
              ansible.builtin.set_fact:
                pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
          when:
            - result_authselect_present.stat.exists

        - name: 'Limit Password Reuse: system-auth - Define a fact for control already filtered in case filters are used'
          ansible.builtin.set_fact:
            pam_module_control: '{{ var_password_pam_remember_control_flag.split(",")[0] }}'

        - name: 'Limit Password Reuse: system-auth - Check if expected PAM module line is present in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            regexp: ^\s*password\s+{{ pam_module_control | regex_escape() }}\s+pam_pwhistory.so\s*.*
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_line_present

        - name: 'Limit Password Reuse: system-auth - Include or update the PAM module line in {{ pam_file_path }}'
          block:

            - name: 'Limit Password Reuse: system-auth - Check if required PAM module line is present in {{ pam_file_path }} with different control'
              ansible.builtin.lineinfile:
                path: '{{ pam_file_path }}'
                regexp: ^\s*password\s+.*\s+pam_pwhistory.so\s*
                state: absent
              check_mode: true
              changed_when: false
              register: result_pam_line_other_control_present

            - name: 'Limit Password Reuse: system-auth - Ensure the correct control for the required PAM module line in {{ pam_file_path }}'
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: ^(\s*password\s+).*(\bpam_pwhistory.so.*)
                replace: \1{{ pam_module_control }} \2
              register: result_pam_module_edit
              when:
                - result_pam_line_other_control_present.found == 1

            - name: 'Limit Password Reuse: system-auth - Ensure the required PAM module line is included in {{ pam_file_path }}'
              ansible.builtin.lineinfile:
                dest: '{{ pam_file_path }}'
                insertafter: ^password.*requisite.*pam_pwquality\.so
                line: password    {{ pam_module_control }}    pam_pwhistory.so
              register: result_pam_module_add
              when:
                - result_pam_line_other_control_present.found == 0 or result_pam_line_other_control_present.found > 1

            - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present is defined
                - result_authselect_present.stat.exists
                - |-
                  (result_pam_module_add is defined and result_pam_module_add.changed)
                   or (result_pam_module_edit is defined and result_pam_module_edit.changed)
          when:
            - result_pam_line_present.found is defined
            - result_pam_line_present.found == 0
      when:
        - '"pam" in ansible_facts.packages'
        - |
          (result_authselect_available_features.stdout is defined and result_authselect_available_features.stdout is not search("with-pwhistory")) or result_authselect_available_features is not defined

    - name: 'Limit Password Reuse: system-auth - Check the presence of /etc/security/pwhistory.conf file'
      ansible.builtin.stat:
        path: /etc/security/pwhistory.conf
      register: result_pwhistory_conf_check
      when: '"pam" in ansible_facts.packages'

    - name: 'Limit Password Reuse: system-auth - pam_pwhistory.so parameters are configured in /etc/security/pwhistory.conf file'
      block:

        - name: 'Limit Password Reuse: system-auth - Ensure the pam_pwhistory.so remember parameter in /etc/security/pwhistory.conf'
          ansible.builtin.lineinfile:
            path: /etc/security/pwhistory.conf
            regexp: ^\s*remember\s*=
            line: remember = {{ var_password_pam_remember }}
            state: present

        - name: 'Limit Password Reuse: system-auth - Ensure the pam_pwhistory.so remember parameter is removed from PAM files'
          block:

            - name: 'Limit Password Reuse: system-auth - Check if /etc/pam.d/system-auth file is present'
              ansible.builtin.stat:
                path: /etc/pam.d/system-auth
              register: result_pam_file_present

            - name: 'Limit Password Reuse: system-auth - Check the proper remediation for the system'
              block:

                - name: 'Limit Password Reuse: system-auth - Define the PAM file to be edited as a local fact'
                  ansible.builtin.set_fact:
                    pam_file_path: /etc/pam.d/system-auth

                - name: 'Limit Password Reuse: system-auth - Check if system relies on authselect tool'
                  ansible.builtin.stat:
                    path: /usr/bin/authselect
                  register: result_authselect_present

                - name: 'Limit Password Reuse: system-auth - Ensure authselect custom profile is used if authselect is present'
                  block:

                    - name: 'Limit Password Reuse: system-auth - Check integrity of authselect current profile'
                      ansible.builtin.command:
                        cmd: authselect check
                      register: result_authselect_check_cmd
                      changed_when: false
                      failed_when: false

                    - name: 'Limit Password Reuse: system-auth - Informative message based on the authselect integrity check result'
                      ansible.builtin.assert:
                        that:
                          - result_authselect_check_cmd.rc == 0
                        fail_msg:
                          - authselect integrity check failed. Remediation aborted!
                          - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                          - It is not recommended to manually edit the PAM files when authselect tool is available.
                          - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                        success_msg:
                          - authselect integrity check passed

                    - name: 'Limit Password Reuse: system-auth - Get authselect current profile'
                      ansible.builtin.shell:
                        cmd: authselect current -r | awk '{ print $1 }'
                      register: result_authselect_profile
                      changed_when: false
                      when:
                        - result_authselect_check_cmd is success

                    - name: 'Limit Password Reuse: system-auth - Define the current authselect profile as a local fact'
                      ansible.builtin.set_fact:
                        authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                        authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
                      when:
                        - result_authselect_profile is not skipped
                        - result_authselect_profile.stdout is match("custom/")

                    - name: 'Limit Password Reuse: system-auth - Define the new authselect custom profile as a local fact'
                      ansible.builtin.set_fact:
                        authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                        authselect_custom_profile: custom/hardening
                      when:
                        - result_authselect_profile is not skipped
                        - result_authselect_profile.stdout is not match("custom/")

                    - name: 'Limit Password Reuse: system-auth - Get authselect current features to also enable them in the custom profile'
                      ansible.builtin.shell:
                        cmd: authselect current | tail -n+3 | awk '{ print $2 }'
                      register: result_authselect_features
                      changed_when: false
                      when:
                        - result_authselect_profile is not skipped
                        - authselect_current_profile is not match("custom/")

                    - name: 'Limit Password Reuse: system-auth - Check if any custom profile with the same name was already created'
                      ansible.builtin.stat:
                        path: /etc/authselect/{{ authselect_custom_profile }}
                      register: result_authselect_custom_profile_present
                      changed_when: false
                      when:
                        - authselect_current_profile is not match("custom/")

                    - name: 'Limit Password Reuse: system-auth - Create an authselect custom profile based on the current profile'
                      ansible.builtin.command:
                        cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
                      when:
                        - result_authselect_check_cmd is success
                        - authselect_current_profile is not match("^(custom/|local)")
                        - not result_authselect_custom_profile_present.stat.exists

                    - name: 'Limit Password Reuse: system-auth - Create an authselect custom profile based on sssd profile'
                      ansible.builtin.command:
                        cmd: authselect create-profile hardening -b sssd
                      when:
                        - result_authselect_check_cmd is success
                        - authselect_current_profile is match("local")
                        - not result_authselect_custom_profile_present.stat.exists

                    - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
                      ansible.builtin.command:
                        cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
                      when:
                        - result_authselect_check_cmd is success
                        - result_authselect_profile is not skipped
                        - authselect_current_profile is not match("custom/")
                        - authselect_custom_profile is not match(authselect_current_profile)

                    - name: 'Limit Password Reuse: system-auth - Ensure the authselect custom profile is selected'
                      ansible.builtin.command:
                        cmd: authselect select {{ authselect_custom_profile }}
                      register: result_pam_authselect_select_profile
                      when:
                        - result_authselect_check_cmd is success
                        - result_authselect_profile is not skipped
                        - authselect_current_profile is not match("custom/")
                        - authselect_custom_profile is not match(authselect_current_profile)

                    - name: 'Limit Password Reuse: system-auth - Restore the authselect features in the custom profile'
                      ansible.builtin.command:
                        cmd: authselect enable-feature {{ item }}
                      loop: '{{ result_authselect_features.stdout_lines }}'
                      register: result_pam_authselect_restore_features
                      when:
                        - result_authselect_profile is not skipped
                        - result_authselect_features is not skipped
                        - result_pam_authselect_select_profile is not skipped

                    - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
                      ansible.builtin.command:
                        cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
                      when:
                        - result_authselect_check_cmd is success
                        - result_authselect_profile is not skipped
                        - result_pam_authselect_restore_features is not skipped

                    - name: 'Limit Password Reuse: system-auth - Change the PAM file to be edited according to the custom authselect profile'
                      ansible.builtin.set_fact:
                        pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
                  when:
                    - result_authselect_present.stat.exists

                - name: 'Limit Password Reuse: system-auth - Define a fact for control already filtered in case filters are used'
                  ansible.builtin.set_fact:
                    pam_module_control: ''

                - name: 'Limit Password Reuse: system-auth - Ensure the "remember" option from "pam_pwhistory.so" is not present in {{ pam_file_path }}'
                  ansible.builtin.replace:
                    dest: '{{ pam_file_path }}'
                    regexp: (.*password.*pam_pwhistory.so.*)\bremember\b=?[0-9a-zA-Z]*(.*)
                    replace: \1\2
                  register: result_pam_option_removal

                - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b
                  when:
                    - result_authselect_present.stat.exists
                    - result_pam_option_removal is changed
              when:
                - result_pam_file_present.stat.exists
      when:
        - '"pam" in ansible_facts.packages'
        - result_pwhistory_conf_check.stat.exists

    - name: 'Limit Password Reuse: system-auth - pam_pwhistory.so parameters are configured in PAM files'
      block:

        - name: 'Limit Password Reuse: system-auth - Define the PAM file to be edited as a local fact'
          ansible.builtin.set_fact:
            pam_file_path: /etc/pam.d/system-auth

        - name: 'Limit Password Reuse: system-auth - Check if system relies on authselect tool'
          ansible.builtin.stat:
            path: /usr/bin/authselect
          register: result_authselect_present

        - name: 'Limit Password Reuse: system-auth - Ensure authselect custom profile is used if authselect is present'
          block:

            - name: 'Limit Password Reuse: system-auth - Check integrity of authselect current profile'
              ansible.builtin.command:
                cmd: authselect check
              register: result_authselect_check_cmd
              changed_when: false
              failed_when: false

            - name: 'Limit Password Reuse: system-auth - Informative message based on the authselect integrity check result'
              ansible.builtin.assert:
                that:
                  - result_authselect_check_cmd.rc == 0
                fail_msg:
                  - authselect integrity check failed. Remediation aborted!
                  - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                  - It is not recommended to manually edit the PAM files when authselect tool is available.
                  - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                success_msg:
                  - authselect integrity check passed

            - name: 'Limit Password Reuse: system-auth - Get authselect current profile'
              ansible.builtin.shell:
                cmd: authselect current -r | awk '{ print $1 }'
              register: result_authselect_profile
              changed_when: false
              when:
                - result_authselect_check_cmd is success

            - name: 'Limit Password Reuse: system-auth - Define the current authselect profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is match("custom/")

            - name: 'Limit Password Reuse: system-auth - Define the new authselect custom profile as a local fact'
              ansible.builtin.set_fact:
                authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                authselect_custom_profile: custom/hardening
              when:
                - result_authselect_profile is not skipped
                - result_authselect_profile.stdout is not match("custom/")

            - name: 'Limit Password Reuse: system-auth - Get authselect current features to also enable them in the custom profile'
              ansible.builtin.shell:
                cmd: authselect current | tail -n+3 | awk '{ print $2 }'
              register: result_authselect_features
              changed_when: false
              when:
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: system-auth - Check if any custom profile with the same name was already created'
              ansible.builtin.stat:
                path: /etc/authselect/{{ authselect_custom_profile }}
              register: result_authselect_custom_profile_present
              changed_when: false
              when:
                - authselect_current_profile is not match("custom/")

            - name: 'Limit Password Reuse: system-auth - Create an authselect custom profile based on the current profile'
              ansible.builtin.command:
                cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
              when:
                - result_authselect_check_cmd is success
                - authselect_current_profile is not match("^(custom/|local)")
                - not result_authselect_custom_profile_present.stat.exists

            - name: 'Limit Password Reuse: system-auth - Create an authselect custom profile based on sssd profile'
              ansible.builtin.command:
                cmd: authselect create-profile hardening -b sssd
              when:
                - result_authselect_check_cmd is success
                - authselect_current_profile is match("local")
                - not result_authselect_custom_profile_present.stat.exists

            - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: system-auth - Ensure the authselect custom profile is selected'
              ansible.builtin.command:
                cmd: authselect select {{ authselect_custom_profile }}
              register: result_pam_authselect_select_profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - authselect_current_profile is not match("custom/")
                - authselect_custom_profile is not match(authselect_current_profile)

            - name: 'Limit Password Reuse: system-auth - Restore the authselect features in the custom profile'
              ansible.builtin.command:
                cmd: authselect enable-feature {{ item }}
              loop: '{{ result_authselect_features.stdout_lines }}'
              register: result_pam_authselect_restore_features
              when:
                - result_authselect_profile is not skipped
                - result_authselect_features is not skipped
                - result_pam_authselect_select_profile is not skipped

            - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
              when:
                - result_authselect_check_cmd is success
                - result_authselect_profile is not skipped
                - result_pam_authselect_restore_features is not skipped

            - name: 'Limit Password Reuse: system-auth - Change the PAM file to be edited according to the custom authselect profile'
              ansible.builtin.set_fact:
                pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
          when:
            - result_authselect_present.stat.exists

        - name: 'Limit Password Reuse: system-auth - Define a fact for control already filtered in case filters are used'
          ansible.builtin.set_fact:
            pam_module_control: requisite

        - name: 'Limit Password Reuse: system-auth - Check if expected PAM module line is present in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            regexp: ^\s*password\s+{{ pam_module_control | regex_escape() }}\s+pam_pwhistory.so\s*.*
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_line_present

        - name: 'Limit Password Reuse: system-auth - Include or update the PAM module line in {{ pam_file_path }}'
          block:

            - name: 'Limit Password Reuse: system-auth - Check if required PAM module line is present in {{ pam_file_path }} with different control'
              ansible.builtin.lineinfile:
                path: '{{ pam_file_path }}'
                regexp: ^\s*password\s+.*\s+pam_pwhistory.so\s*
                state: absent
              check_mode: true
              changed_when: false
              register: result_pam_line_other_control_present

            - name: 'Limit Password Reuse: system-auth - Ensure the correct control for the required PAM module line in {{ pam_file_path }}'
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: ^(\s*password\s+).*(\bpam_pwhistory.so.*)
                replace: \1{{ pam_module_control }} \2
              register: result_pam_module_edit
              when:
                - result_pam_line_other_control_present.found == 1

            - name: 'Limit Password Reuse: system-auth - Ensure the required PAM module line is included in {{ pam_file_path }}'
              ansible.builtin.lineinfile:
                dest: '{{ pam_file_path }}'
                line: password    {{ pam_module_control }}    pam_pwhistory.so
              register: result_pam_module_add
              when:
                - result_pam_line_other_control_present.found == 0 or result_pam_line_other_control_present.found > 1

            - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present is defined
                - result_authselect_present.stat.exists
                - |-
                  (result_pam_module_add is defined and result_pam_module_add.changed)
                   or (result_pam_module_edit is defined and result_pam_module_edit.changed)
          when:
            - result_pam_line_present.found is defined
            - result_pam_line_present.found == 0

        - name: 'Limit Password Reuse: system-auth - Define a fact for control already filtered in case filters are used'
          ansible.builtin.set_fact:
            pam_module_control: requisite

        - name: 'Limit Password Reuse: system-auth - Check if the required PAM module option is present in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            regexp: ^\s*password\s+{{ pam_module_control | regex_escape() }}\s+pam_pwhistory.so\s*.*\sremember\b
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_module_accounts_password_pam_pwhistory_remember_system_auth_option_present

        - name: 'Limit Password Reuse: system-auth - Ensure the "remember" PAM option for "pam_pwhistory.so" is included in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            backrefs: true
            regexp: ^(\s*password\s+{{ pam_module_control | regex_escape() }}\s+pam_pwhistory.so.*)
            line: \1 remember={{ var_password_pam_remember }}
            state: present
          register: result_pam_accounts_password_pam_pwhistory_remember_system_auth_add
          when:
            - result_pam_module_accounts_password_pam_pwhistory_remember_system_auth_option_present.found == 0

        - name: 'Limit Password Reuse: system-auth - Ensure the required value for "remember" PAM option from "pam_pwhistory.so" in {{ pam_file_path }}'
          ansible.builtin.lineinfile:
            path: '{{ pam_file_path }}'
            backrefs: true
            regexp: ^(\s*password\s+{{ pam_module_control | regex_escape() }}\s+pam_pwhistory.so\s+.*)(remember)=[0-9a-zA-Z]+\s*(.*)
            line: \1\2={{ var_password_pam_remember }} \3
          register: result_pam_accounts_password_pam_pwhistory_remember_system_auth_edit
          when:
            - result_pam_module_accounts_password_pam_pwhistory_remember_system_auth_option_present.found > 0

        - name: 'Limit Password Reuse: system-auth - Ensure authselect changes are applied'
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_present.stat.exists
            - (result_pam_remember_add is defined and result_pam_remember_add.changed) or (result_pam_remember_edit is defined and result_pam_remember_edit.changed)
      when:
        - '"pam" in ansible_facts.packages'
        - not result_pwhistory_conf_check.stat.exists


# Lock Accounts After Failed Password Attempts
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_passwords_pam_faillock_deny,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_almalinux
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Lock Accounts After Failed Password Attempts
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_accounts_passwords_pam_faillock_deny: '5'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaGpRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      MXlhMUF2VW5KR1QwbFBXVUpIVVRJMU5rOXdNVGR4Y2xCaVdGTUtLMUJCYlZkM04yZFlTeTlHWnpC
      WlpWcDJibkYyZFc1c1l6aHVORXBWVlhCUE5YY3hNVTlJUkVsclNFaGlkQ3M0ZW01SVJHNDVNRUo0
      UkU5NlVDOXhPQXA2TkRacGMzVldTbVJVVGxwSVJUTmpVamxMTmtNck0yOWxZMFpNZUdwSVIxbFdi
      Mmh4ZVZaRlRuWlpaSFoxUmsxNVoycGFVMFUxVGtaNFJYZHpRWHBIQ2xCUk5scFZOVVZFTjJvdmFs
      bEJieTgzWkdOcGIxQXlTa1F2TXpGaVFrVlJWRk00ZUZaeVpsQnNlREpHZVdSU2JFdHhibEptYmpG
      dFF6TTFRVTByTjFRS2QxZENkV0pCT1ZCNk5FNDJhM0JzTWsxVWExWTRSRUZhWnpSemJYUkZRWFJ5
      UzFGMFpTOHliazF4V213eldUQkJkekZYT1hBeGNVNHdibnAwWWpCSFVRcEZVRzV6YkdwQ2VUWTFN
      aTkwTlhwc1lsRmlUblk0ZFdGb1UxRnhNVkl6UVVoV1NETjFURTF4V1dKQ1JYcFJVVE5PY3pGRmRH
      ODRNelY1TUZodmEwNU9DalpQV1RORU1sRlhVMjVqZVZaMk0zWnFMeTlVVTA5cE9HeGlVMUl4ZUUx
      a0t6WkVabE55Y1hWM1drOWxXR3RSUTNwQlUxZE5OVTh2UlVSd2MwNVhOazhLTUZsaWRqZDVlR3Mw
      TkVsMGRFeFNSVmwxZEhnMlUzSkZkVTl4VFhWSU1HZGhialJxV1hWbFkzVmxaVmx5U2tjdmVUTTBS
      WE42WTNSeldtSTRUMnhLWlFwNlJVNW5NbkJhVUU5d2NuRmFiMDQzUjFGQmFYaEVTMVZQVVZacWRu
      TkpUMWs1ZUZWSFUwRk5jbVI1UlcwME9HczFNRXBzYTJadlEzTjRVemRNUWtwUkNrRmxOM05TYUUx
      b1ZtVmtNbmRxTDB4V1dVMDJkM1I0VVRSSllVRnNhMGxJVldrNGVubExkRlJxT1hRcmNWaGxURzVZ
      WjFkVmNVZGhSQzl0ZHk5VGRuY0tiRmRzTmpGd2VWYzNhVmRoTUVWWVFXZDFSWEpzY1ZaRlNESk5a
      emRUVmpSQ09WRnBZMVZNVW5oblVFNTVWWFpoYlcxUGExcG5lRmtyUm05UlNFWXhZd3BWTjI1c2VI
      QTVTVzlIWXpaNmRtNUVVV3BQU1FvOVdrMDBRZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83587-6
    - CJIS-5.5.3
    - DISA-STIG-RHEL-09-411075
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(a)
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-8.1.6
    - PCI-DSSv4-8.3
    - PCI-DSSv4-8.3.4
    - accounts_passwords_pam_faillock_deny
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Lock Accounts After Failed Password Attempts - Check if system relies on authselect tool
      ansible.builtin.stat:
        path: /usr/bin/authselect
      register: result_authselect_present
      when: '"pam" in ansible_facts.packages'

    - name: Lock Accounts After Failed Password Attempts - Remediation where authselect tool is present
      block:

        - name: Lock Accounts After Failed Password Attempts - Check integrity of authselect current profile
          ansible.builtin.command:
            cmd: authselect check
          register: result_authselect_check_cmd
          changed_when: false
          failed_when: false

        - name: Lock Accounts After Failed Password Attempts - Informative message based on the authselect integrity check result
          ansible.builtin.assert:
            that:
              - result_authselect_check_cmd.rc == 0
            fail_msg:
              - authselect integrity check failed. Remediation aborted!
              - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
              - It is not recommended to manually edit the PAM files when authselect tool is available.
              - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
            success_msg:
              - authselect integrity check passed

        - name: Lock Accounts After Failed Password Attempts - Get authselect current features
          ansible.builtin.shell:
            cmd: authselect current | tail -n+3 | awk '{ print $2 }'
          register: result_authselect_features
          changed_when: false
          when:
            - result_authselect_check_cmd is success

        - name: Lock Accounts After Failed Password Attempts - Ensure "with-faillock" feature is enabled using authselect tool
          ansible.builtin.command:
            cmd: authselect enable-feature with-faillock
          register: result_authselect_enable_feature_cmd
          when:
            - result_authselect_check_cmd is success
            - result_authselect_features.stdout is not search("with-faillock")

        - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_enable_feature_cmd is not skipped
            - result_authselect_enable_feature_cmd is success
      when:
        - '"pam" in ansible_facts.packages'
        - result_authselect_present.stat.exists

    - name: Lock Accounts After Failed Password Attempts - Remediation where authselect tool is not present
      block:

        - name: Lock Accounts After Failed Password Attempts - Check if pam_faillock.so is already enabled
          ansible.builtin.lineinfile:
            path: /etc/pam.d/system-auth
            regexp: .*auth.*pam_faillock\.so (preauth|authfail)
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_faillock_is_enabled

        - name: Lock Accounts After Failed Password Attempts - Enable pam_faillock.so preauth editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: auth        required      pam_faillock.so preauth
            insertbefore: ^auth.*sufficient.*pam_unix\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0

        - name: Lock Accounts After Failed Password Attempts - Enable pam_faillock.so authfail editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: auth        required      pam_faillock.so authfail
            insertbefore: ^auth.*required.*pam_deny\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0

        - name: Lock Accounts After Failed Password Attempts - Enable pam_faillock.so account section editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: account     required      pam_faillock.so
            insertbefore: ^account.*required.*pam_unix\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0
      when:
        - '"pam" in ansible_facts.packages'
        - not result_authselect_present.stat.exists

    - name: Lock Accounts After Failed Password Attempts - Check the presence of /etc/security/faillock.conf file
      ansible.builtin.stat:
        path: /etc/security/faillock.conf
      register: result_faillock_conf_check
      when: '"pam" in ansible_facts.packages'

    - name: Lock Accounts After Failed Password Attempts - Ensure the pam_faillock.so deny parameter in /etc/security/faillock.conf
      ansible.builtin.lineinfile:
        path: /etc/security/faillock.conf
        regexp: ^\s*deny\s*=
        line: deny = {{ var_accounts_passwords_pam_faillock_deny }}
        state: present
      when:
        - '"pam" in ansible_facts.packages'
        - result_faillock_conf_check.stat.exists

    - name: Lock Accounts After Failed Password Attempts - Ensure the pam_faillock.so deny parameter not in PAM files
      block:

        - name: Lock Accounts After Failed Password Attempts - Check if /etc/pam.d/system-auth file is present
          ansible.builtin.stat:
            path: /etc/pam.d/system-auth
          register: result_pam_file_present

        - name: Lock Accounts After Failed Password Attempts - Check the proper remediation for the system
          block:

            - name: Lock Accounts After Failed Password Attempts - Define the PAM file to be edited as a local fact
              ansible.builtin.set_fact:
                pam_file_path: /etc/pam.d/system-auth

            - name: Lock Accounts After Failed Password Attempts - Check if system relies on authselect tool
              ansible.builtin.stat:
                path: /usr/bin/authselect
              register: result_authselect_present

            - name: Lock Accounts After Failed Password Attempts - Ensure authselect custom profile is used if authselect is present
              block:

                - name: Lock Accounts After Failed Password Attempts - Check integrity of authselect current profile
                  ansible.builtin.command:
                    cmd: authselect check
                  register: result_authselect_check_cmd
                  changed_when: false
                  failed_when: false

                - name: Lock Accounts After Failed Password Attempts - Informative message based on the authselect integrity check result
                  ansible.builtin.assert:
                    that:
                      - result_authselect_check_cmd.rc == 0
                    fail_msg:
                      - authselect integrity check failed. Remediation aborted!
                      - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                      - It is not recommended to manually edit the PAM files when authselect tool is available.
                      - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                    success_msg:
                      - authselect integrity check passed

                - name: Lock Accounts After Failed Password Attempts - Get authselect current profile
                  ansible.builtin.shell:
                    cmd: authselect current -r | awk '{ print $1 }'
                  register: result_authselect_profile
                  changed_when: false
                  when:
                    - result_authselect_check_cmd is success

                - name: Lock Accounts After Failed Password Attempts - Define the current authselect profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Define the new authselect custom profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: custom/hardening
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is not match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Get authselect current features to also enable them in the custom profile
                  ansible.builtin.shell:
                    cmd: authselect current | tail -n+3 | awk '{ print $2 }'
                  register: result_authselect_features
                  changed_when: false
                  when:
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Check if any custom profile with the same name was already created
                  ansible.builtin.stat:
                    path: /etc/authselect/{{ authselect_custom_profile }}
                  register: result_authselect_custom_profile_present
                  changed_when: false
                  when:
                    - authselect_current_profile is not match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Create an authselect custom profile based on the current profile
                  ansible.builtin.command:
                    cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
                  when:
                    - result_authselect_check_cmd is success
                    - authselect_current_profile is not match("^(custom/|local)")
                    - not result_authselect_custom_profile_present.stat.exists

                - name: Lock Accounts After Failed Password Attempts - Create an authselect custom profile based on sssd profile
                  ansible.builtin.command:
                    cmd: authselect create-profile hardening -b sssd
                  when:
                    - result_authselect_check_cmd is success
                    - authselect_current_profile is match("local")
                    - not result_authselect_custom_profile_present.stat.exists

                - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Lock Accounts After Failed Password Attempts - Ensure the authselect custom profile is selected
                  ansible.builtin.command:
                    cmd: authselect select {{ authselect_custom_profile }}
                  register: result_pam_authselect_select_profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Lock Accounts After Failed Password Attempts - Restore the authselect features in the custom profile
                  ansible.builtin.command:
                    cmd: authselect enable-feature {{ item }}
                  loop: '{{ result_authselect_features.stdout_lines }}'
                  register: result_pam_authselect_restore_features
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_features is not skipped
                    - result_pam_authselect_select_profile is not skipped

                - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - result_pam_authselect_restore_features is not skipped

                - name: Lock Accounts After Failed Password Attempts - Change the PAM file to be edited according to the custom authselect profile
                  ansible.builtin.set_fact:
                    pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
              when:
                - result_authselect_present.stat.exists

            - name: Lock Accounts After Failed Password Attempts - Define a fact for control already filtered in case filters are used
              ansible.builtin.set_fact:
                pam_module_control: ''

            - name: Lock Accounts After Failed Password Attempts - Ensure the "deny" option from "pam_faillock.so" is not present in {{ pam_file_path }}
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: (.*auth.*pam_faillock.so.*)\bdeny\b=?[0-9a-zA-Z]*(.*)
                replace: \1\2
              register: result_pam_option_removal

            - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present.stat.exists
                - result_pam_option_removal is changed
          when:
            - result_pam_file_present.stat.exists

        - name: Lock Accounts After Failed Password Attempts - Check if /etc/pam.d/password-auth file is present
          ansible.builtin.stat:
            path: /etc/pam.d/password-auth
          register: result_pam_file_present

        - name: Lock Accounts After Failed Password Attempts - Check the proper remediation for the system
          block:

            - name: Lock Accounts After Failed Password Attempts - Define the PAM file to be edited as a local fact
              ansible.builtin.set_fact:
                pam_file_path: /etc/pam.d/password-auth

            - name: Lock Accounts After Failed Password Attempts - Check if system relies on authselect tool
              ansible.builtin.stat:
                path: /usr/bin/authselect
              register: result_authselect_present

            - name: Lock Accounts After Failed Password Attempts - Ensure authselect custom profile is used if authselect is present
              block:

                - name: Lock Accounts After Failed Password Attempts - Check integrity of authselect current profile
                  ansible.builtin.command:
                    cmd: authselect check
                  register: result_authselect_check_cmd
                  changed_when: false
                  failed_when: false

                - name: Lock Accounts After Failed Password Attempts - Informative message based on the authselect integrity check result
                  ansible.builtin.assert:
                    that:
                      - result_authselect_check_cmd.rc == 0
                    fail_msg:
                      - authselect integrity check failed. Remediation aborted!
                      - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                      - It is not recommended to manually edit the PAM files when authselect tool is available.
                      - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                    success_msg:
                      - authselect integrity check passed

                - name: Lock Accounts After Failed Password Attempts - Get authselect current profile
                  ansible.builtin.shell:
                    cmd: authselect current -r | awk '{ print $1 }'
                  register: result_authselect_profile
                  changed_when: false
                  when:
                    - result_authselect_check_cmd is success

                - name: Lock Accounts After Failed Password Attempts - Define the current authselect profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Define the new authselect custom profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: custom/hardening
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is not match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Get authselect current features to also enable them in the custom profile
                  ansible.builtin.shell:
                    cmd: authselect current | tail -n+3 | awk '{ print $2 }'
                  register: result_authselect_features
                  changed_when: false
                  when:
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Check if any custom profile with the same name was already created
                  ansible.builtin.stat:
                    path: /etc/authselect/{{ authselect_custom_profile }}
                  register: result_authselect_custom_profile_present
                  changed_when: false
                  when:
                    - authselect_current_profile is not match("custom/")

                - name: Lock Accounts After Failed Password Attempts - Create an authselect custom profile based on the current profile
                  ansible.builtin.command:
                    cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
                  when:
                    - result_authselect_check_cmd is success
                    - authselect_current_profile is not match("^(custom/|local)")
                    - not result_authselect_custom_profile_present.stat.exists

                - name: Lock Accounts After Failed Password Attempts - Create an authselect custom profile based on sssd profile
                  ansible.builtin.command:
                    cmd: authselect create-profile hardening -b sssd
                  when:
                    - result_authselect_check_cmd is success
                    - authselect_current_profile is match("local")
                    - not result_authselect_custom_profile_present.stat.exists

                - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Lock Accounts After Failed Password Attempts - Ensure the authselect custom profile is selected
                  ansible.builtin.command:
                    cmd: authselect select {{ authselect_custom_profile }}
                  register: result_pam_authselect_select_profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Lock Accounts After Failed Password Attempts - Restore the authselect features in the custom profile
                  ansible.builtin.command:
                    cmd: authselect enable-feature {{ item }}
                  loop: '{{ result_authselect_features.stdout_lines }}'
                  register: result_pam_authselect_restore_features
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_features is not skipped
                    - result_pam_authselect_select_profile is not skipped

                - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - result_pam_authselect_restore_features is not skipped

                - name: Lock Accounts After Failed Password Attempts - Change the PAM file to be edited according to the custom authselect profile
                  ansible.builtin.set_fact:
                    pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
              when:
                - result_authselect_present.stat.exists

            - name: Lock Accounts After Failed Password Attempts - Define a fact for control already filtered in case filters are used
              ansible.builtin.set_fact:
                pam_module_control: ''

            - name: Lock Accounts After Failed Password Attempts - Ensure the "deny" option from "pam_faillock.so" is not present in {{ pam_file_path }}
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: (.*auth.*pam_faillock.so.*)\bdeny\b=?[0-9a-zA-Z]*(.*)
                replace: \1\2
              register: result_pam_option_removal

            - name: Lock Accounts After Failed Password Attempts - Ensure authselect changes are applied
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present.stat.exists
                - result_pam_option_removal is changed
          when:
            - result_pam_file_present.stat.exists
      when:
        - '"pam" in ansible_facts.packages'
        - result_faillock_conf_check.stat.exists

    - name: Lock Accounts After Failed Password Attempts - Ensure the pam_faillock.so deny parameter in PAM files
      block:

        - name: Lock Accounts After Failed Password Attempts - Check if pam_faillock.so deny parameter is already enabled in pam files
          ansible.builtin.lineinfile:
            path: /etc/pam.d/system-auth
            regexp: .*auth.*pam_faillock\.so (preauth|authfail).*deny
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_faillock_deny_parameter_is_present

        - name: Lock Accounts After Failed Password Attempts - Ensure the inclusion of pam_faillock.so preauth deny parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so preauth.*)
            line: \1required\3 deny={{ var_accounts_passwords_pam_faillock_deny }}
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_deny_parameter_is_present.found == 0

        - name: Lock Accounts After Failed Password Attempts - Ensure the inclusion of pam_faillock.so authfail deny parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so authfail.*)
            line: \1required\3 deny={{ var_accounts_passwords_pam_faillock_deny }}
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_deny_parameter_is_present.found == 0

        - name: Lock Accounts After Failed Password Attempts - Ensure the desired value for pam_faillock.so preauth deny parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so preauth.*)(deny)=[0-9]+(.*)
            line: \1required\3\4={{ var_accounts_passwords_pam_faillock_deny }}\5
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_deny_parameter_is_present.found > 0

        - name: Lock Accounts After Failed Password Attempts - Ensure the desired value for pam_faillock.so authfail deny parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so authfail.*)(deny)=[0-9]+(.*)
            line: \1required\3\4={{ var_accounts_passwords_pam_faillock_deny }}\5
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_deny_parameter_is_present.found > 0
      when:
        - '"pam" in ansible_facts.packages'
        - not result_faillock_conf_check.stat.exists


# Set Lockout Time for Failed Password Attempts
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_passwords_pam_faillock_unlock_time,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_almalinux
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set Lockout Time for Failed Password Attempts
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_accounts_passwords_pam_faillock_unlock_time: '900'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaGpRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      RkJkMUZCUzBkbFdERk1RekJ6WkdKdU5UVnhWbGxCZEZRemJYWUtaRGhzTTBwMlpXZzVSMDE2TVdJ
      NFVWaHNhRVUzYUdKSmFIUm9iM1pzZEdGcU1IRmlkR3B2TkZFdlNVdExiMUowTVdkd2RVNUJNME15
      VEc4d2NUUmljd3B1TTFCclQzaG1ZVk5DZEVwclNsWTBTVWhTVGpOekwxTTNPV1p0VEZvdmJUSlVk
      RXBaVDNaV0t5OUVUVEF6Y1ZWbE1YbzFTSHBpVVZKaFJFdHJaMmRTQ21kSlUzbGlRV1ZoWWtVemFr
      Rm9WMWxFZW5OM09HdHRPR1ptY1dsTU1rcDRPV0pEVDJvelVXWlhkbGgwZFhKa0x6bE9ObkY0SzNZ
      Mk9XRk5ZakZvTTJRS1pubEViRkJ4VkRKQk1IRnZSa3d6ZGpBMlZrNDBUbW80VW5SVUwxaFNReTlI
      TkhkWFNVOHJOSGM0YzB0ck5EQm5NRUpSVkZWdGVqZFlXREJqVGpSMVVBb3dkMFYzSzJkSFEwSnZW
      RFl6T1hwMFZpdFBkUzlzZDNFMlVtTjVUbTAxWjNWbFEyWjNVMXBVSzJOc1pXYzBXRFlySzFOQlpq
      QjNla2hMTmk5c1pXVmlDalp5WjAxUloyeHhjbkJaZFhSdU1VaE5VM1ZKZEVsU1dEVmpWV1kyVkVG
      SU5XcGlXRFpQVDJWNGMxRnNOVWhMVEU1VlkzRTVWa3Q1YzFobGEzcFNlVlFLVjFaMWMyTnhXVWhH
      WlU1d01VaDVOaXR4Y2psRlFqbENjbkV6VG5keWNsaERTMHBEUkhKWmJ6UmtNRkl6YVhobE5YTnlj
      elo2YkdsMmQyNWlNVzB4Y0FvMWJGTTNRVXhtYkVaeFpGSjBabUZOV2toNVVVMXZRbmxKTlhOaGFI
      VXZXVkY0ZDBsbkt6RlBPV05CTnl0TVkxSmxjMUJqYTA5R05TdHNSR0ZvVmxkQ0NubE9iaXRCVlVr
      d2JFUnBUazVhZW1WM2RqSnFPVGd5ZGpoRlMwSkdaV3c1ZDFJMFJubGtkbFZpVURabk1XbDJNVEpV
      U1U1emQyTXdNVTFRWVVsbVlrUUthbk0yYWsxWU5Ib3lLMW9yWkRjM1F6VjZlbWwxTTFWWk1teEVS
      V2xJWkRacVpYRXJPR01yYjFKaU4zUnhRbmRMVEVWVkwxWkhlVVV5TWpOa1pHRjNXQXBEYlhSUlEy
      NVZZVE5KTVhSb1lWSmpZamxFYVFvOWRXOXpVQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83588-4
    - CJIS-5.5.3
    - DISA-STIG-RHEL-09-411090
    - NIST-800-171-3.1.8
    - NIST-800-53-AC-7(b)
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-8.1.7
    - PCI-DSSv4-8.3
    - PCI-DSSv4-8.3.4
    - accounts_passwords_pam_faillock_unlock_time
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set Lockout Time for Failed Password Attempts - Check if system relies on authselect tool
      ansible.builtin.stat:
        path: /usr/bin/authselect
      register: result_authselect_present
      when: '"pam" in ansible_facts.packages'

    - name: Set Lockout Time for Failed Password Attempts - Remediation where authselect tool is present
      block:

        - name: Set Lockout Time for Failed Password Attempts - Check integrity of authselect current profile
          ansible.builtin.command:
            cmd: authselect check
          register: result_authselect_check_cmd
          changed_when: false
          failed_when: false

        - name: Set Lockout Time for Failed Password Attempts - Informative message based on the authselect integrity check result
          ansible.builtin.assert:
            that:
              - result_authselect_check_cmd.rc == 0
            fail_msg:
              - authselect integrity check failed. Remediation aborted!
              - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
              - It is not recommended to manually edit the PAM files when authselect tool is available.
              - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
            success_msg:
              - authselect integrity check passed

        - name: Set Lockout Time for Failed Password Attempts - Get authselect current features
          ansible.builtin.shell:
            cmd: authselect current | tail -n+3 | awk '{ print $2 }'
          register: result_authselect_features
          changed_when: false
          when:
            - result_authselect_check_cmd is success

        - name: Set Lockout Time for Failed Password Attempts - Ensure "with-faillock" feature is enabled using authselect tool
          ansible.builtin.command:
            cmd: authselect enable-feature with-faillock
          register: result_authselect_enable_feature_cmd
          when:
            - result_authselect_check_cmd is success
            - result_authselect_features.stdout is not search("with-faillock")

        - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_enable_feature_cmd is not skipped
            - result_authselect_enable_feature_cmd is success
      when:
        - '"pam" in ansible_facts.packages'
        - result_authselect_present.stat.exists

    - name: Set Lockout Time for Failed Password Attempts - Remediation where authselect tool is not present
      block:

        - name: Set Lockout Time for Failed Password Attempts - Check if pam_faillock.so is already enabled
          ansible.builtin.lineinfile:
            path: /etc/pam.d/system-auth
            regexp: .*auth.*pam_faillock\.so (preauth|authfail)
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_faillock_is_enabled

        - name: Set Lockout Time for Failed Password Attempts - Enable pam_faillock.so preauth editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: auth        required      pam_faillock.so preauth
            insertbefore: ^auth.*sufficient.*pam_unix\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0

        - name: Set Lockout Time for Failed Password Attempts - Enable pam_faillock.so authfail editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: auth        required      pam_faillock.so authfail
            insertbefore: ^auth.*required.*pam_deny\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0

        - name: Set Lockout Time for Failed Password Attempts - Enable pam_faillock.so account section editing PAM files
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            line: account     required      pam_faillock.so
            insertbefore: ^account.*required.*pam_unix\.so.*
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_is_enabled.found == 0
      when:
        - '"pam" in ansible_facts.packages'
        - not result_authselect_present.stat.exists

    - name: Set Lockout Time for Failed Password Attempts - Check the presence of /etc/security/faillock.conf file
      ansible.builtin.stat:
        path: /etc/security/faillock.conf
      register: result_faillock_conf_check
      when: '"pam" in ansible_facts.packages'

    - name: Set Lockout Time for Failed Password Attempts - Ensure the pam_faillock.so unlock_time parameter in /etc/security/faillock.conf
      ansible.builtin.lineinfile:
        path: /etc/security/faillock.conf
        regexp: ^\s*unlock_time\s*=
        line: unlock_time = {{ var_accounts_passwords_pam_faillock_unlock_time }}
        state: present
      when:
        - '"pam" in ansible_facts.packages'
        - result_faillock_conf_check.stat.exists

    - name: Set Lockout Time for Failed Password Attempts - Ensure the pam_faillock.so unlock_time parameter not in PAM files
      block:

        - name: Set Lockout Time for Failed Password Attempts - Check if /etc/pam.d/system-auth file is present
          ansible.builtin.stat:
            path: /etc/pam.d/system-auth
          register: result_pam_file_present

        - name: Set Lockout Time for Failed Password Attempts - Check the proper remediation for the system
          block:

            - name: Set Lockout Time for Failed Password Attempts - Define the PAM file to be edited as a local fact
              ansible.builtin.set_fact:
                pam_file_path: /etc/pam.d/system-auth

            - name: Set Lockout Time for Failed Password Attempts - Check if system relies on authselect tool
              ansible.builtin.stat:
                path: /usr/bin/authselect
              register: result_authselect_present

            - name: Set Lockout Time for Failed Password Attempts - Ensure authselect custom profile is used if authselect is present
              block:

                - name: Set Lockout Time for Failed Password Attempts - Check integrity of authselect current profile
                  ansible.builtin.command:
                    cmd: authselect check
                  register: result_authselect_check_cmd
                  changed_when: false
                  failed_when: false

                - name: Set Lockout Time for Failed Password Attempts - Informative message based on the authselect integrity check result
                  ansible.builtin.assert:
                    that:
                      - result_authselect_check_cmd.rc == 0
                    fail_msg:
                      - authselect integrity check failed. Remediation aborted!
                      - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                      - It is not recommended to manually edit the PAM files when authselect tool is available.
                      - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                    success_msg:
                      - authselect integrity check passed

                - name: Set Lockout Time for Failed Password Attempts - Get authselect current profile
                  ansible.builtin.shell:
                    cmd: authselect current -r | awk '{ print $1 }'
                  register: result_authselect_profile
                  changed_when: false
                  when:
                    - result_authselect_check_cmd is success

                - name: Set Lockout Time for Failed Password Attempts - Define the current authselect profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Define the new authselect custom profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: custom/hardening
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is not match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Get authselect current features to also enable them in the custom profile
                  ansible.builtin.shell:
                    cmd: authselect current | tail -n+3 | awk '{ print $2 }'
                  register: result_authselect_features
                  changed_when: false
                  when:
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Check if any custom profile with the same name was already created
                  ansible.builtin.stat:
                    path: /etc/authselect/{{ authselect_custom_profile }}
                  register: result_authselect_custom_profile_present
                  changed_when: false
                  when:
                    - authselect_current_profile is not match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Create an authselect custom profile based on the current profile
                  ansible.builtin.command:
                    cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
                  when:
                    - result_authselect_check_cmd is success
                    - authselect_current_profile is not match("^(custom/|local)")
                    - not result_authselect_custom_profile_present.stat.exists

                - name: Set Lockout Time for Failed Password Attempts - Create an authselect custom profile based on sssd profile
                  ansible.builtin.command:
                    cmd: authselect create-profile hardening -b sssd
                  when:
                    - result_authselect_check_cmd is success
                    - authselect_current_profile is match("local")
                    - not result_authselect_custom_profile_present.stat.exists

                - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Set Lockout Time for Failed Password Attempts - Ensure the authselect custom profile is selected
                  ansible.builtin.command:
                    cmd: authselect select {{ authselect_custom_profile }}
                  register: result_pam_authselect_select_profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Set Lockout Time for Failed Password Attempts - Restore the authselect features in the custom profile
                  ansible.builtin.command:
                    cmd: authselect enable-feature {{ item }}
                  loop: '{{ result_authselect_features.stdout_lines }}'
                  register: result_pam_authselect_restore_features
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_features is not skipped
                    - result_pam_authselect_select_profile is not skipped

                - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - result_pam_authselect_restore_features is not skipped

                - name: Set Lockout Time for Failed Password Attempts - Change the PAM file to be edited according to the custom authselect profile
                  ansible.builtin.set_fact:
                    pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
              when:
                - result_authselect_present.stat.exists

            - name: Set Lockout Time for Failed Password Attempts - Define a fact for control already filtered in case filters are used
              ansible.builtin.set_fact:
                pam_module_control: ''

            - name: Set Lockout Time for Failed Password Attempts - Ensure the "unlock_time" option from "pam_faillock.so" is not present in {{ pam_file_path }}
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: (.*auth.*pam_faillock.so.*)\bunlock_time\b=?[0-9a-zA-Z]*(.*)
                replace: \1\2
              register: result_pam_option_removal

            - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present.stat.exists
                - result_pam_option_removal is changed
          when:
            - result_pam_file_present.stat.exists

        - name: Set Lockout Time for Failed Password Attempts - Check if /etc/pam.d/password-auth file is present
          ansible.builtin.stat:
            path: /etc/pam.d/password-auth
          register: result_pam_file_present

        - name: Set Lockout Time for Failed Password Attempts - Check the proper remediation for the system
          block:

            - name: Set Lockout Time for Failed Password Attempts - Define the PAM file to be edited as a local fact
              ansible.builtin.set_fact:
                pam_file_path: /etc/pam.d/password-auth

            - name: Set Lockout Time for Failed Password Attempts - Check if system relies on authselect tool
              ansible.builtin.stat:
                path: /usr/bin/authselect
              register: result_authselect_present

            - name: Set Lockout Time for Failed Password Attempts - Ensure authselect custom profile is used if authselect is present
              block:

                - name: Set Lockout Time for Failed Password Attempts - Check integrity of authselect current profile
                  ansible.builtin.command:
                    cmd: authselect check
                  register: result_authselect_check_cmd
                  changed_when: false
                  failed_when: false

                - name: Set Lockout Time for Failed Password Attempts - Informative message based on the authselect integrity check result
                  ansible.builtin.assert:
                    that:
                      - result_authselect_check_cmd.rc == 0
                    fail_msg:
                      - authselect integrity check failed. Remediation aborted!
                      - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
                      - It is not recommended to manually edit the PAM files when authselect tool is available.
                      - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
                    success_msg:
                      - authselect integrity check passed

                - name: Set Lockout Time for Failed Password Attempts - Get authselect current profile
                  ansible.builtin.shell:
                    cmd: authselect current -r | awk '{ print $1 }'
                  register: result_authselect_profile
                  changed_when: false
                  when:
                    - result_authselect_check_cmd is success

                - name: Set Lockout Time for Failed Password Attempts - Define the current authselect profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: '{{ result_authselect_profile.stdout }}'
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Define the new authselect custom profile as a local fact
                  ansible.builtin.set_fact:
                    authselect_current_profile: '{{ result_authselect_profile.stdout }}'
                    authselect_custom_profile: custom/hardening
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_profile.stdout is not match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Get authselect current features to also enable them in the custom profile
                  ansible.builtin.shell:
                    cmd: authselect current | tail -n+3 | awk '{ print $2 }'
                  register: result_authselect_features
                  changed_when: false
                  when:
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Check if any custom profile with the same name was already created
                  ansible.builtin.stat:
                    path: /etc/authselect/{{ authselect_custom_profile }}
                  register: result_authselect_custom_profile_present
                  changed_when: false
                  when:
                    - authselect_current_profile is not match("custom/")

                - name: Set Lockout Time for Failed Password Attempts - Create an authselect custom profile based on the current profile
                  ansible.builtin.command:
                    cmd: authselect create-profile hardening -b {{ authselect_current_profile }}
                  when:
                    - result_authselect_check_cmd is success
                    - authselect_current_profile is not match("^(custom/|local)")
                    - not result_authselect_custom_profile_present.stat.exists

                - name: Set Lockout Time for Failed Password Attempts - Create an authselect custom profile based on sssd profile
                  ansible.builtin.command:
                    cmd: authselect create-profile hardening -b sssd
                  when:
                    - result_authselect_check_cmd is success
                    - authselect_current_profile is match("local")
                    - not result_authselect_custom_profile_present.stat.exists

                - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=before-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Set Lockout Time for Failed Password Attempts - Ensure the authselect custom profile is selected
                  ansible.builtin.command:
                    cmd: authselect select {{ authselect_custom_profile }}
                  register: result_pam_authselect_select_profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - authselect_current_profile is not match("custom/")
                    - authselect_custom_profile is not match(authselect_current_profile)

                - name: Set Lockout Time for Failed Password Attempts - Restore the authselect features in the custom profile
                  ansible.builtin.command:
                    cmd: authselect enable-feature {{ item }}
                  loop: '{{ result_authselect_features.stdout_lines }}'
                  register: result_pam_authselect_restore_features
                  when:
                    - result_authselect_profile is not skipped
                    - result_authselect_features is not skipped
                    - result_pam_authselect_select_profile is not skipped

                - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
                  ansible.builtin.command:
                    cmd: authselect apply-changes -b --backup=after-hardening-custom-profile
                  when:
                    - result_authselect_check_cmd is success
                    - result_authselect_profile is not skipped
                    - result_pam_authselect_restore_features is not skipped

                - name: Set Lockout Time for Failed Password Attempts - Change the PAM file to be edited according to the custom authselect profile
                  ansible.builtin.set_fact:
                    pam_file_path: /etc/authselect/{{ authselect_custom_profile }}/{{ pam_file_path | basename }}
              when:
                - result_authselect_present.stat.exists

            - name: Set Lockout Time for Failed Password Attempts - Define a fact for control already filtered in case filters are used
              ansible.builtin.set_fact:
                pam_module_control: ''

            - name: Set Lockout Time for Failed Password Attempts - Ensure the "unlock_time" option from "pam_faillock.so" is not present in {{ pam_file_path }}
              ansible.builtin.replace:
                dest: '{{ pam_file_path }}'
                regexp: (.*auth.*pam_faillock.so.*)\bunlock_time\b=?[0-9a-zA-Z]*(.*)
                replace: \1\2
              register: result_pam_option_removal

            - name: Set Lockout Time for Failed Password Attempts - Ensure authselect changes are applied
              ansible.builtin.command:
                cmd: authselect apply-changes -b
              when:
                - result_authselect_present.stat.exists
                - result_pam_option_removal is changed
          when:
            - result_pam_file_present.stat.exists
      when:
        - '"pam" in ansible_facts.packages'
        - result_faillock_conf_check.stat.exists

    - name: Set Lockout Time for Failed Password Attempts - Ensure the pam_faillock.so unlock_time parameter in PAM files
      block:

        - name: Set Lockout Time for Failed Password Attempts - Check if pam_faillock.so unlock_time parameter is already enabled in pam files
          ansible.builtin.lineinfile:
            path: /etc/pam.d/system-auth
            regexp: .*auth.*pam_faillock\.so (preauth|authfail).*unlock_time
            state: absent
          check_mode: true
          changed_when: false
          register: result_pam_faillock_unlock_time_parameter_is_present

        - name: Set Lockout Time for Failed Password Attempts - Ensure the inclusion of pam_faillock.so preauth unlock_time parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so preauth.*)
            line: \1required\3 unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_unlock_time_parameter_is_present.found == 0

        - name: Set Lockout Time for Failed Password Attempts - Ensure the inclusion of pam_faillock.so authfail unlock_time parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so authfail.*)
            line: \1required\3 unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_unlock_time_parameter_is_present.found == 0

        - name: Set Lockout Time for Failed Password Attempts - Ensure the desired value for pam_faillock.so preauth unlock_time parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so preauth.*)(unlock_time)=[0-9]+(.*)
            line: \1required\3\4={{ var_accounts_passwords_pam_faillock_unlock_time }}\5
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_unlock_time_parameter_is_present.found > 0

        - name: Set Lockout Time for Failed Password Attempts - Ensure the desired value for pam_faillock.so authfail unlock_time parameter in auth section
          ansible.builtin.lineinfile:
            path: '{{ item }}'
            backrefs: true
            regexp: (^\s*auth\s+)([\w\[].*\b)(\s+pam_faillock.so authfail.*)(unlock_time)=[0-9]+(.*)
            line: \1required\3\4={{ var_accounts_passwords_pam_faillock_unlock_time }}\5
            state: present
          loop:
            - /etc/pam.d/system-auth
            - /etc/pam.d/password-auth
          when:
            - result_pam_faillock_unlock_time_parameter_is_present.found > 0
      when:
        - '"pam" in ansible_facts.packages'
        - not result_faillock_conf_check.stat.exists


# Set Interactive Session Timeout
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_tmout,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set Interactive Session Timeout
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_accounts_tmout: '900'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaGtRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      bGpVVkF2TUVoSFRDdFZjSEZ5THpSYWRqVnpSM1J6UVV4d2FVTUtOMk52S3pFclV6QnFTVGdyVEV0
      alZXOXhTMUoxZFVsd1ZrTk5ZMDgzYlhoUVJ6VTVlRFowYWtOVFVXZGFSR050Y213MlkyODNTVVpZ
      TTNsRVExSnlRd3BKT0VJMlNXVkJNMjg0ZGxwTk5EaDNWRWhqZHpoc2FYWkJkR0ZGYmsxVmJIaEVP
      R2RDWWk5MmVGTlZXVXRVT0ZabGJUUm1SbE5uWjIxak4wNWtLMWNyQ25kVlowNW1aVTl6Ym5FME1V
      aGFia2h4UTNocmExb3Zha2xrZDI1dksyOXdjMGxhUW1wWWR6WnBSRmhpWkd0bVZrWlhhbTFoVW5C
      a1ZsZEpOVWhxUTJNS05uVXlTV3h5TWpkbFNtdE1TQzloTDFWM01IcFhNRVE1U0hGQk1XbDRTbmxO
      Y25Kb1JIaFFWamgxY2toV1RtRnRTMmRxZEU1dGRFbFhRbWh4TkZsRGNncE5XWEUzWkZrMFVHZ3pj
      bUZKZVZwdE9IZFVVWGhKYzJobFJrRkRaa3RRV0dkUlZ6TmlZMmxSTVVvclFVcDVkMlJqUTFCcGJV
      MXBkVWRNYUhad1YyaG5DbEJNVTB4TVlrbDBjRFEwTlcxaGVqZGlTbkZ2YUhaVlZITm9SSFF6TW5w
      YVFYRmxWbmR0YVhrd00wNXFTa2xxUTJsbGNtVklUa3QyZVZwb05HcDRSellLU1hJeloybzNZekps
      TjNaWFVtbGpWMlE0TkRKTlNIVTFjRE5KVkZSeWMwd3JVSG8wYTNOTlMyWndWMDlLTUhKVVlXbGhV
      M00xYlhJeGMzVnhlazh5YVFvMVlUa3hWMU5hWlVOWk5FTkZSM1ZLYm5BNFFrTmhlakZMUjFKaU9V
      WmFLMjVPVVdsMFkweEtZMGRCZEhKNmRqVklXRWxCZWtReWVtbHlSRXcwTURCRENsZHZMMUJVVFVS
      bU1GWkhVMDlSYjFGWk5YSXdhbEZJV2xKUVEwTnNSVGRrY0dkNFZEWnphSEJhVVVWc1owVlBZMDls
      ZGtrd1ZEWTJabTltVmpKWmVEZ0tiazVYSzBjM1kxcHFSMnBzTjBjcmRWTjRSalozVDJOc1owczVl
      alY0UzJKUEx5OUVORzlpTlRGSkwwYzRSalpxYm5WMk5uaGlPRUprVDFocE5sQlFlQW8yUW1SUVYy
      MUJSbG80YTNsaU1YVlNPRUpvWXdvOVVWTkJZd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83633-8
    - DISA-STIG-RHEL-09-412035
    - NIST-800-171-3.1.11
    - NIST-800-53-AC-12
    - NIST-800-53-AC-2(5)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-SC-10
    - PCI-DSSv4-8.6
    - PCI-DSSv4-8.6.1
    - accounts_tmout
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Correct any occurrence of TMOUT in /etc/profile
      replace:
        path: /etc/profile
        regexp: ^[^#].*TMOUT=.*
        replace: typeset -xr TMOUT={{ var_accounts_tmout }}
      register: profile_replaced
      when: '"kernel" in ansible_facts.packages'

    - name: Set Interactive Session Timeout
      lineinfile:
        path: /etc/profile.d/tmout.sh
        create: true
        regexp: TMOUT=
        line: typeset -xr TMOUT={{ var_accounts_tmout }}
        state: present
      when: '"kernel" in ansible_facts.packages'


# Ensure the Default Bash Umask is Set Correctly
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_umask_etc_bashrc,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure the Default Bash Umask is Set Correctly
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_accounts_user_umask: '027'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaGtRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      TTRjMUF2TTJ4M01EVnplV2QwZGxWUGMwSXpWR3RQUVZGVk9Hb0tURTFTZW5aV2NUYzRTMHdyT0ds
      U04zWnRhV05hV1VKdlJsUnJPVXBFZWs5bGVtOVRNekJ4TVdSQlIxZGxNa2hJU201VmFqTmxRamhu
      ZWxCbk5EUk9ad3BQYkZwNUsyczNZemRJYUhSM2VXMWpVeklyVUdWTGFYQmlaelZXT1dFMksxZHpT
      M0pHWTJ3elF6VkRhMll4VjNObWVHbFBabW92V2pWUVp6Tk5TMDFzQ21vM01XSlJVSFE0ZEhwcVlr
      SkZZM2hWUTBsYU9HTlhWV1k0TjNVeGVVNXJZV2xKUWtFeGIyZDRaMnRhUVdjd2RFVlFRVVUzYjNJ
      NU9FSTRObkZ0TjNnS1ZGSkpkak5YU0VOcGJWbFRiMDV5Ym5VeU0xZ3ZRVkJtZDAxMFRXZHlNbGh4
      Wm1sRU1sUlJNMUJVUjJSa2RGTnFObEJpU0U0clkyMDJhMlZWV21sc1V3cHpiRkZuWmtFdldESXlZ
      amRvV1M5UVEyaHhaVEpzSzB4TVptOXBRa1Z6TWpGS2FsTnJVM3B2TTI1S2RVMVRlRzUzUW5KQ09U
      QnlhazFHU2poSlV5dEZDbXh5YldkWE5tSkdhbkZKWjJ3clJsZGtLMkpFY0haYVJtOTFWMDFCTTIx
      YU56RTBhV2hTTjFZMlRqWjRRVmcwUldKaFZGaHlObUUxUzBrd2VYWlVNRGtLUTBJMVNUTnpiSFZ6
      V2xONWRUZzFTVEJqVEdwSVdHcDVhRGxET1ZCSWEyaFJNa2t2UW5KYWVFdEpObVYwV0RaaFNreGhX
      SFUxVDFsV01HSnJhMFp4UndvcmFFeERVSE4wVWk5M2IzaHpZamN6VTIxMmNpODViRE16Ylc1NWNX
      dE1VRWswUVdSMGRXTnZPR1pTVEhsVWJHVkJWV3RVZUM5dlJVMHdOMDVMVldsSENpOXBjVVZTWkdw
      Uk9EVnRaRVZQUWpGbksyZzFWbFkxZW5aMlJ6QkdUWFpaU0RKdlVWWmFhV016WlRGcFNYVnZSMjlv
      YkhweFZpODVkRlY1WVRrelVsQUtVemROUkVKQ1RGaE5TekZMYWtaU01YTnVMMUZVUWpCUGF5OTNN
      RVY2TUVFM1NGbE1VMnhPZVZGc1UyRklXbXBKZVRnNE1UTlFlalF6ZEdkNWVuWXpVZ28wV21WV0wz
      SlNTR1l2WW5OamNWQk9ZMjEwUVFvOVpGWTBNQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83644-5
    - DISA-STIG-RHEL-09-412055
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - accounts_umask_etc_bashrc
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Check if umask in /etc/bashrc is already set
      ansible.builtin.lineinfile:
        path: /etc/bashrc
        regexp: ^[^#]*\bumask\s+\d+$
        state: absent
      check_mode: true
      changed_when: false
      register: umask_replace
      when: '"bash" in ansible_facts.packages'

    - name: Replace user umask in /etc/bashrc
      ansible.builtin.replace:
        path: /etc/bashrc
        regexp: ^([^#]*\b)umask\s+\d+$
        replace: \g<1>umask {{ var_accounts_user_umask }}
      when:
        - '"bash" in ansible_facts.packages'
        - umask_replace.found > 0

    - name: Ensure the Default umask is Appended Correctly
      ansible.builtin.lineinfile:
        create: true
        path: /etc/bashrc
        line: umask {{ var_accounts_user_umask }}
      when:
        - '"bash" in ansible_facts.packages'
        - umask_replace.found == 0


# Ensure the Default Umask is Set Correctly in login.defs
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_umask_etc_login_defs,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure the Default Umask is Set Correctly in login.defs
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_accounts_user_umask: '027'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaGxRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      UnRiMUF2VWk5QldYSjBUVlJGUTBSSWN6SkRabFo2WlhOblZISUtNVUZOWjB0R00xQlNWMncwTUds
      Nk4wNXpOQzlhU0ZrNVdHOVZRVkUxVmswM1QzQnVXa1JPYlVRd1YwTTRRbE00TUN0c09FTTFiWFV5
      ZG1wUFRUY3JOQW80YzFsb1pIYzBPVE5KV2k5U1ZIaGtTWGhLYVdKMVNHRjRVMmxFZGpGWFp6ZDVZ
      WEZFTkU1SVJuWTJiVTg0TlVWSk1IZEZNMjB3Y21ReFZsUnVSMjg1Q2tVeVRtWkZPUzgyYWtJNGRD
      dGhVWGRQZWtOWlNGQnVTV3ByWlc1c2VIUmpOa1ZKU1VsRWIxRjJWR2RhYjJwdFNYQXdObU5ZVWta
      RFRHaE9MM0pqVFdJS2RWWlVZMmwyVkhOQ1ZGWjJla1ZRV2pGM1lUWkxXR3N3Y0RaR1RXa3pNRmw0
      SzJsM2NFWmlZVEJoZDFsTFp6WlVVRTgxUWpRclNsTXdjMk5XTjJvekx3b3plRFJFUlc1bFFVSkdk
      RFZFYkVkdGQxbHJSbGgxVjBWcVRVaENlRUpLY1RjNFIwMHdabVJVZVZSNFRIRnVWVEF3UkM5UWJD
      dFVLM0U1ZGtSVE0wZG1DalJ6TVRGbFVEbEZlVFpGYlRaelVpOUxlRlZ2V0hVemREbDFPRFZXYW5S
      blNtbHphRzlLVmxsSVNGWkRhQzl2ZG1WbGRtVjNZa0ZCTTIxVlZHTjJiR01LT0ZCNGVYSkpMMGh0
      YjFKUldXUkxhazVoWm05NlVFdE1XRkZXYkRFck9XUTVSRFJtVm5kTFRtcFBkVE5wYVhCbVkxUkll
      VlJXTWpoclJXNUNlRVU1ZEFwSGMyVnFhSGRaZUZGaVdXaHNlamh1Y2poalNtbGFTMUpWU2sxT2Fu
      TlJOM2d2YkVJemJGSlRXalU0VkZaclZVNXFUM1JUTnpGcWVWbFBhVUYyT0VrM0NubDZjVGs1UTFW
      VGREVlJLM0pMWm1sTE1GVnNaMDFPUVZWMGMzaGFOMmR1ZDFvelNHVXJUbXRIY3pCak5rWkNPRkJI
      VTJJNFNWbGFaRWgzV0hBeFZFOEtMMFJZVEhOU04wRjViVWh4ZVRWR1QzZHVhM2hvVjFGT1QxaEpj
      SGM0VVcxWGEySlRjVzgxZW1oVVowVkVPVGgyZG1wTWFFOXZTMnRyYVZCb2J5czBaZ3BDWTJFNFR5
      dDRWSFZOVG01TldqTnNPRUpsU3dvOU5YZENNZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83647-8
    - DISA-STIG-RHEL-09-412065
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - accounts_umask_etc_login_defs
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Check if UMASK is already set
      ansible.builtin.lineinfile:
        path: /etc/login.defs
        regexp: ^(\s*)UMASK\s+.*
        state: absent
      check_mode: true
      changed_when: false
      register: result_umask_is_set
      when: '"shadow-utils" in ansible_facts.packages'

    - name: Replace user UMASK in /etc/login.defs
      ansible.builtin.replace:
        path: /etc/login.defs
        regexp: ^(\s*)UMASK(\s+).*
        replace: \g<1>UMASK\g<2>{{ var_accounts_user_umask }}
      when:
        - '"shadow-utils" in ansible_facts.packages'
        - result_umask_is_set.found > 0

    - name: Ensure the Default UMASK is Appended Correctly
      ansible.builtin.lineinfile:
        create: true
        path: /etc/login.defs
        line: UMASK {{ var_accounts_user_umask }}
      when:
        - '"shadow-utils" in ansible_facts.packages'
        - result_umask_is_set.found == 0


# Ensure the Default Umask is Set Correctly in /etc/profile
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_accounts_umask_etc_profile,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure the Default Umask is Set Correctly in /etc/profile
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_accounts_user_umask: '027'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaGxRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      UkNaMUZCU1d4bFpYQm1PR3RoUW5CVE5sZ3hWMnBSWld4bVRVNEtTM1JaZVZCNFkxSXhSMmxNTVhO
      U0sweERkak5tZWl0R2VXeFNSemhsT1RGb0wxQk9UVXhMU2xWc1ZFNVFNVzlNWVRGSFkzb3JUMHRW
      V2tkdFMwVkdaUXBVTjBoT09FZDFhWGxQYVVSRE9GWlJSM1ZwVFU1NVVGWXpTM2xVWmtSRFltZFpN
      elEyTUc1WVZqSk9RbmhpY1RaSWNVNXlUVWR0V0RVNFpXY3ljR2RUQ2s5MmJWWXdRbEIwUTBsU2Vu
      TnZla3hCVEZCWmVqWnhkSEZVVmxKUVdGTk9Lek5UYWt4MWVFeHRZVkp2U2pCcWJXbG5hVkJ6VlhO
      alQwVkxOemMwTW1JS2NtOUtiekp6ZUVKQmFrTkVUV1p5ZFVoUWFGbFVkVTVTUmtRM2VrZ3JSbloy
      VDFCSU4zbEtRV1ZMT0VscU5UbEJPSFpUTmt0Q2VIVnBXbElyZGxGblNRcFVNM0JDYzFaME9YQm9U
      RlJqWXpWSlUzQm9jbEJ1TVZCMlFtaFpTVkl6UjFaUFJERkNOREUwYWpoaWNVbGFWRTgwY0UxdlZX
      bzRTWEJRYVVwcmNrWmpDamxIVjNWb01uVlhUbXc1VFZOek56VmFjM2wzZVRWR2JHdzBZa3BoVW5R
      d1pVeDNPV3hNY2pGMFRrazVTRXhRVm5SM1lWYzVjazlNZW1oMGMwcEVOVUVLVFhWMmRreE5jVVZL
      YmxwM1dFazJObXA2Y1dZNU1sb3ZOSEExVkdFclNISTRSWEk1TXpORmFWUnlWblIyV21Sd1pYVmxi
      R1paY25KRmVTczRTemhHY3dwUlNXVnZZVkJSWkZSTVdXWkhLMjk1WnpWclRqUXZkQzl1VmpCaFNX
      bHNPWFY0VGxrNVprTXZWRVEyTm1aRFowWlZORGhDYjI5UldGUnRUVWxUZFRWaUNtaHlSVFJFYm5o
      d1F5dHdUblEyZFRGSU5UTm1UWEZJYzFJdlUzTTFhSEl3V2toNVNUQnJRazVFTW5CQ1JGaEVXVVEw
      TmpoRVJXa3hSa0pXWlVwRFNqVUtNbXBwT1dwcldTdG1OMGRXT1d4aVVGaFhkSEJWYW5oTFJrTklW
      amRIVERCa1QwaFFSRTFNYXpObFFYY3hVR3ROWkZKa1dEZDBaV2czTWtoeVZGVXpTZ3BFV1hoNGRu
      RjFjVFEwTkZRNU1WUllOMm8wVUFvOVdVZ3laZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-90828-5
    - DISA-STIG-RHEL-09-412070
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - accounts_umask_etc_profile
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Ensure the Default Umask is Set Correctly in /etc/profile - Locate Profile Configuration Files Where umask Is Defined
      ansible.builtin.find:
        paths:
          - /etc/profile.d
        patterns:
          - sh.local
          - '*.sh'
        contains: ^[\s]*umask\s+\d+
      register: result_profile_d_files

    - name: Ensure the Default Umask is Set Correctly in /etc/profile - Replace Existing umask Value in Files From /etc/profile.d
      ansible.builtin.replace:
        path: '{{ item.path }}'
        regexp: ^(\s*)umask\s+\d+
        replace: \1umask {{ var_accounts_user_umask }}
      loop: '{{ result_profile_d_files.files }}'
      register: result_umask_replaced_profile_d
      when: result_profile_d_files.matched

    - name: Ensure the Default Umask is Set Correctly in /etc/profile - Ensure umask Is Set in /etc/profile if Not Already Set Elsewhere
      ansible.builtin.lineinfile:
        create: true
        mode: 420
        path: /etc/profile
        line: umask {{ var_accounts_user_umask }}
      when: not result_profile_d_files.matched

    - name: Ensure the Default Umask is Set Correctly in /etc/profile - Ensure umask Value For All Existing umask Definition in /etc/profile
      ansible.builtin.replace:
        path: /etc/profile
        regexp: ^(\s*)umask\s+\d+
        replace: \1umask {{ var_accounts_user_umask }}
      register: result_umask_replaced_profile


# Build and Test AIDE Database
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_aide_build_database,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Build and Test AIDE Database
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83438-2
    - CJIS-5.10.1.3
    - DISA-STIG-RHEL-09-651010
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-11.5
    - PCI-DSSv4-11.5.2
    - aide_build_database
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaG1RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      WlZjMUFyZDFablpHSlhiRmRuYm5aNlNEWkhXbWsxY2xwcEswTUtlUzk1YldwUlVHSkxjMHBpUzNC
      VFNrZFdVbE50WTFWTlkxRmFiRVYzUTFCVmJYZFhLM0ZUZEU1UVNGbEVOMkZGZVcxQ1IwWm5lVU16
      VEVGNmRVRkdad3B3VVc5VWN5c3dNVzlqZVhKcVVrWm9jM2RTYmxGRU5ESnBia3ByYUdOemExUlZi
      WEZFZW10Nk0yUXJSR3RpY2pWRU1GZGxTUzg0WWxrclNGSnBSMFZRQ2k5eE4zTktjU3N5VjFKSlMy
      Y3ZZa2sxTm1vMFNtTlRVVmg0UjBkNVdUaEhWbE5IY0ZwWE5tZHBhM0JZYzFSR00wVXJjRTlIWW1a
      SFRtZFNSSFp6UkU0S1JuQk1LMUk0WVdwME5rTlBXbmx0VVVaQlZUQnhOM2RqYmxCaVJXZ3ZlWEZ4
      SzIxQmRubG9OelZaTVdReFUxaHNNMGxSVmtkR1JuZDFVREY0T1ZRMVJBcHZjV05rUzFKbU5VbzVi
      Rk5rUm1WUmEzRTJTWEpyV1RWSFpWVnRkVXRXZFdsR01HZDFSRGRQYVhjek5EUjJVbEZrV1ZkSksw
      WTVUMlpaUmtoRWQwZEVDbWt4ZDJ3NGRreFZkblZCV1M5QlFsbFdjVk5SZFdFek9EZzVWR2sxTmxK
      Qk1uSlZaemxpZVVWd1QxWnpja0Z6YVVveE0wRTNSVWcyTDNreFRYRkJhRE1LT0habFJHUnBjR3RJ
      VFdFNVZXZEpieTh2VjNSSmFFcGhjbGxETldaeWRrcGxiak5PTm5RNFpUQk9SVzVOZG5Bck1WcHdh
      RGw0UkVkamRUbHJhVTlpV2dwMlJ6Qm5iMGhIT0RaUlZETndTWFJpTDBoc2JrWnFjMkZ1VVRKcFky
      dE5VR1ZsYURabU4ydDJUME0zVkhCdU9XWkRiVWhFU1VsVlMwbDBSa1J1YlhCbUNsRkJTMU00Ym5W
      RGFqRXhRVzFGVkhCcVYwcGxZbkZCY1RWcGFIb3lSM0JwU0ROb2VHRnFNakJtUld3d2FVTlpWSEJp
      VGxkdFdFNW1hV2huVjFOTUwwSUtiV3h1TUROT2MySmtPSEJDWkhCUVEyMW5VMmt5WkdwVE1HOVJk
      MWRyYTJ4SVpqaFJRVmx6T1N0V01ITTRhbEJPZFhOSFZERXhhMHRzY3pKRlNGRTRSd3BxVEhZeVYz
      Um1URk5hZEZKclMycGxObHBhY1FvOVNVOWlMd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Build and Test AIDE Database - Ensure AIDE Is Installed
      ansible.builtin.package:
        name: '{{ item }}'
        state: present
      with_items:
        - aide
      when: '"kernel" in ansible_facts.packages'

    - name: Build and Test AIDE Database - Build and Test AIDE Database
      ansible.builtin.command: /usr/sbin/aide --init
      changed_when: true
      when: '"kernel" in ansible_facts.packages'

    - name: Build and Test AIDE Database - Check Whether the Stock AIDE Database Exists
      ansible.builtin.stat:
        path: /var/lib/aide/aide.db.new.gz
      register: aide_database_stat
      when: '"kernel" in ansible_facts.packages'

    - name: Build and Test AIDE Database - Stage AIDE Database
      ansible.builtin.copy:
        src: /var/lib/aide/aide.db.new.gz
        dest: /var/lib/aide/aide.db.gz
        backup: true
        remote_src: true
      when:
        - '"kernel" in ansible_facts.packages'
        - (aide_database_stat.stat.exists is defined and aide_database_stat.stat.exists)


# Configure AIDE to Verify the Audit Tools
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_aide_check_audit_tools,fix)
# Version: undefined
# platform = multi_platform_ol,multi_platform_rhel,multi_platform_sle,multi_platform_slmicro,multi_platform_ubuntu
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Configure AIDE to Verify the Audit Tools
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-87757-1
    - DISA-STIG-RHEL-09-651025
    - NIST-800-53-AU-9(3)
    - NIST-800-53-AU-9(3).1
    - aide_check_audit_tools
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaG1RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      eDZiMUF2TXpsSVFXVnNZa0p4Y1ZSQ2JrcFVTRmxTVEdwbWMwZ0tNRXgxYVZSMFowaHVUMk12Ym1G
      UE5HdDNLelJEYTNKa1QzZG1TWGxKYTI1R1RXUkZlaTgzU25aVmIyZENSM2RIVERGemNIcFJPREpt
      VW5GdFJHc3dZd3ByV0ZWUFlYSjNNRlZEVTB0R2RreG9XR05KZWpkUFQwUnpTVloyZERseFdIRmFi
      V0ZXYzJsQ2JYQllUQzg1WkdGdlRrVnlOakI2V1dWalNFOVVlV0pFQ2pkelNXbERaMUpNUlZkd1dF
      dzBSWEZpWm1wQ1MwdG5TMlJ0YzBjeGQwZzJiR0UxWkU5TGVHVkdPSFJGU1RnME1qQmFPVlZoVUZV
      clFrNXpNMlpFUzNZS1NURlpUeXMzZGpCM1QycDBiM1p3Ymt4NU5UZHpXVmxtTWpCSWNXOTVkMjlJ
      UTIwdmMyNW5Vazl4VmtZME5teEJka2xQWTJGclQxWlFhMkpRZVdsTk9RcEdkblUxU21OdE5IWk9T
      VFZ2ZUZwUVRGUjJTbHBMYUZwMlEyeG5WRk16YWtaeVpsbE5RM2dyVGtoemRXWTVjSEkzYVM5bU9U
      ZEhSVTU2V25Sd2NsSXdDbUpLYVVSRVZURnFRWGhxVURKTFYyaFpPRE0xZW5GaE5XOVNWVmx6VkVO
      S00wNUZhak5GUkdJd1NXMDFiVWw0WmxFNU1qazBlR05WVEZOUFFtNXFSVmdLVVhwQmJWZHFiU3Ra
      ZVhaTVJUSXpjM0phZVd4MVRUSlBaVkJCWm1JdlJrOXhNbGx3TjNsT2MxZElhMnQ0YVhNNU1HUjJk
      R1Z1TWxSbWFrZHJWalZ0V1FwYVozVXdaVk40YWtKS1pYQXZORmRKWldFNE1UTklXakJEUkVWSU1H
      UlllQzl2VjIxdlpHdHBiVzlLY1ZaUVlXYzNNVXMxVUZSd01YZzBSamRET1ZwSENqbEJZamR3UWxa
      V1JYVjZZMDlWVkVwa05sbHlTMmRwVjNVclVGcHljSGs1VTJKSGVVWnpOVUZsTlZVMk9WUXZSMWc0
      YVZod016QXZXRFJFWkd4TGRqZ0tRa0pzU0VKVWNUaFVaeXRFY2taSlltcGhkVFJFVjFwUGIycExh
      elp2VVdWYVlscFVRa05FWWxSbFJYZElhVnBWZGxFd2JscDNSRXcxTjA5MFdXcFBkZ3ByWVVWcU9V
      OVFXWFJ1TmpBMlZITnNhV2hWY3dvOVprNW1TQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Configure AIDE to Verify the Audit Tools - Gather List of Packages
      ansible.builtin.package_facts:
        manager: auto
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure aide is installed
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - aide
      when: '"kernel" in ansible_facts.packages'

    - name: Set audit_tools fact
      set_fact:
        audit_tools:
          - /usr/sbin/auditctl
          - /usr/sbin/auditd
          - /usr/sbin/augenrules
          - /usr/sbin/aureport
          - /usr/sbin/ausearch
          - /usr/sbin/autrace
          - /usr/sbin/rsyslogd
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure existing AIDE configuration for audit tools are correct
      lineinfile:
        path: /etc/aide.conf
        regexp: ^{{ item }}\s
        line: '{{ item }} p+i+n+u+g+s+b+acl+xattrs+sha512'
      with_items: '{{ audit_tools }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Configure AIDE to properly protect audit tools
      lineinfile:
        path: /etc/aide.conf
        line: '{{ item }} p+i+n+u+g+s+b+acl+xattrs+sha512'
      with_items: '{{ audit_tools }}'
      when: '"kernel" in ansible_facts.packages'


# Configure Periodic Execution of AIDE
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_aide_periodic_cron_checking,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Configure Periodic Execution of AIDE
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83437-4
    - CJIS-5.10.1.3
    - DISA-STIG-RHEL-09-651015
    - NIST-800-53-CM-6(a)
    - NIST-800-53-SI-7
    - NIST-800-53-SI-7(1)
    - PCI-DSS-Req-11.5
    - PCI-DSSv4-11.5.2
    - aide_periodic_cron_checking
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaG1RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      a3dSVkFyWjBzMmMyaE1UblZZTTBaeWVGWldPVFJNYlROMmNFMEtVV2hPVmpacmVuVTRlRlpOZFZo
      U1FWZFJjall3ZDFORlZEaElSRWRxVm1aU1JXOUhhazVhVjJGaVRGbFJSSHB4TmxJd2RHRlBlRzUz
      TnpFMU0yMVJXUXA0VDBVelREbHRVWGN4ZDFNMmJIcHhMMFZyYmpCamNrdExNaTlCV2xaeUswRlhT
      M1l2Ulc5R1VGaDVNV2cxZWxOblQxcE5SRFJEY20wMmVITlBTMUJJQ2twcVlrdHplRE14Wm1kNFdX
      bDJRVWRwY1hrNFVVdHpRa1JtV2taWlVuWnRiVlEwTm5KMGFWUkNWbmgyYldGUVEwMWlkRlJMYjBk
      bFJYcExNVEUzVVVRS05GWnZlSGN6VDBGcFpXYzRjM2RDV2xsQmVYTnpSSGQxVkZnd1EyZHRRU3Ny
      Tkc1d1EwNTRSRGd5Y0dKdWVrUjBjM015U2xkWmMwZEJlVUpaUWxwSFFRb3JZek0yYmxWWFN6aExX
      SGRZVXpSYVZFZDViRWR0TmswMlIweFpVRmxrY1ZaaVRXYzJjalkwV25SUFIwVTNWbEptTmxaRVZq
      aG1Rak53ZFdoWVZFVTJDbFZWWmxaRFdUVnhTMHRWYlZGM1dUUmphamcxYlRGRmFVaENVWEZxU1da
      RWFtOXlVVlJETTFwc1V6aHZSRTVLTkU1Q1JFVmtjVXN5ZGxGM1pEbHZNWFVLZGtWWGR6UkVObEJJ
      UW1GSFlrUmhabXRxVlhrMlRuSjRiRXhuWWpacFRsZGFiV1J4ZWtscmNWaHNXWEJqZVU5a1ZWWTVS
      a2MyYVZWeVJYSXdhMVZvYUFwSlRqQllaRkJMZGpsT01qTklXSGhHUkhaM1oySTJLMWNyVW5vMWVX
      SnBVVk01U21GTk1FcEdhbEpHZFRKSUwxVlRlRFpwVFdVNWVGWlJXbFJwWlRkWENrTmxkVlpUUTBw
      RFdtbFBRakJGUkhFclVGUndPVzQyUkVaYVpHaFhXVzFaVUdobUsxTjBaVE50WkVjelNrSnVXbWxR
      WVRoUlkzQk5TbU12VW5sek9XMEthbTE2YzB0Vkx6TlVkM0ZFYlRnM2NubGxlVEJoVmxOUVdXUkhR
      MXBvTlhGb1NXY3pRWGhpU0dJNVJqUm1lbWg0ZFV0UVlsZHNZM05aTjA1dVExVnBTd3AzVlZkQ2Jr
      cFBUME5qUVU1M2JqQnBhRnBTZWdvOVdqSnhLd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure AIDE is installed
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - aide
      when: '"kernel" in ansible_facts.packages'

    - name: Set cron package name - RedHat
      set_fact:
        cron_pkg_name: cronie
      when:
        - '"kernel" in ansible_facts.packages'
        - ansible_os_family == "RedHat" or ansible_os_family == "Suse"

    - name: Set cron package name - Debian
      set_fact:
        cron_pkg_name: cron
      when:
        - '"kernel" in ansible_facts.packages'
        - ansible_os_family == "Debian"

    - name: Install cron
      package:
        name: '{{ cron_pkg_name }}'
        state: present
      when: '"kernel" in ansible_facts.packages'

    - name: Configure Periodic Execution of AIDE
      cron:
        name: run AIDE check
        minute: 5
        hour: 4
        weekday: 0
        user: root
        job: /usr/sbin/aide --check
      when: '"kernel" in ansible_facts.packages'


# Ensure Local Login Warning Banner Is Configured Properly
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_banner_etc_issue_cis,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure Local Login Warning Banner Is Configured Properly
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    cis_banner_text: Authorized users only. All activity may be monitored and reported.
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaG5RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      NVBZMUFyWjBvelluWmplVGxuT0hNdk1YcG1iVkJxYm01WFJtMEthelZFYTBSUmRVWXdNalZ2TjI4
      MGFIbENTSHB1TUdaNWEwSlBkblZZV1ZwTVJFcEJaamxPYjBKVFFYTnpXRVF3YlhNek1tRjZVRFJ3
      WkdkcmRIcENUQXBPVVU1YVFXMTFiVXAyZFdkc1NXcEJlVnBPVWtONFZWZ3JZMXB3WjNSUlVVWmFa
      MGt4TDFwbmMwUmlSV1VyUkROMWFIaERjVVJRVVZSRksyTnpjM2hIQ25GU01uWnVWVTFLZGxGSWRW
      RlJTWGhOZGpNd1ZEWnpReXQxZWpWU2Nsa3lWblYxTTNkdGVWZDRXa2hVT1hOQ1ZpdGFWR05DZDNn
      NVFqaEpiMUJYWW1FS1J6aDVSMjVVYWtkeWVVUktValZhVFZKclRVbHFTbXBJY25GR2FVZHJSMmRO
      ZFVFM05YQlVjWE5HZVc5YVpURm5iR2wwYWprMGIwZ3dXbEpxVVZkcFVRbzBlamRpYzBkWmNFRnJh
      RXhKVlRWa1dtODNNbEJrUTB0UVpIRm1RazVKWlU1WEx6UmtXVE5rZG5Gd09UTjBPVlZQYUhoTmVG
      QTNjRTFQUjFKSFZUWXdDbXB4T0VJeFJ6QjZWblY2TVhCV1RGY3lXaXROV25GdGJEYzVSMmg2YkRs
      VmRsaDNTblZ4ZG5ZeVdFMUJVa1JKZDNWS2FTOU9ha1poV21wS05tOXhaR2tLUzBsQllYWjJla050
      UWpaT2FtbFVabkU0VUcwM2FFbEVRVVpxUldOcldISjNZWEUxZEd0RVpXVjBiamRrZGxsVVQzSnJh
      R1Z0YzNWQk9HTkpORWxZTXdwS1RtbFROa1pRTTJKNE1FVndWMHR5YVRKVFRqSmphMjE2TWpOblVV
      Tk5hRFJJT0V4VFdWQllaakpLY1V0Uk4wWmhZMnhvYmxvcllXZ3pkRFZtTkZVekNubFBTVEJrYjBF
      MVZtdFFZVmRXVVVJck1DdEVVRzFRUVZZNFNrSkxPVzlXWlhJNGJHUjZRV0owWTJaMU1sbG9UV1p1
      TTA5V1JXTm5PSE4xV0RaSWVtVUtRbmhxY1dab1MwRTNiM0pEZHpORlZXaDBTVmREYm5WUk5DOVNj
      VXhaZGtoQlVVNU9PVzVUTWtSNlZ6ZDZaRFV5VGxKT2FHNUVNbFJRWlcxNmIwTnhUZ3BPUXpCaGFF
      Sm1aakIzZGxwR1JtZE9TRFZPUndvOVprMTJTQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86142-7
    - banner_etc_issue_cis
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure Local Login Warning Banner Is Configured Properly - Copy using inline content
      ansible.builtin.copy:
        content: '{{ cis_banner_text }}'
        dest: /etc/issue
      when: '"kernel" in ansible_facts.packages'


# Ensure Remote Login Warning Banner Is Configured Properly
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_banner_etc_issue_net_cis,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure Remote Login Warning Banner Is Configured Properly
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    cis_banner_text: Authorized users only. All activity may be monitored and reported.
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaG5RVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      VnNjMUF2TXlzMVoxUnBXazlsVFVGV1ZreFZOMWx2U0RncmVsY0tXVWgzTW5odlNWUnliRUptVUZv
      MFUycHZOMDQyUTJKRFRqUm1RMWRsY0dkNWVraDJhMUZYVG5reFlqWlhaVGxDYzA4eGVFMDJaVkF4
      UVdFM1ZWWmhTd3B6T1ZKd1oxSmlPV0ppTURjcllsbFFjVVpUVVhaM1R6VldVVUl3WVN0YWFrSlJa
      RVkzSzNFdk9UTmlRV056ZUhGamVGVXZaRGhEVnpsMWNGcDNUVmszQ204NU9YZGxabGwxUzJ0c1VI
      bEZURGxFVm05bk5UTTVOV05GTjJ0cWFWWnlSRUpJWlhFNGJ5dGxMemxZUTJsMFFrMVlOa3RRWWxW
      TGNUVXlWRXhSWkRrS1ExcFBXVXBRUTBGcVJYcEJUMkkwY3pKVVIwOTVRemwxTTBWclRtRnRNblJt
      WkRkemFVbE9LMkZsUjJNeVMzZGhkbTlvTTJSV1UyeFFZMEpCYjFCb2VRb3JZek5oUlhKdFZWQXZh
      RlowYmxac2RESTVXRFJMV0VsNGJIRjVPR0UzY0daUFdGQXpXUzlYZFV4QlNtVTJPVmRuWVd0bGRq
      Wk5SekZRWjBOaGFFTk1DbE53VFZScmFVUmtOemR1WmtoSVNEQndOV1ZFVkdGT2NHZEJVVmRRYm0x
      aU1uQkVNVUptTW0wMVduRk1OaTlUVmtWb1pucE9RbXczTkhCTVEwTnBVRzhLY3pCQldrZDRhRE5t
      VnpWMWRGUnRlVFJUUW1SNk1tTTJZbTAxVEZZemRpdERaRzVIWW05MlVGTktMMmhqUnpKNFRXSlhS
      R05GY2k5UFZXNWxVbEpFWVFwdWRERlZORkpOTlVJMGFHeFBTa3MzWm1kb1NtdGxSMk5FWVdaUVRE
      SmxVR0ZXUzBKblZVRnJla0V4ZW1oSmJWbHZNVzlzU0N0UFNrVk5RbEp3VGtZdkNsZDZiMWxuYVRr
      d2VqRjZTV3B1T0hoT2VUTlZhRUkyY1VvNFVVcGpPRTE2TWxGd1NrZFRkVVkzUVdSMVZqTXpTVFZS
      VlRWMFUwbE9RMmNyUzFWVlNXTUtjSEpuUmtnelRYQXZMMlpUTTJaUWIwd3JVWEZRUms0NGNDczJT
      WFpvSzBKdFpsVlpVSEpLZUZvdllsY3pVbmhzYkdsS1FWSm5jM0pJZWtSbFpreHpkd3BTUkU1YVQy
      eFBVSFY2YVdaNmIwOVJaRmxqZHdvOU1rMHJkZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86143-5
    - banner_etc_issue_net_cis
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure Remote Login Warning Banner Is Configured Properly - Copy using inline content
      ansible.builtin.copy:
        content: '{{ cis_banner_text }}'
        dest: /etc/issue.net
      when: '"kernel" in ansible_facts.packages'


# Configure System Cryptography Policy
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_configure_crypto_policy,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Configure System Cryptography Policy
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_system_crypto_policy: DEFAULT:NO-SHA1
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaG9RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      dERWVkZCU1dWVlZYQnpTeTlFY1hSQ1dUa3JlVFJzVWs5TU5Yb0thVWg1YldSQlFYTmFNMFJOUVhK
      eWJsWnJNVU5SUjBKcE1YZ3JMMVUyYnpkaVNYaFZTVzl2ZEhoWlMzRklUVEpoUVRZcllWUjVRM1JV
      VnpGc00wcGllQXBGTldad2NpdGtia1ppUzJoc2JsbGxNMlpZU25wVWVYYzRjV1V2YzIxRksxQkxN
      Vzl0ZG1GYWQzTklkMVJ2WlhrME1qQm1VbEZ2V0VOYWRHUlViMU5WQ21oVVJITm1PVlJsUVVKdFl6
      UnZhazlNWmtoNVlXWjBVRU5aUkVsV1ozWk1jMng2WkRkSlUyeGliREU0TnpobVlWWmtOM1UwY2pR
      MVkxUktlVXQyT1ZBS1MyaFpNV0ZDTDJWS01qQnNiV1F6Y2tGQ2ExWlFhVmxqUkZwSVMySkVSVzFr
      V1dSNVNYQkNLelJpZG1kU1UxZHRRMUJQZGt0VVQycHNTRXBSYVc5eVZ3bzJNSG8zZWpCSk0xbERV
      bFpFS3pKNlJHdFZXREJzTlhWVU5HaE5VbEowWXpSdmEwVXpOM0pUYW5CM1ZYTjFOVEZWVUd4cU1U
      VXlSVGMxTUVaWk1GSXJDbFZ1ZW1aNWVWcFVTRkZIYVVOSWIyMUpSRUY0YldGT1dYZGpSVEJGZDBo
      VlpXRkpMMG9yY2toWldHaHRkbkoxUlU1c2N6RjFRMDFJZGpncllYRjNNa3dLVWxwRFdEWjRibGh5
      UzNOYWNuSlVOMVpIWjNkdFFXSTBLM1ZwVkRJMlQybDBXVzl1VjBoT1JYcGlhRkJIY1hOdlIxSTFO
      MjVKVDFaQ1oyZE5Oa2ROZVFwblVHTTNSblJIYzFOek1FcEhjbWxJV0hSbVZGbFFWVFJ2VlVaeFYy
      TnpMekEwY2paeVNuWTVhRzV6Ukd0T2VGVmphWEU0VUdkcGFtRjZNbUZ2WlU1Q0NqVXJiMFJvUzNs
      b2R6QkZTVUZqTTJ0Q05HNVlRa05YYWt0bFRuRXhTVmhHVEVoeGJuUkJOSFl3ZDFWSGJWUlpSaTlM
      UTFoSU9VeHBSbVZDZGt4RFZGRUtVekY2YkU1WVQxTkhZbWRtZHpGMGNFdDBNbVpYYXpJemEyZHZT
      emhpVEZaT0szRlZNWFJuVVVGTGNYcEhaRWh4T0U5Q1pVSkljWEozZDJkUlMxVk5Ld3BUUzJ4dVdE
      UlZXVTVzSzNkNldIaGhaM0IzTVFvOWVGbFpSZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83450-7
    - DISA-STIG-RHEL-09-215105
    - DISA-STIG-RHEL-09-671010
    - DISA-STIG-RHEL-09-672030
    - NIST-800-53-AC-17(2)
    - NIST-800-53-AC-17(a)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-MA-4(6)
    - NIST-800-53-SC-12(2)
    - NIST-800-53-SC-12(3)
    - NIST-800-53-SC-13
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.7
    - configure_crypto_policy
    - high_severity
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Configure System Cryptography Policy
      lineinfile:
        path: /etc/crypto-policies/config
        regexp: ^(?!#)(\S+)$
        line: '{{ var_system_crypto_policy }}'
        create: true

    - name: Verify that Crypto Policy is Set (runtime)
      command: /usr/bin/update-crypto-policies --set {{ var_system_crypto_policy }}


# Disable core dump backtraces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_coredump_disable_backtraces,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Disable core dump backtraces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83984-5
    - DISA-STIG-RHEL-09-213085
    - NIST-800-53-CM-6
    - PCI-DSS-Req-3.2
    - PCI-DSSv4-3.3
    - PCI-DSSv4-3.3.1
    - PCI-DSSv4-3.3.1.1
    - coredump_disable_backtraces
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaG9RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      bHFhMUZCU2tSeGIzYzVhWE5VUmxSVGJqWkhVeTh6ZUhCVmJrWUtNbnBtTUdNeFEyUXJiWEZhUlRo
      V1dXRnZkSEZXWmpaSGFISk5hMGw2WkZWVFdrYzJTWFk1VFV0blUwWlhXa3haY2pFeWFtbGtlSGR3
      V205b1pERTFjd3BRTm05V1pXdEZOV2c1S3pVd1NVSlFSbGMyZFcxWFJ6UXhUbTVwVVVreFRHZEVM
      M1IyUTNWV1EyMWFSRFExY0dwUmFqTkZPSFJJVG1aSmJEbDVXVkF4Q2sxSlVqTnJWbXh0VEVveWNI
      cHlPWGhNT1dOamFqUTJZblZSVG10NlZqRndSbXAwVjNwRFkxbDVTek5HZUVaamJEUlRhamx2TmtG
      UVdqZ3JWa3BTTlZnS1oxcEhTV1pCUldkTVVYaEhUVUphU2pobk5sUktaQzl2ZUhjclNsaE9UVWMz
      ZFhkR2J6ZFpPRVZZUkZnd1JsZ3JhbXhzTWxKeE0zQlplV3hPTW05UWNBcEpaVTlXU2poRmIxcGha
      bU5RYVZWSE5rdzJWMkZqTkhOdGVWQkdWbkYzTm5CWmEzSXpVMnBtVWtoWE4ybEZZMk5hY2s1alZH
      aHJkMDFPZUdveFpGaENDbkprY0ZGVmFVZDVaRGh2Vm5WcmNHZEJlSE5SU0hBdldqazFkVTlDWVZk
      M2FWQklURFJ3ZUZkNU5YUXpLMk5VVm5keGJFSnNhMmxhWWpkdGNEVjVibFFLTDBGVWIyazNOVkl3
      U0VscVFsYzJOblZ5WjA1Nk16bGhVSGR0UldzeVpIWnhhWEZxTmpWVWRWQlVaMWRzYVhWVWNsUk5h
      RzVzZWpoNVJXNVNiMFJYV1FweVkwWXJhMXA0TW1GelRYZDJNa3hqYml0T2EycFNNQzgwVjNSWGRs
      VmtZMFZXUmxwbVQwNTVSbVpCY21oMFkyUkhibU42VGxvckt5OXFUREpVWjJ4WENuUkVNVFJYYUhw
      NWJHSkVPUzh5UW14RVpGbGxMMlZ1Tm5CRmRrOVhaMjF3VTFWWFdXUm1ZV2QzV1hOQ2JEbG9ORU42
      T1hKdmFVY3ljVFI2UlhOb1JVa0tTR3BsT1d3d2FURkhOVmx5Y2tjNU4yVkJaMWxKVWs5bU5rWnFS
      R0p6VlZOSU5FbFBLM2hqUjJvdlFWRlRVVGhLWVRkV05UbDVZVXBpUmpKRFJuTklNUXBrZVdKa1pV
      cFRVbEpZWWtobFRXY3hOR05GUmdvOVRFSndNUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set 'ProcessSizeMax' to '0' in the [Coredump] section of '/etc/systemd/coredump.conf'
      community.general.ini_file:
        path: /etc/systemd/coredump.conf
        section: Coredump
        option: ProcessSizeMax
        value: '0'
        create: true
        mode: 420
      when: '"systemd" in ansible_facts.packages'


# Disable storing core dump
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_coredump_disable_storage,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Disable storing core dump
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83979-5
    - DISA-STIG-RHEL-09-213090
    - NIST-800-53-CM-6
    - PCI-DSS-Req-3.2
    - PCI-DSSv4-3.3
    - PCI-DSSv4-3.3.1
    - PCI-DSSv4-3.3.1.1
    - coredump_disable_storage
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaHBRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      OU9VVkZCUzBWUlNFOUxVemswZDJocVQzaGpjbXBFTjAxSlMzb0tlRWhUVDBVeGRETkdiRzVtT1VG
      MlkwSkxkR2hYYjJacFRqbHVhSGt4YlZWck4ydFBSalpqWVhrd1ZFbHZNbmxvYlRSTFlWSXpSSEkw
      WkhJNFRtbEdLd3AzT0VWRFdUQmpVM0JDVlVzM1NtOXBlbTg1WW5aNU1WRnJOVTR6UkRGbU1FeHFL
      MUJUTTI1Q00ydzFZVkJJWm1nNVdIcFphVVU0WTFkM2IzZHJaMmh5Q2k5NGN6VjZabWRZZDA5dFNI
      cGtRMmRVVWxReFRWcHZXVzVDYWlzd1owTlVVMUl5YzNweWFuRkZVRk5xVWtac1RrSmFjemRuVW5O
      amIxZFpkWFoxTjFNS1dUQTNZMEZWV2xZMU5sWk5WRmRqTW5aWU56bEVRVE5YVkdkaE1Va3hjbVpM
      ZDA5Tk1YRjJUM05uWWpOQ1NXSlpSemx3VVdsNFZUaDJaWGg0UjJKSVlRcG9ZVTFrY1hKb1FVMW9k
      V3cxTDFkVFdIZExOVGh5WTA0NWRrVlNVMVlyV0hkb1NYaFlVbEpWUTJ4NU5HVllSMGxYVUVwQ1lU
      a3lTVFZFWTIxd1ZFTTBDblJ2ZWxGbFYxUkljVlJaWnpCNk1uSkdWVWx3V0dvMVRqaG5aR3QzUkVs
      TWJscEpLelF3WWxnM05ERmlRWFpOYVhoRWQxSkRhVTlzYnpkaGJHcHZSMHdLTWtGeFFrdGlORTlt
      TUhScE0zbHdZVEJRVm1vck1YTnVUblpoTmxoNk1YSlZjRzVtVFdKWGRtNDRWSFpUZUV0MFkxcE5U
      MmxhY1V4aldsSndXbkJsT1FwMldHczBXbVJZTnpsSldsWm9MM1ZNWVRadWQwVXlWRTFuV21WcGFt
      UnBZWGQyV2pkWFZHMTZiSHBwYUdSM01rd3ljWE5QUTBwTWVuSkhjV0pDWlhOQkNtbEpUV3RuT1hw
      eVNUZFVWRU5zVVZSV1VuTmtiQzlGVVRWcVQwTXhXbFpHZERoUGNXaHpaeTlNYkRWb1dYbExNbFEx
      VEdWd04xZFZkWFpPWmxoMFMyWUthalYzVkRWeVRFdEhWalJOUzA1aVZGTXZaSFpJWkZVME5UQXhh
      SGRhYW5JNFZqVlZhSEF5WVZGeWNGZG5jV0Y0YW1aV1NFc3lSa0pXUWpOUVRURm9PUXBFZEZsUVZW
      WklVMmRIWVZsalVsQlVMelJFZWdvOVMwZFRPQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set 'Storage' to 'none' in the [Coredump] section of '/etc/systemd/coredump.conf'
      ini_file:
        path: /etc/systemd/coredump.conf
        section: Coredump
        option: Storage
        value: none
        create: true
        mode: 420
      when: '"systemd" in ansible_facts.packages'


# Disable Host-Based Authentication
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_disable_host_auth,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Disable Host-Based Authentication
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-90816-0
    - CJIS-5.5.6
    - DISA-STIG-RHEL-09-255080
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-3
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - PCI-DSSv4-8.3
    - PCI-DSSv4-8.3.1
    - disable_host_auth
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaHNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      cHVaMUF2VW5nMVlWVkRiRTlYTVdOT2JuaGhNVmxrY21kWVJHc0tTblptVFdZMWNIUlpjMGR3VUhF
      M1F6Y3piMk5qZWxSWVZIWkVWVXRyTjB0TlJtcHBTbXg1ZFRCSEszcE9UMFozYm5obGVrbERPSGcz
      VTFoQ016UXJZZ3BQUWpJMlduVnVTMmRLWW5vck9IUmlZM01yY3pCdE4zVjVTMkZ3UVVrck0yMUlh
      MGx0YXpGb05HUnFUbTV6V1ZwT2EyUXlSbE0yYVhsNWRuQjZha05zQ20xek56STFNbkJhV0VNd1lp
      OUhXVm9yTlRaaGF6Z3haakZJUjFOdFlXbG5aV0p4YjJaTE0yRm1aMmxxTmtvclpHd3hUMHhpZEVa
      eVdtcHFSbFp1ZGxFS1FVUlpSMWhYWVhrM2VWUmhiVnBsTUd4SFJFNUhWWGhXTmtwbmNXNWxOUzlM
      V0UxUFoyaDZTbmMwVG01V1VGRlVabE54VkhaR1YweHVVekZZTHpoME9BcFlhRzUyWTNnM2RqaDFh
      V3Q2YTJSQlpWQlZSWEZTWkM5eVQyRnNObUl3YjJodVNXOXRVRWR2TlVaQ2NteHdXV3czV21OaWIw
      ZHpUMFpWTXpoeGVGZFBDbmhTY0VaRWNqaHVTVUZET0hWM1lXaGFaRzVOWlZNd2FDc3dUVkpLTkUx
      S01ubE9VMEl4VkU5aFJWTTBNVzFVV1hnclQyUjBjMkpHYjB0cFZXaExSMDBLUVRsVmVHRmhjMnhF
      WlhWd1V5OUZOSHBJYkhCUE9XTk9aRVpVVFVKbU4xRTRXVU5CUTJOT2RHZ3lOWGh4VUdreUwyNTJS
      WEptSzNwU2VFcE9RamxWUVFwVmMwWkZVWFZMZDBoemRuTkdRVUZ1Y0hKbGVIQnNWREk1V0M5TmNG
      cERkRmxOYW5wRVp5OTRkakUwYTJWT1ZHOVBNazFTTTI5TVMxbGlaR2xMY2xCM0NtbHFaV2xaYlU5
      aVFXaDBjak5GZEcxbFlXdHNOMnhTTjJGWFkyeHBOa0pOVUZjemJ6TnlSbTlsY0VwT1JsaDZObWRx
      UzB4MU5HdDZUR0ZpVVdjMmFHc0tjRTFXU21WMmQyRTVSak5YVlROeFNqWkZMM1JsT1ZkeFdrZDRi
      bTAxVEdkQ1NrNXhXalpsT0hkR1UxSkRieXREWkhjNFZIRnFlVFYxU2s5a2FrSnVhd3A1TW1Gc09U
      ZEhWREk0WkRRMldrTTBVbTgzVndvOVprUnVVd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Disable Host-Based Authentication
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)(?i)^\s*{{ "HostbasedAuthentication"| regex_escape }}\s+
            state: absent

        - name: Check if /etc/ssh/sshd_config.d exists
          stat:
            path: /etc/ssh/sshd_config.d
          register: _etc_ssh_sshd_config_d_exists

        - name: Check if the parameter HostbasedAuthentication is present in /etc/ssh/sshd_config.d
          find:
            paths: /etc/ssh/sshd_config.d
            recurse: 'yes'
            follow: 'no'
            contains: (?i)^\s*{{ "HostbasedAuthentication"| regex_escape }}\s+
          register: _etc_ssh_sshd_config_d_has_parameter
          when: _etc_ssh_sshd_config_d_exists.stat.isdir is defined and _etc_ssh_sshd_config_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/ssh/sshd_config.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: (?i)(?i)^\s*{{ "HostbasedAuthentication"| regex_escape }}\s+
            state: absent
          with_items: '{{ _etc_ssh_sshd_config_d_has_parameter.files }}'
          when: _etc_ssh_sshd_config_d_has_parameter.matched

        - name: Insert correct line to /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
          lineinfile:
            path: /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
            create: true
            regexp: (?i)(?i)^\s*{{ "HostbasedAuthentication"| regex_escape }}\s+
            line: HostbasedAuthentication no
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'

    - name: Disable Host-Based Authentication - set file mode for /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Ensure the Group Used by pam_wheel.so Module Exists on System and is Empty
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_ensure_pam_wheel_group_empty,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_sle,multi_platform_slmicro,multi_platform_ubuntu
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure the Group Used by pam_wheel.so Module Exists on System and is Empty
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_pam_wheel_group_for_su: sugroup
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaHNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      RnhRVkZCUzB4QlNuWXpVVEpsU0ZKNWNFRnZSMHBEVUZvMVl5c0tWbEJoYlZjNVl6SlNWa28zYUVG
      MVdFNDNWMU41WldSdWNFczVUa3hEUVZGcldUTlZWbk5CUjBwRllWbG1PV2RaVWpWSFV6bENMME5r
      T0VSNVkwNTJkd3BTSzBod1dITXJjWFJZYUdGRWRHMUpRbmhJTTAxVWJUSmFOVlJYYTFocFJUVldV
      V2MxYVRaRlUwcEZja2xCVEZCYWVHdzVha3BNTURkcFFqQlNNaXRCQ25aMmFFWXZhRVJDTlZOdlFs
      ZHNVSGs0TnpkS09VNHZZUzgyUkVKVldFdEJlbnBDTTFBd05qVllZMFJQYzFjNFlUWmxTRmxDY2pa
      c2R6VnRha1V6WVVZS05ITmFXaTlyVVhVeU1FWk9RVEp3WldkTGFrMXRSM040VVhoWmFYVjBjazVK
      WnpkYVZHeENSRkUzYUhwdlYwbHpZbWw0YWtGaVQwUXJjVFJYU0VsMFVncEJPWEJJUkhVNGEwNXVh
      SFozZVRZd1RHRkNibEpJZDBveFoweE9kek5aUzFSclMxbEhjVEJ0YlRnMmJqTnNiRkpyVUVoV05Y
      TkNRM0ZZWkdGRFQzWnpDakppZG5WNWMwRnROVVJQU1drNWRtaHNaRnBwYVVrNVowRlNLMXBZUTJJ
      MFJVODBlWGc0ZGpSd2NFcFZkMHhqTlU1VFRrNHJlbEpoUTJsRFJVbFFOV1FLUTNFNWNVOTZOM05F
      VDNCbWJrTjRSV1Y2ZFdwdU9GbDJOVkJWWVNzM1IxWm9XRlZNYm14NFpGZEVhVEpFVVhkVFdqSlhW
      U3R0UmsxbE5EUnBRelF6YkFvNEszZGhVM1JUZVVWb1ZrcHNWRmx1WVdkM2RtcGxTR2RUYkU5V1Ix
      VnhSVFZsZVdkdlp5OVRiMFJ4YTBFeWFUUnFkVEUwU0VwRGQzaE9aRFp3ZW0xUkNtdDVTbk4xUkV4
      blNrczNOMmRrTW1wNk1ERlhkMjlEZDAxWk5EWjRhelI1YzI1clJIWTVNbnA1WlU5NlEzVlJOalJL
      Y25OQk1uaFdRblF2UVdOTk1HUUtSVGd4WW5RM1pGSXdSalZPVnpGSVoxSTVlamhtWkhaWlFXbE9N
      amhzY1cxaVdFcHFSbGx3WjNCUE5IcFFkVmRUZG5ST05tOW9kbkY2ZDFNNFZDdG9SQW8wZVRka2Qx
      aEJkeTg0ZGxJNGEyZExOVzR5WkFvOVIwazBRZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86072-6
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - ensure_pam_wheel_group_empty
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure the Group Used by pam_wheel.so Module Exists on System and is Empty - Ensure {{ var_pam_wheel_group_for_su }} Group Exists
      ansible.builtin.group:
        name: '{{ var_pam_wheel_group_for_su }}'
        state: present
      when: '"pam" in ansible_facts.packages'

    - name: Ensure the Group Used by pam_wheel.so Module Exists on System and is Empty - Ensure {{ var_pam_wheel_group_for_su }} Group is Empty
      ansible.builtin.lineinfile:
        path: /etc/group
        regexp: ^({{ var_pam_wheel_group_for_su }}:[^:]+:[0-9]+:).*$
        line: \1
        backrefs: true
      when: '"pam" in ansible_facts.packages'


# Ensure that /etc/cron.allow exists
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_file_cron_allow_exists,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = disable
# complexity = low
# disruption = low
- name: Ensure that /etc/cron.allow exists
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86185-6
    - disable_strategy
    - file_cron_allow_exists
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaHRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      OWpNRkZCU2pkcFl6UlNka0ZsS3paUU9YZHRZV3h4TVhGbUszZ0tha1V6WTNWV1dXZENRa0k1ZHpr
      M2NYZDRZbVJOZWtoUFYxRlBXbE1yUVc5WFQwOVRXREZoTWxwUVlXVnFXR3hUZFZGb1FsUXlheXR0
      U0hCdmFYWnBPUXA2VERWRmVVdEhhMDl2WVRGcVIzUkNTMWRZZUVwVlZUbFdkbm96UmpKc05tVTNX
      Qzk1YmxjdlZuQkhTa3gxU0ZkVmJITkdOREE1VTBsalVGUjZPVFkyQ2pOcFdtVXZLMGsyWkVKblFW
      TlNjVGRXTUVvd0wxQk1MMVpGUzJGNWFrdFdkWGx3UzJaa1lqQmFWa3RTZUZadlYzSjBaelEwYnl0
      RlJVdE9kVXhrWVU4S2VHUkdaemx4T1VsUldraHpiREZaUmtoT2RrSkhVSEV2ZEhaMmJWWndaM296
      WXpNclptOXlVako1SzNOd2NHbzFhVGw2ZFRCdWVHNU9NazVUVlRaUmJRcGtUMlZ6VjB0VGJuQXZk
      elJWYzJReFZGaE9VR2x6WW1OTGIyeDBSSFoyYkhwbVIwTnVPR1F5VTJwdFYzaFpaekJ5VUdKeFp6
      WldVekZ6Ym5OcWF5dDBDa0oyUVdZeVV6TlVVbXhFTUVGdGJrMTRkbEJwV1dKclQyMWxiREZ4Wm5V
      emR6bDFUbVZJWWpGclFtNUhkRXRSU25SR1dGWlpOMlpsU0U5MGJXOW5NMjBLVFRKRVRuVjRjbEZD
      VW5wNWRVcG9heTkyU0ZGbE5teEtNMWgzWjFZMFdFMHlPRVIxVUZkR2MweExSek5UYkhWWU5tSmxj
      bXA0VGpsdVdqQTJTakpoWWdwWVdURXpka2haTTJFMUwyOUdVVWRTYkVGSVlYSndka1JLY2tGd2Ew
      czVaR3RWUkRObVRFeFNZM0pEZFRVMmMyaDBNRmQyU0dOTE1VRmllbVExU1ROYUNtUnVNa2h5ZHpk
      UFYwRmxjME5vVWpWR1YyNHlTSGxVV0hwMmRYUk1VMkpDVEU1cU9FbDFUME5ITVVzelJHTnlNMDVO
      ZGpBMGJFOXpMMGR2TVdneFVFWUtLM0J3TnpOTVpraEtXbGd2TTBkVlJqaFFaVlpYZEVsRGVFYzNi
      VzEzV2xGaldYVnhLMVptZWxacU1XdDRSemxtS3pobFFWaDBZMDlMUzJGb2J6bHhkZ3BNWTJnNVVY
      WnhkRVJqYkdaT1ZIRTJSazR2YVFvOU0zTllaUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Add empty /etc/cron.allow
      file:
        path: /etc/cron.allow
        state: touch
        owner: '0'
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Ensure that /etc/cron.deny does not exist
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_file_cron_deny_not_exist,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = disable
# complexity = low
# disruption = low
- name: Ensure that /etc/cron.deny does not exist
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86850-5
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - disable_strategy
    - file_cron_deny_not_exist
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaHRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      dDZkMUF2TTJsdU0wWkxOek5zTDJKa2FVaGhhSGxNV2xkMU1GY0tNbUZpTDJSdFVIWnhSMVV5WTAx
      S1dFYzFPRWd6ZWtoeVJpdFBka1pUYWtKbloyOVplRTl6ZVhWdU9FUk5aVXRITlM5T2NGcHpiRmRV
      UWpoTVdtRlFhZ3BRTUdaUFRXRkVaMWxyUlhkaldYRjZTbXB1ZFdvNFdVRklNSE5JWnpsRmRuRkVj
      WFJzVldWTldXODBVVUpEUkRGSldYQTNhMHB6VUdrM1NVOVhaRkF5Q2l0a2NpOHhVR3hWVlhOck1H
      RXZZV1F5YlVkU2FUTmFhMXBUTHpFeFRHWmFkVk5yTjFVNFVrRnBPR2swV1ZGNVpqWkNia2hxY214
      NE5EaHVWVmhCV0RBS1YyazNOMDVDYnpOMWNFbExNbVZOTWtWb1kwVjNhM1JwUXpSMlUwVXdkbEZO
      T0VKcVUzQTNXR2RxVkRCUWFuSkljSGR4YVVKV1ZVVnZjSGRvY2twM05ncHdjMjlHYnpsSE4yUnRj
      R3AzYXpKbFkxUlRSVFlyTjFoYWJuZE5abE12V1hWWGFHSjZiRGxQTUhsTVNYcFFXREV6V0ZOamRI
      RTJZMlJDV2t3dk9FeE9DakZpUm1sblZHRXpSR2h4SzJOSWFWQm9PWGhLVUdSVk9IaExZVEJuTnpG
      RVdYSnVjWEUzUWtjM1NtbE5VM05CYzNvcmIycERSMVZNVERBd1VVNUdhMGdLWjJVMGJqSkROREoy
      UmtJM05ETndjRXMzTUhoUlZXWlpUbWt3ZW5OV04yWmlRMUZhTkhNd05tTjJhVWwzYlc5WWFscGhS
      ek5sY2xaWE5GaHpWVzVZYXdwM01qaEpVWGxNVUhaV1dYRjNTM0pNTlZSNmNFeEpRVmxhVVdNeVJs
      SkhkREJDWTNsQksyZElWVTlQZW1NMFEwdFRaSGhQZW1GdmEzQkxSVzR6TTI1eENrdEhhR3BqWlZk
      aksxSjViaXRSYlRBcldVVldjV05qVG5sM2FIVlRhSGRWYjB0dmRWZEdVVFJqUmpoMVFsQTRUaTk0
      U25RNGVVOUliVVI0WTFaM2J6UUtiWFZzZVVsb1p6Wm5RVUZET0hBeldrMXBSME5tYW10alZGSTFU
      emQyY1RoTFptVnRjRVJqUjFwNGFuTk1VWGRrWnpKcU1FSm9aelZEYzNVMGJTOTRSd3BLYTFOTFMw
      RjJiMlptYVdKV1dWVmthemhDTndvOVkwVkNOUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Remove /etc/cron.deny
      file:
        path: /etc/cron.deny
        state: absent
      when: '"kernel" in ansible_facts.packages'


# Verify Permissions on cron.d
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permissions_cron_d,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Verify Permissions on cron.d
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-84183-3
    - DISA-STIG-RHEL-09-232040
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - file_permissions_cron_d
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaDZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      OWxaMUF2TWtOWWJUaElTVkU1ZG1SVmFIaE1kRFpQUm5odVMwTUthRWs1UWk5Q1dHdzNOVk5FUjFs
      M05ERk9TazVoT0RoV1ZtOVVkVFJxWkc1SlYyeHhkVmhtVFU5SFZTOVpMMkpEUVV3ck4zb3djMnMz
      UlVvNGJWbFhTZ3ByTVZaRE1rOXdWVkZ2TmxwUk9HbFZhVWhSU0RKTlZEWXJVVTF3U3pGNGFGVlJV
      elIxYjFsa2JUQjRWbEFyVEhZNFMyNVRhREZ5TVdSWVNrdFhhMkZDQ2pOWWRreFRVbFk1YlVkdFJV
      azFlVzVQT1hCaGJrUnJXRWN5T0N0cWEyWk1SRkJpZWk5NFdITXhWbFpCYjFWWmJsSjVaREZtZW5G
      SlNqWmpSMW81ZW1ZS2RHWnVWSFZVVnpST016SkdOMUpMZFhFelpGQmxlbHBFYlVGSmRtOUpNMkps
      YzFwS2FsbG1jUzgzZFd3NU5IaHBNR1pRZVhBdlFuWlpPWGN4Wkd4SWVRcGlObWRZYzFkWk1pdGhO
      MGxMV0Vka01YWkNUbU5RVG01UlNVdzRXbUZ1UVRCSVVWQmhaRk1yVEhkTmRWaHdhbkZQTjNGa2VX
      WXlOMDlSS3pCb1ZGbGxDazVPYzI1U2IxSlBWbXc1YWxKeFdFeGFkMGwxUWxSUWRFbDJSbUp2T0dO
      bFZUbFlNSEZGTlZRMVMyOXNSMFJaUTFWSVNGbFFhelZsZERVd1lVVkJXVXNLUlZGS1QzZHNTMmhG
      Wm5nNU55OU1ZbkJrY1dOWE56WTJha2szTDNnNVNUTnBUSGhhVG5jdlVtWlpTMkY1WVRSalUxVlFk
      MWxSYkRReFpVVjFUM051ZFFwWksxaG1ka3dyYkdwb1RVbEZURFZ1Y0hKUlJuWkpkRTFaYzBwMFFW
      SnNUbXBuWkdod1NqWkNkMkozV0RVMlNrbEVUekJFUlhCQ1YxQk1OMUpwYldsckNuZDJkalZQUjFO
      b1lsWlBZVGRNVVd0TWVrMVNkWGxwTmtaYVkwbDVha0ZxSzIxeFIwcGpRVVo0U0RKSE9FdFpXV3Rr
      UW1JMk1URmxNVVoyWXpjdlNYRUtWMk5RTjNCblkwaFJRMjFsZFdJNFEwOUxiMFowYzBKcWFXNXJW
      bTFHTkdjelRqWlJaRzQyVjFSdk5tNHJOR3hOT0U1NE9IWllZV0ZNUTBWbFNqVXlSZ3BHWlhsMk5W
      cE5URlkzU0ZWU1YwRllLMHhYYkFvOWNYZE5NQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Find /etc/cron.d/ file(s)
      command: 'find -H /etc/cron.d/ -maxdepth 1 -perm /u+s,g+xwrs,o+xwrt  -type d '
      register: files_found
      changed_when: false
      failed_when: false
      check_mode: false
      when: '"kernel" in ansible_facts.packages'

    - name: Set permissions for /etc/cron.d/ file(s)
      file:
        path: '{{ item }}'
        mode: u-s,g-xwrs,o-xwrt
        state: directory
      with_items:
        - '{{ files_found.stdout_lines }}'
      when: '"kernel" in ansible_facts.packages'


# Verify Permissions on cron.daily
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permissions_cron_daily,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Verify Permissions on cron.daily
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-84175-9
    - DISA-STIG-RHEL-09-232040
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - file_permissions_cron_daily
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaDZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      Vm9VVkF2TUVwbWJuaHVZMlJLTURKRWJDdE9ja3BXVGt4MFoya0tiekJZYlZwc2RHMW9Rblp6UlVK
      cWRXeHBTbXN3UkRSbGIwaHRkbGt2ZG1kTU1UZGxOa0UxUkhsRFlUbE1ORXAzYVhWck9WbzFRakJF
      Y25kVVN5OUdOQXBOWlN0MWFXRXpSekZ6TlRKTU5WTmhSaXRoYTFsbWVrUk1PVVJtVm1rdllWaFlU
      bW8zUlZGS2F6ZFRXa0pNTDBZeVJYWlliVzVHTmtOcFExWXlRV1JZQ2xGaVUySlhNV3BJU21zMVFX
      NUhOa1ZoT1VaUmFXVjFURk5LVW0xek9FNXphWFZLUjJwVmIwc3dOV0ZUYUdVeFRWbERiVzlsYlZO
      cU5FTkhNM0pRTmxFS1lqRTJNRWcyVHpsTmVUVnNLMnRTTUdKT1Z6VjJOamgyTkhZMFdubElhWGhN
      TUc1RGFURjVXamxSYVdoRU1YUlRWM1pwWkhsRlZHeHhaWFJrVTNGSGJBcFlZbkJCV25NeVlVTm1R
      ekV4WmxNeGIwc3JiVzh4UkhWTFZIazRlbFZETlhsdWJHdExSVE5qY1dKdE0yOVRNbWhoTUVSTldW
      ZGtWWEpYZUhORWFGQkhDak52VjNkYU9Vd3JSR1ZGTW1aMlQzZDFWbTVaT0RWUFFuUjVhVlJMTjNj
      MVdqZFVNRzlFYlhSRGNEQTBTWHBCY25OV1dVcEdiVE56ZVZwM1YwRkxLMHdLWTNKNFpUTjNaMkpY
      VGxSNUx6WTRSazFJYjNSMk1qTnpSVGRuYkhNeGEzTkxhMWxZUXpWaFZsQlpUa2RNVjJWelREQmti
      akF2U0V4cllscERaMjVRY1FwNFJqRlJTV3hKYmt4WFNHTmlSVWxPUmpSblprZExSWEZvWTJOaFdr
      eFFSR281UzNabWEyWm9LM05NYW1WNE5rWkpWalpPVGtjeGJTOXdPVWxUYlV0eENsTjRiVmxMV1c1
      ekwyUjNaRWc0UkUxSFUwNHpkVlZFVmtRclZHWm1XVmRpZHpWbmNGSldRbEl5YkUxSFIwTTROa0Yx
      U1RJNGVqbHFNblZGV1dJek5rSUtXVmhYYms0ME1UVmhXaloxUW0xWFNtTlhURVExVG5aTldsaFlh
      a1pxU1dOeE1tUmpWM0ZVZURCd2VVcGljVkpIV1dRNFkxSjNSVk5KYVVRNFIwRktPQXBoYnpaaVZY
      RTBWeTlDVlRSTlQyeGpOR2h2WndvOUszVklPUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Find /etc/cron.daily/ file(s)
      command: 'find -H /etc/cron.daily/ -maxdepth 1 -perm /u+s,g+xwrs,o+xwrt  -type d '
      register: files_found
      changed_when: false
      failed_when: false
      check_mode: false
      when: '"kernel" in ansible_facts.packages'

    - name: Set permissions for /etc/cron.daily/ file(s)
      file:
        path: '{{ item }}'
        mode: u-s,g-xwrs,o-xwrt
        state: directory
      with_items:
        - '{{ files_found.stdout_lines }}'
      when: '"kernel" in ansible_facts.packages'


# Verify Permissions on cron.hourly
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permissions_cron_hourly,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Verify Permissions on cron.hourly
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-84173-4
    - DISA-STIG-RHEL-09-232040
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - file_permissions_cron_hourly
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaDZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      cEVUVkF2YVdFM2VqTXZaMEpRVUdoSmNtVnVXalUxWmsxcWNIQUtaamN3WnpWck1qZDViWEppTWxw
      UlNIRmFaSFZyYzJvek9HbHdha1JRZUVkMU0zVnVRbmxRUjBKSE9GbFNlVWxRVTNGMVlrMTVNMUJR
      UWtOcVJGRTVkUXBXZEhsbVp6aG5jelpFT0U1RWMxSkplRE5xWjNaTlIyVkpOVzV6U21ONmJEZFVZ
      MkZPZGtkdVRVTklaVlp6ZGtzM2VVSlBTM0ZPVWxKdVpUaFlXalJZQ2xOWlNYRXZObkJoZEVsVFVt
      cFZSa1ZSVUdwcloyd3lSbGhGTkRSUFUxVnJTME5JSzFKV1pUbFZZM1ZPUkZWamMyVlFhVTR3VUNz
      ellUbElZMWhFZFVZS2FraG1URE5CVW5KWFZVODJWVEF2Ym1sQ1NGZzBiWFp6ZFVsV04yVjBWWFZa
      ZVdGWlNUWk5hazk2UmpsSldrOW5iVGd6WjBOdWRYTlFUR1JvTm14alRRcHdWbGhCV1dSR0szZFJj
      emRRYTNWaWFFVjJNbFpJVVVReVFXcDRaa0ZuVXpSbWEySkRNREZEY2xoallsWnFhM0pSV1N0T1NG
      VXdNV0ZVU0UwMFFWY3ZDa1E0ZHlzeVNGZEtiV2RNVjA4eVZqZFRSRW81ZW5oT1pVcEdXVTEwVFRs
      MlVuZDJPSFZGUzJreFdrVnFaVzlhYVVOV2JsbzFRV0ZvYTNSak5XaHZZbW9LU2tjMksyZFZVWEY1
      WVhSV1MwVkZlVGd5VVhCVmJUWkJkVlZqZDIxRFRtWkJTMVI1YzFneVluZGlMMk5xTVZWdlUybEtj
      R2RGYUVvMlkwSnZNelUzTHdwSFRWZzFkbWx3TWtkUWQxVm9TbmxUVVRoaGVqQnlaVlV2YkVkVVdX
      WmpWRU16UkRoakwwcG9WRkp2YUZodlUwSm1iblpFY25NeGRFNWhUVFJoU0VneUNrSllhRmMyYkhk
      alRuZFpRbVJ5TlcwM1duaHJUMDh4TWpWMlRsQklXR0pUUmpZdk1XVnBSV2RxYzA5dGRpdHpTbTB3
      VkROU2NVSnFWek12T1VSQlFqRUtTRWMwVDBSSlNHUjRORVZRUld3emRVaDNUa3h1V0hkTFUzbFNa
      MUpGUjNFMEsySnBUM05JVm1saVRHRnRhemhYT1N0blIyY3JlR2wxUmpkYVl6TXpLd3AxWTBSSFFY
      ZHVNV3RwZGpsMWRYQkRWRFExZHdvOU5FUkpTQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Find /etc/cron.hourly/ file(s)
      command: 'find -H /etc/cron.hourly/ -maxdepth 1 -perm /u+s,g+xwrs,o+xwrt  -type d '
      register: files_found
      changed_when: false
      failed_when: false
      check_mode: false
      when: '"kernel" in ansible_facts.packages'

    - name: Set permissions for /etc/cron.hourly/ file(s)
      file:
        path: '{{ item }}'
        mode: u-s,g-xwrs,o-xwrt
        state: directory
      with_items:
        - '{{ files_found.stdout_lines }}'
      when: '"kernel" in ansible_facts.packages'


# Verify Permissions on cron.monthly
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permissions_cron_monthly,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Verify Permissions on cron.monthly
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-84181-7
    - DISA-STIG-RHEL-09-232040
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - file_permissions_cron_monthly
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZ3dRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      TndjMUF2TWpaR2FWRmhTbWRxUlc1ekwyTk5kSEZxVkROcFVuUUtkR1pvUlhGVFZ6aFFTWGxEUTFv
      eGRXNXZjRVJPY0dJd2VETkRkMlpJTTBkVVYwVnZWMGhsY0ZoUmFVTTRlVlYxV2s1ak9UaHNkVk55
      ZFd0TGMycEZUd3BrU1d4cWIxQmlaWE5TTTFBelN6SlFSVlZOZDI1cFZHVm5NWFlyTWxReVNTOW9T
      RWRHYjFGWFNrUTNaVk5NZFc1TGFIbHhjR0pHTVVWMVl6ZFNTa0UzQ20wMFR6QmFNRXR0UjJGRGFH
      SlRUWEl6UWtOVVVtWkVOa1ZvTkd0MFIza3ZTVlpHU1RsMGVXczVUVlpRVmtGR04wbHZVVEpyWVhZ
      Mk5VNVJUMWgxVVdnS1RtZDBURkY2TmpObWFtSTRORU5TWnpWM1N6Z3hVbmhhVlVKNFYycHNjM1py
      U0dOMFVqTjRVMUl3WjJodmQycEdjSGd2TmxoNlFVdE9WWGROWWpBek1ncHphbmQ0VEdoSU16RlFa
      Vk5ZUm1Gak4zQk9NVFp5VGpGM1FXNVFSSGhQYVVReE5FVkVRbTFqZFhwbVoyMVlWR2gwUjI5Q1dt
      bDVMMEZYVm5KMWVsWmlDako0WkdkQ2FtWndVa2xoYzJOcGRWbGthVVpJYVN0dFNXVktVM1EwWm5a
      MUsxQTFja2RWZVd0YVJpOVZXR3R4VlZKbU16Wk1UR2hrYm1GS2IycEtUVWtLVUcxdGRrcGtTMlZN
      T0RaS1dHSnZkV1pUTlRrNFdraGxlVE5NVDFWRGJWTTFja3cyU0UxR2FGbFBPWFZKVlVSNVl6bEVO
      SFI2Y0ZodVpFRndZbFJJV1FwU09WSlpSbGxJTnpWWVVXcDBkekJPYlhWbGVGSTVXR3R3ZDFGd01E
      ZEJTalpLYWxOQk9HVnJZVUZKYUZScVJrNXFiR0p6TTFaVFUwZGhLekJrWkdzMkNqTk1URGhhYlVw
      SWRHRmxOREZVZVdsWFRGQk5OeXRMZDI5TVdVdFRWU3RHZDNONk1VSnZjRUZYVDNwYUx5OTNUV2Rq
      VmpCUFdFbEdNM1ZyU1haNVJqQUtVa2d6UlRNelpqaDZZVVZMYkVoMGFqTnVibTF1Tm1KSGJWcFJN
      U3RMYURsNGVGcGlURlpGY0M5UWRVdG1PRFJtT1VsME5FeDRhRVpWYzFRcmFFNXFad3BTY25CTllX
      UjJORFZ6WWxoWGVuRnNXV2MzY1FvOU1raENXQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Find /etc/cron.monthly/ file(s)
      command: 'find -H /etc/cron.monthly/ -maxdepth 1 -perm /u+s,g+xwrs,o+xwrt  -type d '
      register: files_found
      changed_when: false
      failed_when: false
      check_mode: false
      when: '"kernel" in ansible_facts.packages'

    - name: Set permissions for /etc/cron.monthly/ file(s)
      file:
        path: '{{ item }}'
        mode: u-s,g-xwrs,o-xwrt
        state: directory
      with_items:
        - '{{ files_found.stdout_lines }}'
      when: '"kernel" in ansible_facts.packages'


# Verify Permissions on crontab
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permissions_crontab,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Verify Permissions on crontab
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-84176-7
    - DISA-STIG-RHEL-09-232265
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - file_permissions_crontab
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZ3dRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      aFRVVkF2YVRoVVJ6ZE9WVWcyY0VwM2JUbHJUSEYxYVRGalNWWUtUbkZOTVVsNmJXOXFlbFJRWXps
      Rk5EbDRkRFJLVTNCTlpXOXJUWFoxYVdveWVGVmFOMXBwV2pKWVRtUTRVME5zYjBwWFIyaEpSR0Zx
      UmpSeVVUZzJUZ3BvVlZZd2JYVldWWEZaVDJKUWRVSTRNV0V4YWtwNFVFOVRRa0pxTkZJeFZrZHNX
      bmhsUTFkcGEzTjNNREZSYVZacE1UUndNa0kzVms5eWJUUmFTemRLQ25GdlVESkxRMHRyUjNCTVRs
      SkxVWFpPZEVkS1lWSXlWbGxEY0dkVWVreFVXa1ZFVUhsUGNHMXZTamx6Vkhwb1psaGpNMlpDVHk4
      d01IaHBkMVUwUjNnS1RFaG1TRGgxUlRRd1ZHSkVRblJ6TWpKdWRsZzRiMUowUzFVelMxbDJXakV5
      U3pCRU5HNVhkVVpXT0hwMlNIRkZORGxDUTJnMFUzRlBjVFJ4U2s5UlN3cGhZa0pIY1RZcmRpOXZX
      WEJ3T1hWU1UwUTJkbUpYYVV4UVZXeHJNMlJZU2tSaGIyRXhUSFZpWVdGblJuWTRaVkpCVTNCeE1W
      bDNNWFJ1TUZoWlNIbFhDbWR3Ukd4V1FWUjNWM2xpWkhGM2NHaFZRa1pOVVZJcldIVktOemxJTDI5
      Nk1YRktXalpsUjI5dmRHNXBlQ3RTVGxaRFoyWlFiMGRHWTFwTWFsVXlSa3dLVDJwR0wyOVdTMU4x
      UVRCQlUyOWFSMjlIYTI5SVNUZ3ZPVXN2UldOYVNXZEljRGM1U20xdmVreEZTbWhKWjA1MVFYRTJU
      RnBUTTNsMFV6TnZjWHBSVmdwQ2NXTk5UR2RUV21KRmFVOXVTa1p0VFc1a1JHSnhPWGRrTjB4d2J6
      TlVkVzlQU0hGR04ydEpjVVp0WWxSeVJqWmFPVGh3UjBab2VWTnFOVE5xZFhCaENtaEVRV2M1UlRj
      MksxUlBXbU5ZYVhCQ2JHeDRhVkp0TldZeE4wTlhOMkUzUlhsTmRqVmtPWFEwZDBWd1YycHBaRlUz
      YldGdU5VSnNlREJZU0hGSlIzVUtWM0pxZDFFMmNqTm1Wa2N2WjJRNGNISlFlWEpMYUdKV1dVUXJl
      R3hIYlVvMU0xZEhZbUo2ZDNsSk9GTktTMGRWTW5VeFZWRldaQzlKTjNWemRHUkhiQXB1TXpsV2Iy
      eFhiV2QxVHpCa05XeEtLMmROVmdvOVpIQm1hUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Test for existence /etc/crontab
      stat:
        path: /etc/crontab
      register: file_exists
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure permission u-xs,g-xwrs,o-xwrt on /etc/crontab
      file:
        path: /etc/crontab
        mode: u-xs,g-xwrs,o-xwrt
      when:
        - '"kernel" in ansible_facts.packages'
        - file_exists.stat is defined and file_exists.stat.exists


# Verify Permissions on cron.weekly
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permissions_cron_weekly,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Verify Permissions on cron.weekly
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-84187-4
    - DISA-STIG-RHEL-09-232040
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - file_permissions_cron_weekly
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZ3dRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      aHFhMUF2UVdoRmRHbFVWR05VYUd0SlpFdHJWbFYwVWxrMU1EQUtVMnR5TjBKaVowd3JNV2d3ZG5G
      R01VY3JWMmR6TjBjemJqQk5ObUpIZUV4bVRYUlpRbUY1YkdWcmVtYzNOMWx0WVVVMFNVb3pjMUYw
      Tm1wUVJWQnBiUW80V1ZJNVlscFhVSGhFUjA5WVRYUlljelJ2ZERsQk1raGFNV0ZRZFRFNWFrdG9O
      bWhPVERFek5rMVlaRGRpYTBWWlUzTkdNbGhGV1ZaT1p6bHNPVGR4Q2xKUGRIUXhXUzlvTUVwVFVr
      bDZUVTl5T1VGNVNrbEdXREoxZG1OU1EyTTVUbHBpWTB0TFJHWjZVekZGZERsSWRVVllkblIyWjJs
      SVVrSlJSRXhsVmtJS01HUk9PRlk1VkRKNVREZzRhbE42V1RsWlZYWlhXRmdyYlhBd1pIUlRUMWs1
      ZUhKYWRtd3JaU3RGYWxaNWRISnRTV2RpY1daTGNIUkNablZCVW1wMmVnbzJlbTQxUTBsUGRGVmtW
      Mk5MU2tWclpVdzFkVmhOYVVGdE5VWmtVSHBYUVZSbFMyMU1halp1Tm1KUmJ6SkJNekJWY2twWmQx
      UkJNV05hVGtSUmNXdHBDa2xqYkdOSGRrUnNXWEZyUWpOdFUzTXlPVVF2TURaMVNGSXdiM3A0ZUhs
      SlJYSktZelV6ZUdaaldFNXNNWEJ5Vkc4d2FFZERRa2hHTWpoT1RWRkJjRlFLV201aVkzZFlaM05T
      VVVKNVpYZHFOVzlUZG1VNU5taFNZWGRhYUVaVFZFbE9lbEZZWkVGcmFFbHhXVWRZVDNnME1uTXhh
      MlZSZGxoNWRFWkdkVGhsY3dwbU4wdDNTSHBHYTBsbVNFNWtkMEZZYzJ4elFUbDJLMGt3ZEdwVk55
      dDRUSEE0U2pOVVdVNXNORFJDZERWaVJHeHBaR0ZJU0dKa1NuWmtOV0k1ZUdwWkNsVmhXV1IyT0cw
      NEwxRjJVMHRDVGtoRk5tUTJPRlJUYVZGblowOWpkRVZGYlM5d2RUVkpPRTU2YTNkRGJHWlpNMkY1
      VkZkTE1VdFpSRk5XYUV0cGVHRUtSMUpKTUN0eVZUSnBXbXRUUjB0dWJsVjJkemwxZFhrdlRUbGFN
      MkZCVVV0Mk1UUnpaMk5FYldVMU16SnFZalJDUmpkS1ZrRTFkRnAwVFU1V1JVaEJPQXBTUW5relJU
      YzNaWFl5Y2tacFRXeFZkVEZhY3dvOVRYbDJVUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Find /etc/cron.weekly/ file(s)
      command: 'find -H /etc/cron.weekly/ -maxdepth 1 -perm /u+s,g+xwrs,o+xwrt  -type d '
      register: files_found
      changed_when: false
      failed_when: false
      check_mode: false
      when: '"kernel" in ansible_facts.packages'

    - name: Set permissions for /etc/cron.weekly/ file(s)
      file:
        path: '{{ item }}'
        mode: u-s,g-xwrs,o-xwrt
        state: directory
      with_items:
        - '{{ files_found.stdout_lines }}'
      when: '"kernel" in ansible_facts.packages'


# Verify /boot/grub2/grub.cfg Permissions
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permissions_grub2_cfg,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = low
- name: Verify /boot/grub2/grub.cfg Permissions
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83846-6
    - NIST-800-171-3.4.5
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - configure_strategy
    - file_permissions_grub2_cfg
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZ3lRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      WkZUVkF2YVdWVkswNURUbmhYYkdaeE4wNXNaRlJzZERoSVExb0tSbkkxTlhSNVRVSTBURkY0VVZa
      VlNYRldOR1ZMVkZVeWRGTnplbTB3U0d0V2JXNUNOVzB4U0RCdVdsaHhlREJOUml0NlRVTTVNMWw2
      UjFGRk9IQlpVd3BQTjJnMlpGaGllVVUyTmxKWU9XZ3JUM2s1ZVcxSlYwOURUbXB6UzJRMlMxbGFZ
      M2xSV1RSb2VIQkdjbE5pVEZOWlVtNVVjMHhQWVdJME4zcDFTSEZRQ2k4MVZVSXZha05PWVhOc1lW
      TXdRMFI0UmxGd01HbEVkMWswTkVKdE1tNWlOVkpqVkRKb1NVUmpUMHRTVjBSeGFrOU9UMDkzVEd4
      WFJFMVBWVnBrWm5rS1NVTkZkRTFGUmxSamFrRmhNQ3RGTjJndk56RldORGRWUlRodU0zVkpjMFpD
      WlZaWFZrb3JTMHBsZFd0VWJtbGhhbUZJVVRreFpERXJaR1psYzJFeldncEpRbkJLZG1weWVtdDFl
      RmxzVjFOb1VWaFZTbk5TSzNSblYxTklWR1F5U2pCbVoyZExXVkpqVjJGa1lXOXpVMEpPYjBFeVpr
      eDNjazVRY3pCSWFtMWFDbGRvYm5WcGNVYzVZeTl2UTBrd2F5OVVVbFo1T1U1SkwwTXdRMmN2WXpk
      M2FGSmlSRU4wVms1cE4wTlVibFJKYVRaVmN6Y3lUV2RETldsUFdrUmxSMWdLTTJkM2RVVk5RbUYx
      VFd3MGMxSnRaVTVMYlZseVdFMXNRV1JpY2pGUVExcFdjVkF2ZVV0RlExRnNVbnB1VW5ORWFFZHpW
      Rk0yTm1JNVdqSjFhamxpWkFwRVN6QmtaV3RsYUZsSlR6Tm1PRFU1Yml0SVRIaGtia1V3ZFZCdFRE
      aHJkMnhxY3k5U2JUSkJUakphYTNBME1pdFpTVXg1TkRoeVoySjNObTVtWldkVkNtVnFTbkpuTlVa
      U2FYcGlLMHBXWmxoNlpXUkJNbUV3YWpjNGEwVk5hRzAwWXpWdUx6ZDRTa1JDT1d0cE1ITlNhV051
      ZVc5b1YxTlhaVTV2VG5wS2FGQUtXa3RYVEZWTmNGRlZWSGNyT0VsU2VuSm9TMUEyTmxwaGNGTlRM
      MlphWm5sWWJtbHhOVE5JTms5QlZ6RjBkbGN3U1ZSRVpUaEpVVkptVEVsck9EWm1RZ3BuYjNGU2RH
      MTJjMWN2UjFkUk1sSjVVRE5aY3dvOU1pdE9XQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Test for existence /boot/grub2/grub.cfg
      stat:
        path: /boot/grub2/grub.cfg
      register: file_exists
      when:
        - '"/boot/efi" not in ansible_mounts | map(attribute="mount") | list'
        - ( "grub2-common" in ansible_facts.packages and "kernel" in ansible_facts.packages )
        - not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages )

    - name: Ensure permission u-xs,g-xwrs,o-xwrt on /boot/grub2/grub.cfg
      file:
        path: /boot/grub2/grub.cfg
        mode: u-xs,g-xwrs,o-xwrt
      when:
        - '"/boot/efi" not in ansible_mounts | map(attribute="mount") | list'
        - ( "grub2-common" in ansible_facts.packages and "kernel" in ansible_facts.packages )
        - not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages )
        - file_exists.stat is defined and file_exists.stat.exists


# Ensure All User Initialization Files Have Mode 0740 Or Less Permissive
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_file_permission_user_init_files,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure All User Initialization Files Have Mode 0740 Or Less Permissive
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_user_initialization_files_regex: ^\.[\w\- ]+$
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XaDRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      UndWVkF2YWxSNlYxVkdWVVF5Ums1a1MwazVMMHhSTW5KRlNEWUtOemgzVmxoMmJ6QkdOMDE2UzFW
      VmIzSkVOREJOYWtkWWJ6TnZia1ZzUzBwUU1GcExWRVU0TkZwV2JXUnFjVmRLYUVSRFNFSXZPRFps
      V2pONE5WaFZOQXBKVWtaQ2VGTkhOV1JKTWtKUWFHZDZZbFpPTTFoUWN6SmpXR1JKVW0xWE1XMURW
      MWMxYmxvcmMxTlRaVkZVVFVsSWFGQlhlR1kyTURKc2NqWldTMUpqQ21GWWNrMTBOa2RuZG5wU1Qy
      UXlSVmhzU21GNmVFWXhaamRzZDI1Qk1FbzNSM1Z1VjBrNWRtNXNTM0pKVW1oYVNrMUlTaTlXVG14
      Q2VqRlNTRE54TjJrS01rdGxNeTgzTDJKdlZUQjVTelI2VTFCNVpEWlpNRVZ1Ym5NMGFEUm9hREpC
      ZVdwRFJXVkhlSFJUU0dOUmRrZHBZaXRIYmtGU1ZGUk9iSEZMY0ZZd1JRcG1NMlZyYlZCdGRUVmtT
      M2Q2TkdSU2MzQk9RMWxNTm10QmNreDJRbk53Ym5oc2VtcENRMWMxZFdweWNIbFVOREZUVlc5cGMy
      ZE5SRVJFU2t0MFdYcGFDbUo1VVc4d00zSktOR3BFWkRjelRVdEhNRVJOTTNwbVVqSlhTWGRoZFZK
      UGIwcDBXVVJaSzFoNVlubHdSVVJEYVdsbGVERXdRMHBMWVcxbU5UQlBaMWtLWldZelptaFlXRll2
      WVZaQ1QxQlljMWgwVjFSS055dEVNMG9yYm1sQ09WazBjWEIyTUhKbFNHZ3hUa1oxYkVWUGVqbHdh
      WEIyU1RkNWRsUjNSWEJhVVFwdFpGaDNjMFJ4UzJ0eVYzcFdSa2RFTDNGV2RtcFlLMmxNZWxWUE4y
      cGlTVFZMYWtka2VXbGFOazVLY25sQ2NEQnNRMmcwVVhKb0syTlZkRzFRYVVSbENrSlFPVkJhUVdG
      eVQyRk1aRXBDZFZsQmJIZFBUakIyTTI0MVNWaHNkRFJ2ZGxoM1RVcE5Uelp0T1Vwd1UzWTFla3hp
      UVZaM2VqSXhWRFJPV0RSVE1Vb0tTMW93WjJwQlZVSTBaVmh5TkdjNWMyMXpTVkJSYWpOUGRYTkhX
      VEpRY1N0MGVFbFJhRWN6YmpCUlRIVmhhR2RNZURJemIwOUJPR2N6YmxRMU1YTXdNd3BIUkc1Uk5t
      cFFkVXRxVFRSMVkyYzBSekpqV0FvOWVrcE1ZZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83637-9
    - file_permission_user_init_files
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  tasks:

    - name: Ensure All User Initialization Files Have Mode 0740 Or Less Permissive - Gather User Info
      ansible.builtin.getent:
        database: passwd

    - name: Ensure All User Initialization Files Have Mode 0740 Or Less Permissive - Find Init Files
      ansible.builtin.find:
        paths: '{{ item.value[4] }}'
        pattern: '{{ var_user_initialization_files_regex }}'
        hidden: true
        use_regex: true
      with_dict: '{{ ansible_facts.getent_passwd }}'
      when:
        - item.value[4] != "/sbin/nologin"
        - item.key not in ["nobody", "nfsnobody"]
        - item.value[1] | int >= 1000
      register: found_init_files

    - name: Ensure All User Initialization Files Have Mode 0740 Or Less Permissive - Fix Init Files Permissions
      ansible.builtin.file:
        path: '{{ item.1.path }}'
        mode: u-s,g-wxs,o=
      loop: '{{ q(''ansible.builtin.subelements'', found_init_files.results, ''files'', {''skip_missing'': True}) }}'


# Configure Firewalld to Restrict Loopback Traffic
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_firewalld_loopback_traffic_restricted,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# complexity = low
# strategy = configure
# disruption = low
- name: Configure Firewalld to Restrict Loopback Traffic
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86137-7
    - PCI-DSSv4-1.4
    - PCI-DSSv4-1.4.1
    - configure_strategy
    - firewalld_loopback_traffic_restricted
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZ3pRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      ZGlVVkF2VWs1c1RWcHhObVp3V1hOMmRtUllRVkpLTDBaWE4wY0tMM0prVmpoUlQyeDJNVU5tVGtw
      MWRsRmFlbVZSV205TWRYY3dNRGh2YmxCcFdITlFWM05oTm10c1RYZzBRV2RFU1ZoalFYUlVXa3hF
      YlVsRk5uTjNTQW8yVmpGTUx6VXhaRlppTXpWMFdYRlpTU3N5ZFdKT0sxUlRUSEZwUm1KRFdFMXli
      elUyTkhSUlNYaElUVGRaVmt4RFZtOWpTbEIwTDJsQ2RGSk9UR3BEQ2tWNFNFeExTMU5FZUhWMksy
      UlNSa2hJWVVSak1scFJlbWhuTW10NlpqQktObTVpTTJ0RmJEbHRkWFJWTm5KTVJteFVRblpzTURo
      NEwxSnVlVzVaYmk4S2NtTkhXVXhRTWxaalRXZERiSEYxU25GQ01XMUZORlJOUmpadGNXOWtRMXA1
      TjBVNUwzbGpXbXd3TUV0VUwycERPV0pUZVU5S09VUk1TbkppVlhKV0t3cFFjMDlRTkRreWQyVkhN
      emRIZFdFMmJ6WndLelJQTkM5dk9ISlBOQzk0ZUZkWE0xRnFlVVZQVUVoeE9EQllXVFZ6WVhwclFT
      dGxVSEl4U2pKdUwyMXpDaTlvUkhoTFZ6UlRjRnBLUkZGNU0xSXZVbmMyZUZoSGRGaE5ibko0ZEVJ
      M1lWazJUVXd5VEd4eGRuaGhjbk5KVmtwRFdFdDBSbmRWUTBoelYxSkZRWGdLTm1aU2VHaFVPVWd5
      VFhWT016SXlUMnM0T0ZCbGIxbElka3RYUTJweVJ5dEdiRmd4T0VKUGVYbE5UamhYTTI1eVdEVTBS
      RFIxUVVSc2NWVjJhRzEyUlFvMGFUZDZOQ3RhU1ZNMlZsbHZjRXBQVlRobGMyNU5WakpFZDNndlZI
      VTVkVkZuVGxZdlkzZGxTRVJsZWpoaE9WRnNjbUZPU2xFMVNIUkpiM0o1YzI5TkNrUlJNMUpVVEVk
      VkswbHVOVVZGWkc5TlpqTkRUWGsyYlhWalEyOXlOR1pPT1dNeE9TODVWRkl6Um1wNVpUSldMMUZR
      TmxWb04zWkllRnBDWlhNeGFUUUtkMjlEVVZwRGRVcDJSall2YUdjeFFWZDViMGRzYjBKSFRWQnNP
      V0ZNY3l0eGR6bFhZVW8xV0RCME5XOHJWbkp1V1doRVVYTmpUVFp1UkhOR1YwdFNjQXA2TW1Kc2Ix
      WmhlbGxTYkN0V1V6VmlSVmhFT1FvOWRWQmtRZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Configure Firewalld to Restrict Loopback Traffic - Ensure firewalld Package is Installed
      ansible.builtin.package:
        name: '{{ item }}'
        state: present
      with_items:
        - firewalld
      when: '"kernel" in ansible_facts.packages'

    - name: Configure Firewalld to Restrict Loopback Traffic - Collect Facts About System Services
      ansible.builtin.service_facts:
      register: result_services_states
      when: '"kernel" in ansible_facts.packages'

    - name: Configure Firewalld to Restrict Loopback Traffic - Remediation is Applicable if firewalld Service is Running
      block:

        - name: Configure Firewalld to Restrict Loopback Traffic - Ensure firewalld trusted Zone Restricts IPv4 Loopback Traffic
          ansible.builtin.command:
            cmd: firewall-cmd --permanent --zone=trusted --add-rich-rule='rule family=ipv4 source address="127.0.0.1" destination not address="127.0.0.1" drop'
          register: result_trusted_ipv4_restriction
          changed_when:
            - '''ALREADY_ENABLED'' not in result_trusted_ipv4_restriction.stderr'

        - name: Configure Firewalld to Restrict Loopback Traffic - Ensure firewalld trusted Zone Restricts IPv6 Loopback Traffic
          ansible.builtin.command:
            cmd: firewall-cmd --permanent --zone=trusted --add-rich-rule='rule family=ipv6 source address="::1" destination not address="::1" drop'
          register: result_trusted_ipv6_restriction
          changed_when:
            - '''ALREADY_ENABLED'' not in result_trusted_ipv6_restriction.stderr'

        - name: Configure Firewalld to Restrict Loopback Traffic - Ensure firewalld Changes are Applied
          ansible.builtin.service:
            name: firewalld
            state: reloaded
          when:
            - result_trusted_ipv4_restriction is changed or result_trusted_ipv6_restriction is changed
      when:
        - '"kernel" in ansible_facts.packages'
        - ansible_facts.services['firewalld.service'].state == 'running'

    - name: Configure Firewalld to Restrict Loopback Traffic - Informative Message Based on Service State
      ansible.builtin.assert:
        that:
          - ansible_facts.services['firewalld.service'].state == 'running'
        fail_msg:
          - firewalld service is not active. Remediation aborted!
          - This remediation could not be applied because it depends on firewalld service running.
          - The service is not started by this remediation in order to prevent connection issues.
        success_msg:
          - Configure Firewalld to Restrict Loopback Traffic remediation successfully executed
      when: '"kernel" in ansible_facts.packages'


# Configure Firewalld to Trust Loopback Traffic
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_firewalld_loopback_traffic_trusted,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# complexity = low
# strategy = configure
# disruption = low
- name: Configure Firewalld to Trust Loopback Traffic
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86116-1
    - PCI-DSSv4-1.4
    - PCI-DSSv4-1.4.1
    - configure_strategy
    - firewalld_loopback_traffic_trusted
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZzBRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      VldjMUF2TWpOV05rbEpja3hZVW5oNGVuQnJOa0p1VDNCTFpUY0tXV2szWmtRMGNrMVBjRVZIY2xN
      MFNFVnRNbXBxVFhad2FtMVlkMlF4VkdZM2NqVTBUaTl1Y0Zock5XdHRRME5RZEdoVVRGaEtjMlZr
      UmxscVQzSnliQXBaUW5sNE56QmtTWFp6WjFBclUyaEpXV0l3TDFwS2MwUjJhaThyVlZGNlR6ZDNZ
      a2xKWTJSeVRVVk5WR1ZQUVUxa2RtMXJWRXd3VG5JcmNFeG9jakV4Q2xwMVJFdGlSRnBHYUd4Q1dH
      VkhZa3R5VFhwcEwyNUlibkpGTm5SNVIwdDRjVEowUVVScVRYUk5abTlhYlhBME4wMTNWSGt4YzBZ
      eVpGbFdZMVp0Y0ZVS1lXb3pjVEowZVRKUE0xSnhRWFpHYTI0MlRVVktkMDFNZUU5SFJXbzNZelp2
      UjFCcU9FVnRlVzFSVlRKQlNYQlhjVnBtUkhaVFJTdE5iRlJvWkVjelRBcE5NbXd2SzFNNFNtbzFX
      R28xTjBGbVkwbGhiR3hWY1doek0zYzBhV1oyU0dOS2JXdEtWbTlWWTA0eFpYbEZhVTV6Y1ZWTE5G
      cE9USFpKWXpOVlNteENDbTVHUlhCNE4zZFVVRXAxUTNWbk5ITldNQ3RMVFdSdldWSmlOamQwZFVk
      WFF6UkRVbWhQY0N0VVdtUjNVRTU1VGtZNVVuRkpValptYTBGV2FYQnpNVm9LUzNwVmRtWjNlVzlS
      Ykd4bmRqTlZNRU5KUWxaUllta3dkR3d4VW1KTFZubGpXR1IyUzJkcGFEUkZLM3BXUTBWNlFsSk9T
      MEpvVjNGNFNVb3dSa0lyYndwelNYaExiMlo0VjNGamJXeE1VRFpoTmlzNFpDdFJRa2wwZG5KVlNY
      TndjazkwVEZSMFZDOW5hR0pWVVdwemEyYzVkV0ZDWTFOek9GSm1WRmhOYml0WkNtMWhURTFyZERS
      dmFuTnRLMlIwVkU5M1JXOWphbkZRZUVJeGRHWlNSVXg1YzIxMVVtaENWRlJKZDA1eVVHaFRjRVp0
      ZERCRlIybzJaV1JpVTIxMmNsQUtNbmhYY1hGaVkxaFBRM1pHT1VkWVptbHdZbFJ2VGxJdk9YWnBV
      Mll5TTFoSU5TOWFOREkwWkZWdlJrdFpWM05VWm1oUmJsbGxaV0Z6Tm5jeWJUWlZOQXBMY0d4aFpX
      SlJjM2hYVEVoc2FYQkhOazR3UmdvOWFqZGhWUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Configure Firewalld to Trust Loopback Traffic - Ensure firewalld Package is Installed
      ansible.builtin.package:
        name: '{{ item }}'
        state: present
      with_items:
        - firewalld
      when: '"kernel" in ansible_facts.packages'

    - name: Configure Firewalld to Trust Loopback Traffic - Collect Facts About System Services
      ansible.builtin.service_facts:
      register: result_services_states
      when: '"kernel" in ansible_facts.packages'

    - name: Configure Firewalld to Trust Loopback Traffic - Remediation is Applicable if firewalld Service is Running
      block:

        - name: Configure Firewalld to Trust Loopback Traffic - Ensure firewalld trusted Zone Includes lo Interface
          ansible.builtin.command:
            cmd: firewall-cmd --permanent --zone=trusted --add-interface=lo
          register: result_lo_interface_assignment
          changed_when:
            - '''ALREADY_ENABLED'' not in result_lo_interface_assignment.stderr'

        - name: Configure Firewalld to Trust Loopback Traffic - Ensure firewalld Changes are Applied
          ansible.builtin.service:
            name: firewalld
            state: reloaded
          when:
            - result_lo_interface_assignment is changed
      when:
        - '"kernel" in ansible_facts.packages'
        - ansible_facts.services['firewalld.service'].state == 'running'

    - name: Configure Firewalld to Trust Loopback Traffic - Informative Message Based on Service State
      ansible.builtin.assert:
        that:
          - ansible_facts.services['firewalld.service'].state == 'running'
        fail_msg:
          - firewalld service is not active. Remediation aborted!
          - This remediation could not be applied because it depends on firewalld service running.
          - The service is not started by this remediation in order to prevent connection issues.
        success_msg:
          - Configure Firewalld to Trust Loopback Traffic remediation successfully executed
      when: '"kernel" in ansible_facts.packages'


# Ensure journald is configured to compress large log files
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_journald_compress,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure journald is configured to compress large log files
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-85931-4
    - journald_compress
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZzBRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      UnRRVkF2VW5OMWNYTjBhbGs0Y25NM1RscHpUVVZMY3l0dlQwWUtia04wVm10WEsxUk9VV3RCTlcx
      VFJHNURVMDFVZUdwMVl6bFZiSEZtT0RVcmFrbFBTaTlxU0hsVllsSXdXVnBJUW5oUE4zRk5TbmxC
      ZVdkRFIzRnVUUW8yZFRSTGJqTnhRbWxVZDJoc1FsbHJTVU0yTDJaeUszQlRVazFTVUhoUk9ITjRW
      amQyWkVkc1IyWlRkMFYyYW5sT1NESkJhWEJaY2psaVppdFVURlpJQ25BcmMxTmljRzlSY1dWMmF6
      UjRXVTkwYjNaWlRpOVJiMVpEUzBnelFTOU1TRGxwWlhrMlMwVTFXalY2WTJ4VldHTXlSRXRXUzNW
      bUwzWlBXVFpQT0UwS1RHaGhka2QwTUd4U1ZpdG9OalpGT0daS2FTOUhVWFp1U0RjM1JucG1ObW8y
      YkhKVmRIcDJaRmRoYW14UmN6VTFlV0YyVVRNeWEyVkVhQ3R3YmpWeWNnbzVlREkzYVRFNWEySmxk
      R05KS3pRdlUzTk9lU3Q0VGtRdlZuQlViVlJVUkZKSWMyRjJZV1I0UlZoQldVeDNNbEZrTDFwSlRV
      czBXSEowTUhZck1GUnhDbTFUY0daS2N6UllXRGxVU0VwUWVtdGFOSEE0YlRZNVQwVjBPRmRWT0dW
      SGNqSnNRbk5aYmxsUlRHOXBkVTlYTm5NdldIcG1Wek5JUmpCSFlXSlJVM2dLU1ZsSldtMTRNVzlN
      YzBsVVVVcDNlRmRCUTBOck0wcEhTa2xCUnpkT2FtUnhPRlowVkdnelYwOVFXRFpHWlVoc1dFTkZV
      R1l2V0V0TUwydDJOMDE2WmdwME0yNHpiMnBYZFhSVk1GUkljalpWVjNSRFNGUlZibHBZVFdWS1Zr
      czNaVmx2WldSU1VYSnRUVUZ2TkRKNVFtc3JRVkZaVkhwUmRrMWxRVUpwUjNRMkNrNXRabGhDVVZK
      eE4yRk1kbHB3VmsxTlJqbFlSSFV4YWpscmRXUlhZbEpHVjBwa2JVMVliWFpGYkRjelNYRjJiWFZw
      Y25sTGVuZE9URlJCUTFGV2FWTUtlVFZ5TUV4dlNFeERiR1ZrVEVNMWFERktNa3hTT0VKalVFMXVW
      R3REVUUxNGR6TkRObEZqUlRaalMweDRUREZIZUdWdFlXeEJia0k0UVRBd1ZEQXpUZ292U0dFMlZt
      UTFPV1JqTm1FemJUbDNhMlppUkFvOU1sTkhRd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure journald is configured to compress large log files - Search for a section in files
      ansible.builtin.find:
        paths: '{{item.path}}'
        patterns: '{{item.pattern}}'
        contains: ^\s*\[Journal\]
        read_whole_file: true
        use_regex: true
      register: systemd_dropin_files_with_section
      loop:
        - path: '{{ ''/etc/systemd/journald.conf'' | dirname }}'
          pattern: '{{ ''/etc/systemd/journald.conf'' | basename | regex_escape }}'
        - path: /etc/systemd/journald.conf.d
          pattern: .*\.conf
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure journald is configured to compress large log files - Count number of files which contain the correct section
      ansible.builtin.set_fact:
        count_of_systemd_dropin_files_with_section: '{{systemd_dropin_files_with_section.results | map(attribute=''matched'') | list | map(''int'') | sum}}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure journald is configured to compress large log files - Add missing configuration to correct section
      ini_file:
        path: '{{item}}'
        section: Journal
        option: Compress
        value: 'yes'
        state: present
        no_extra_spaces: true
      when:
        - '"kernel" in ansible_facts.packages'
        - count_of_systemd_dropin_files_with_section | int > 0
      loop: '{{systemd_dropin_files_with_section.results | sum(attribute=''files'', start=[]) | map(attribute=''path'') | list }}'

    - name: Ensure journald is configured to compress large log files - Add configuration to new remediation file
      ini_file:
        path: /etc/systemd/journald.conf.d/complianceascode_hardening.conf
        section: Journal
        option: Compress
        value: 'yes'
        state: present
        no_extra_spaces: true
        create: true
      when:
        - '"kernel" in ansible_facts.packages'
        - count_of_systemd_dropin_files_with_section | int == 0


# Ensure journald is configured to write log files to persistent disk
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_journald_storage,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure journald is configured to write log files to persistent disk
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86046-0
    - journald_storage
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZzFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      RnhPRkF2YWtKblZYTk1RbkJvTjNKT1pWVkdWVnAxWm5GcE5pOEtWMlV3VW14MVQxQk1kVGt3Vmk5
      MGRqbFpZM3BQTTBaUkwwSjJVRFkzY1hsQlRHMHpPVkJwV0ZkaFlUSlNjVU5WT0dSSGRHdE9UbW81
      YjNsTVQyWm1lZ3BYWW1OaVVVWkxlV3BVTUdRMlExTnJkWFpKYmxKTGJHTlJjVEZ0ZEhCaGEzSm9N
      RUpLVm0xQ1pFODNRV0ZJZG1WT2FuSkZhemxaTkV0NFp6bERVMUU0Q21WaFJFaG9lVEV6UkU5RWMx
      TTFRMnR1UW1oVVdDdDNPVVJWYVc1WEwxTTRRbXRGTDJSbFJqQlpWR2xYY2xwdlVtVmxSbGhFY0Rn
      NFNrOUVVV3BVVG1rS0wzZDFaWEp5YlhWRVEwdDVNbmhuUkZwNVZuTk5hWFpNVkRSVFJrcFdXbHBq
      VVZodk5WRkpiRkZZU1ZZdmNFWnBOVkJ5YjBab1lXOXZLM2hLYUZodVdnbzVMM1ZtUTJ0VWEySlhl
      bGxFTDFwaU4zSTFTamhYUkd4bldGcFFjM2d3VVZKdk5HZ3hVWGx3UldSaGVYRjNVa05SZGpkVWMy
      cEhjV3hxWkUxbFYzaDRDblpNYlVaT1MySmpObmMzTVhCQ1dFVlNaa3ROVVVWaE1YWnZZMGhEVFVW
      SGNrTnlaekZoYTFBNFpHUTFWVFpHYVVWMWVtWnVNRlpYTlVFeFFsQmFjVm9LZG5WR1kzQnZjVzB5
      V2psbmVWQTBXbmxqYWpZeUwzVkdVRzltVmpKTGJHcGhhRzFUUjJSM1FsTlFSSEI0ZVZkWVdFSnBZ
      M3A2ZEZOd2VVSk1NSFFyVHdwYWFUWlRRMFl2TVdwVWJIUkZlbUZIUkhobk5XWTFSMVZ2VEZwbmFX
      aHZlR1V5T0cxbmVXcERSMUphVFVWaWNWcDNTemN5WlU0M2JtSnBUVEY1VjNsTkNqRjZTbE5GVFc4
      M2NuUmtablV5YWxkMFoyTktXVVJxZFVGbWNFNVlUMUl5YWk5YVpYUkVOMGRTTlZjMFdrMDNSRUpo
      VTFNMmVuUTNia1V2ZW01dFkxWUtSbXByV0hWU1MweFpORU0xYUhCdFdEUk1hMlJoZFVJclZIWm1k
      blEyVDBVdlIzUkRlbEI0V1N0M1dFMVdUelZvVlVJdlJHbFRRV2h1V201M1lsVkpNZ28wVTFaWGRF
      UXhaVkJqUVZoSWVuVnVkRFpvZWdvOWFteHJNZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure journald is configured to write log files to persistent disk - Search for a section in files
      ansible.builtin.find:
        paths: '{{item.path}}'
        patterns: '{{item.pattern}}'
        contains: ^\s*\[Journal\]
        read_whole_file: true
        use_regex: true
      register: systemd_dropin_files_with_section
      loop:
        - path: '{{ ''/etc/systemd/journald.conf'' | dirname }}'
          pattern: '{{ ''/etc/systemd/journald.conf'' | basename | regex_escape }}'
        - path: /etc/systemd/journald.conf.d
          pattern: .*\.conf
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure journald is configured to write log files to persistent disk - Count number of files which contain the correct section
      ansible.builtin.set_fact:
        count_of_systemd_dropin_files_with_section: '{{systemd_dropin_files_with_section.results | map(attribute=''matched'') | list | map(''int'') | sum}}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure journald is configured to write log files to persistent disk - Add missing configuration to correct section
      ini_file:
        path: '{{item}}'
        section: Journal
        option: Storage
        value: persistent
        state: present
        no_extra_spaces: true
      when:
        - '"kernel" in ansible_facts.packages'
        - count_of_systemd_dropin_files_with_section | int > 0
      loop: '{{systemd_dropin_files_with_section.results | sum(attribute=''files'', start=[]) | map(attribute=''path'') | list }}'

    - name: Ensure journald is configured to write log files to persistent disk - Add configuration to new remediation file
      ini_file:
        path: /etc/systemd/journald.conf.d/complianceascode_hardening.conf
        section: Journal
        option: Storage
        value: persistent
        state: present
        no_extra_spaces: true
        create: true
      when:
        - '"kernel" in ansible_facts.packages'
        - count_of_systemd_dropin_files_with_section | int == 0


# Disable Mounting of cramfs
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_kernel_module_cramfs_disabled,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_almalinux,multi_platform_rhv,multi_platform_ubuntu,multi_platform_sle,multi_platform_slmicro
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Mounting of cramfs
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83853-2
    - DISA-STIG-RHEL-09-231195
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - kernel_module_cramfs_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZzFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      Vk1TVkFyWjA1VmNFTlNjbkZEYURGWlZIUnJhV2RvYVZCVVFXd0taSFYxTURjMWRHNHhiSEJKWVdj
      MVVVWlNlbFpzTkdJeWFUaFdUMlI0TkRWeEx6bEhXbFJOWW10dldVWkNhRkI1UkcxNFUxUkVSV0Y0
      UVVjcmIyNTNiZ3BKTjFObWNIbGhZV2RIWm14UlNuZHNaamM1YmpkRVduVkxka1pPZFRCT04wTnFZ
      bTVzVUZab09TOTFaMlZ3ZVZWdk9DOVFhVUYwU25GUFRUTXJORkJuQ21vNWJUaGtaelUwVG1nMWNI
      cFViRGhRV1RSR1FWQjRiVEZtZW1GaEwzZExVVm8xV0hobE9UUk9PRnBWYlhwNlkxTXhVbk51YTJv
      MVdrZEVWR0ZuZG1FS1JWVnNZVTV3V0cxMU5HZDNWM1ZwUzFSMFNHbGFWRkE1VVdoaGVtTlBhVEZE
      TjNkSGVpdHdUM1V6WTJReVZ6UlhNMUpaWVN0aFkzUkdZbGhFTTIxTWVncE5la2xyVEhRMFFqTTFj
      R1Y1Y1dGNFlXUXdTblUyVlZKWE1UTXZiMWRVZUhGeGVuTk9TR2RTV0VkVlJUQkxWRTF4ZURSamNG
      bEpUbXh5YlhOTUwxZFVDbFp1Ymk5YVltTkhXakl2WjBoRFlXc3ZhM1UxTXpsUFJHRlFUblYyTWpk
      Wk4yWkxTMGM1UWtzMGNtMW9VbFpQVGpOUk0xVnlWVTlaU3pocGNDODJLMVlLVDB4QmNHazJiRXhy
      YW1GSlNHbGxTR2xsU2tkV1JVZzRZemRDYTFsM01UUmhaelpoYzNSTVF6QkdXVTlyUjA1V1RtUmFW
      bm80Y1RsQ01IRXZkWFZFYmdwcWIwSTVVM1pNYXpJNFVsaEpVbTR6ZG5GWmJFaHpMemhWYzI1T2N6
      a3haa1Y0UmxoT09GZ3pjWFpGWms5V05YUTNkbHBuUlhGS1UzZGlOa2czZHpoeUNtMWxOVnBOTkRW
      d1FtaEhaM2hHUVVsYVNUbHlRVFJRTDFaelpuWkNXbnBZZDFkRFRHUnhkR2xDUVU4MVkyTjJiMEpr
      Tkc1Q2IyNXRaMGhMVTNremFXRUtWMnBSYXpFMlRqZEpaRVZITlc5ek5GQjBlVFpKWkRKSFJqTXda
      RVpWVkRaRVIwWm9NRFJXYlhOWGVGTlBVWEpWVFRoa1JUWXpRekV3YXpNeVpuSkpZZ3BzTW14NVZq
      YzVXVEJ0UW5VeFYwdHJURGh6TXdvOVdIcHhkZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure kernel module 'cramfs' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/cramfs.conf
        regexp: install\s+cramfs
        line: install cramfs /bin/false
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure kernel module 'cramfs' is blacklisted
      lineinfile:
        create: true
        dest: /etc/modprobe.d/cramfs.conf
        regexp: ^blacklist cramfs$
        line: blacklist cramfs
      when: '"kernel" in ansible_facts.packages'


# Disable Mounting of freevxfs
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_kernel_module_freevxfs_disabled,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_almalinux,multi_platform_rhv,multi_platform_ubuntu,multi_platform_sle,multi_platform_slmicro
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Mounting of freevxfs
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86763-0
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - kernel_module_freevxfs_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZzFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      bG5VVkF2TW1wdGVtWjJPVGxzYm1nd2IyMTVaV1pyZG1wVE5FOEtiWGxsVUZJMldITkROVGN5YkZW
      amJFVlFkSFJFWkhod1JXc3ljRXB4VW5aVlJrOXBia0pJUVhNMVpYZ3lVSFpNVkRsUlFVRnZXRW96
      Wm14bmFtSm5ZZ3BQVkN0MmIxVjBWSE5EWVVSVk5UQlFNa1J4WnpNMlNHc3hjVFpzU2l0V1ZHWm9h
      RUUzTm5KdVVVVTNWelptVEdRdmNFbzRhMVJIYkdkcU5rdEJkVVZWQ2xkVlExTkNRVUpsUldoTE5q
      RnphRGxYVERKbVUxSXJiVEZ0TXlzeWJFWktSWEZ0V2s1MGVqSTNZbVk0THpKM1JsSTFXakZGYUhK
      TlNtRklVMDV0VlU4S0sybENZM1UxWmpnMGFFWmxZbmxNUVd3d1JEUTRlV3MyYTFZMFNsUlNhRWxF
      YmpGdU1WcG5jRWxCTm1Ob1JFRkxURTF4UW1aU1ZsTjFTVXRxWjNSUmNRcHNNRkZETUdoc1dFbEdS
      REZqSzFKYWNrNVFPSFJ4YkhsWFNsaEJTWFV6ZUZBclZVNXVlbTF5TVZWMk5saHZaM0YwWW1oTWNr
      d3lkblpZUlZabVUyOVBDbFpYVDNsM05YTlZhVzlHYjNkcFdtd3ZZaXRCVVdGUWNVdHNZbE5LU0U4
      NFRYcFJWVWxaWXpaNU0zRlNOSG8zVlhKaVMzWnNaMDFtVDFjMWVDODNTV1lLVDBaT1prMDBZbVI1
      T0dRNWNUbE1NMjFvVm05MFZFc3pjWEVyZVM5alV6RjFlSFp0Wm1WTVZHNXVWRUptTkhrclFXZEJX
      WG8xZWxvNVpreEpRWEYwZEFwUlIwVkhOR2QxUWxKS1pYUTRhelF4VlM5YVNuaHlha3BFZFdobU16
      VlRLMFpLT1hsU05URTJha1ExT1hoblRuVmFiV0ZFUVdST1NtNXlSV3d3T0ZKR0Ntd3daSEV6WkhK
      WWNYTnpkVGgzZG10NGFucExjMVVyY0hCNFQzbGxiREZsZDNvMldEVXlOV1JvUVdaNmMwVmlTamRq
      YlRsWk1XSjRTVVU0Ym5GMlkyTUtkMjFOVFVWWU4xQXpMek53YnpSTlprOXpZV1JSYWtOYVoyOW1M
      emxWV25sU1VWTmxhRkl3UVdVMlVYcFRNVTlWTXpsRVZuazJRMk5XZWpaaVIydzRNd3BIYVVaNGNq
      UXJNakpxWkVzemIzaHhWRVZETndvOVYzRnhSUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure kernel module 'freevxfs' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/freevxfs.conf
        regexp: install\s+freevxfs
        line: install freevxfs /bin/false
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure kernel module 'freevxfs' is blacklisted
      lineinfile:
        create: true
        dest: /etc/modprobe.d/freevxfs.conf
        regexp: ^blacklist freevxfs$
        line: blacklist freevxfs
      when: '"kernel" in ansible_facts.packages'


# Disable Mounting of hfs
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_kernel_module_hfs_disabled,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_almalinux,multi_platform_rhv,multi_platform_ubuntu,multi_platform_sle,multi_platform_slmicro
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Mounting of hfs
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86764-8
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - kernel_module_hfs_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZzFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rp
      OWlNRkF2TVRKdVpsRXJLMjh2VDFWYU5HUXZhbXczY0hOWVYxRUtSWE15TlhWV1RURlNWVGhUUzBR
      eE5teHlTbTU0UWt0emNGaDVVRVp3TjI4d1ZYcHNVRmRLVTB4UVJXRjNSVW81VlhCWk5HcHRVWEpM
      UmxsM2RtRm5WUXBhUVVoTFJ6QkhjRVo1Y0M5TE0zVkxPWHAwTDA1elNrdEdTVEp5WTFoVVNrUTVV
      R3R2VkhabmNUTnNZbFpJVkZwdVZXcGFUMGxpVTNsR2NFTnRabGd3Q2sxYU1VZzRiVTF4UzNoS2FF
      dDFRa2Q0YVhSMlNsRnZkRVJtYzFJNFZFWjJTakZqWjAwMlJVUXpaVzVhVDNSR1NqazJkR2d4YzNO
      VmVsVlRaMk5HTkRZS2EzVmFXVFZ1Y1RkTFFsVXhVVmN4TVhOUlNsbGpZekZzWVhCVmQyd3pZV2hR
      WWxKb1p6QXpRVkJDZG5GeGFXRmpWVTlIYjFacWNteEdUVXhLWkdsVVVncGFVVEZVVmsxVGVHOUVi
      VVoxVjJ4T1JEWlRkM3BDVG1NNFJVWnlWMlYxWW5vM2ExaGlka05ZYmxCR04ySndUVEJETnl0NldE
      ZDVNWGd2YjBGU2N5dDJDbFp3TVdWa09VRm5XRE4yUlc0eWVIUnRaMWhEYW1JMmVqTlRkbUpOY0M5
      VFdXRk9jVEEyUjNSbWVXRm1aV1F3Y0d0ek9XRXdlRkJQVjB4RE5GaFpOVUVLV0VVelJWVXpVMkZx
      YkhoTldtbExaVU12THpGdGRISXhVbVJzZVZFelFXNWtlbWhxTVZCblJXZFBhbkpWU1ZOeU1qTmFT
      a0pxVFdGRGVHbHpRM0Z0YVFwTGNqbHBTVEJGYlhFd1NFaENTMEZNWkZSRldWWTNNREJyYzI5RVRU
      VkVVek5xTHpGaVVrNTFhVTlxUldKemJuWnZhVlZhTDBFMGVtaG9VbU5LTmtGa0NsQXlkekJFZW10
      R1JEbHNVMmhJTmtZd1lVOURVR051VjFkclRFd3pNak14UkdjeWVteDNVRXh2TWpWTVdUbHllVlpC
      WXpkU1lqaG5ia0pFYVhGR09WQUtNemw2TjBKcFZreHRkbk55YVcxd1NYbEJNM0o0VVhneFZtRkZa
      bkJIT1RSQmNXc3liVE5KUzNnM1dFeFlaRWxPWlROaWRtbERPUzk2VW1jMGQyTnZVQXB5Uml0TWEy
      d3dORkZzYVU0eloyeFZhVzlJTlFvOWJuSjJTQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure kernel module 'hfs' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/hfs.conf
        regexp: install\s+hfs
        line: install hfs /bin/false
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure kernel module 'hfs' is blacklisted
      lineinfile:
        create: true
        dest: /etc/modprobe.d/hfs.conf
        regexp: ^blacklist hfs$
        line: blacklist hfs
      when: '"kernel" in ansible_facts.packages'


# Disable Mounting of hfsplus
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_kernel_module_hfsplus_disabled,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_almalinux,multi_platform_rhv,multi_platform_ubuntu,multi_platform_sle,multi_platform_slmicro
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Mounting of hfsplus
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86765-5
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - kernel_module_hfsplus_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZzJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      SmlkMUF2VW5Od1ExSXhlVlJXTVROeVpVUkhZbEpuVDI1d1RXWUtlV3BuWnpNclNqVldZVnB6YlRs
      eksyMVFSakJGYzNKWFVEQTBNeXRVTTNoeWVEY3ZWRU55TTNaWWVHeFpOM1JNYkRsU1VGZENhR2xW
      TW5FelZIbG9hQXBHZWxoWldUVldkRTlyUlRKRmNsUXdaVXAxVjFGTmNrRXpjV040UzFrMGNXb3dS
      R3RtYm1WVFFtNDVjMWtyYlZSeE1YQnRTbkZaYTBoT2RDOUlTWFpJQ2paUVJISkhXVEJaWXpVeWJH
      aE9Well4S3psMVRqRkVNR1J0VUN0RU1DdFZPU3RoZHpCSE1FVlRXSE5uUlVGRVFYSnFNVmRsYjNr
      emFXVlhRM1ZwTTFvS1pVdHJVV3hNUm5ORWIxbHdkQ3R2VDJaSVoyUXdSblpHUWxJNWIxZGlXSGh3
      VFRSSloySlZZWGhDVGxWSVQxcHRkemQxUTBkaFIwVllLMVF3YUZkalFncGlhR2M1Y21WdVRUazFh
      a2M1V0N0VldWRTFOMmRJVWpKa2EzUnlWR1pNTHpjcmNUSjRSR3MxTDA5U2VXWmxZbEl5VTB0NGVF
      MHlkRVp4VG5WaGEyZFZDa2MxWWpaNU1FRm1UbHAyVHk4dlZrVm9ibkZFYVRGMVRrZGFOMmR3SzFn
      elMwVjFZbVEwSzNocFZHZG5hREl3Y21wM2VuWTNRVU55TmpCTWVFMXBSVllLY205eFpVNDVTV2N6
      VVc5blVIWkZaWEUxY0U1V2QzVndXVGhQYTNsemRYZGhTR3RPUlRsV2VEWkhOMkZ0VTJzNFIyWnFV
      MHBOYkVZclEzUklSMFZVTXdwaWVtaGhjakpqVUZSVmFtcFRPVXR5U1daeVpYQllSbEY2TVVSUVdp
      ODNiMFJPWjB0SmNGSkNlbWxGYlRaU1VHSnJPRFZvUzJ4ME1YVm1SM1oxTlZkSUNqQTRjMjF0TUVj
      MFRYTTVkWFZOY25sck1GbDFhMHBMVlZodFlqZDVjR1IwTWl0VUsyOUNUVFZsVW1aRE4ybFZNRGR0
      V0U0eFJISTFlWFpuWkcxNmFqWUtiVU5WTDNGV05XbE9iVEJ2VEV3Mk9VaG1WamxsVm1wWVVVaG9a
      RlJKU1RNMVltdFJVSEZyVmpWV1dsTlpTRzVsVDFONFpGVk5hRGxVUTNrd01EbERiUXA0UzJveWRr
      azFLM0ZDWTFCTlNsbG1SRzFVYlFvOWVGbHJOQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure kernel module 'hfsplus' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/hfsplus.conf
        regexp: install\s+hfsplus
        line: install hfsplus /bin/false
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure kernel module 'hfsplus' is blacklisted
      lineinfile:
        create: true
        dest: /etc/modprobe.d/hfsplus.conf
        regexp: ^blacklist hfsplus$
        line: blacklist hfsplus
      when: '"kernel" in ansible_facts.packages'


# Disable Mounting of jffs2
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_kernel_module_jffs2_disabled,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_almalinux,multi_platform_rhv,multi_platform_ubuntu,multi_platform_sle,multi_platform_slmicro
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Mounting of jffs2
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86766-3
    - NIST-800-171-3.4.6
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - kernel_module_jffs2_disabled
    - low_complexity
    - low_severity
    - medium_disruption
    - reboot_required
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZzJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      cFZPRkF2TWtKa1JsVnZUVTQ1YW01Q04xZHpjMnBwYmpOa1ZrNEtNV2RVWm5kVVpqSjBWV0paT1Vr
      NFRFbFFkVXRhTVZGTE9FcGFhMHRFWTNSWU1qbFdaVlJYUms5bmVIZG5TbTR2VDFaeldtNVFTRFJ1
      YldaU1VVRjJNQXBYZHpSemJISldSRmRpZEN0eVltNXliMDlGWW5ocWJYRmFhSGhaWTFGd05sTlZR
      VEpZTTFSb1ZVTk1TeTl4YTFoaFYwbFRkazFPWVVobll6RmxRVUk1Q2xKMGNtRnZWRlpNUTB4VWMz
      VnFWbFpRUlZCNFZrcGljMmh1ZUZjMldIaHNiRmhNVTNWeFIxbG1ZelZGYTNwTmJXeDBjbVZEUmpG
      c1NuZElZVXh2V0VzS2RESm9lRUZPYzBsM1NHMTZaalZPTmxGWllTdFNRMWR0U210b2NDdDNRMmxN
      YUdGdVNWZEtUbVpWWkZkT1NIWjBlVFZOWkUxb1RTdEdjMDgzZVVReFZncFRiMlFyVjNWVldVcEtU
      M012ZUZOc2RFUkxWa2hLV1ZaT1FXMU1iRGgwVGpkeVRXMTZXa3h2VUhWYVJGTTFSVEZpUm5WS1JH
      aHpNVGg2TjFVNVpFeDFDbkpvUW14blNFRTVXWGh6TlZOWU1pdE5XalZvYWt4TVRUQjZSbXBsSzBa
      eE0yODFRbmx5UVhGWlRuRnBRVGMxTlVNM1JHSkRWMkozV1UwclduUk1NRE1LY1ZOWE1HNVZSMk5z
      TW5aaldXeEdNV3BoYWtKMlpVdFljR3RhVFhGRE0weHJVbGhsSzFRM1MwVm1jMFpVT0RsR1pIQldN
      bUphUnpWemRYcElNbXRpYkFwNGVpOW5hWGN6Y2pGQkwwVkJOMVpPUW1OaVJWTk9NazFqWkZJNWRq
      VlRiSFZWWTFZM1ZrcE5hbFowVFVveFdtZDVkRmt6WTFSWVdsSkhUMGRoTTNSNENrbEdTekl2T1dj
      ME5WUnFUa3BMUTFoVlJFRk1XSEZHYzFSSmNVeDZSbUZUV1RaYVpFRlpLMFJTY2t0NGNFMTRRWGhK
      TVdvcldFdGpjR2hzUVZOdlIwSUtNVmx4U0dNM04zTkRVek5vU0dWTmJWTldNbGQ0VlhwVFFuVXdN
      eXRUUmtWNk1tUnJTbXRpWkdsNFVWaGtTRE5HTDNFMk5tODNWWHBhVmtsR1lsVXlLd292YUZOVlIz
      VlFPSE5SWWtkSU4wSkZiVU12WkFvOVRVSTRkZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure kernel module 'jffs2' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/jffs2.conf
        regexp: install\s+jffs2
        line: install jffs2 /bin/false
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure kernel module 'jffs2' is blacklisted
      lineinfile:
        create: true
        dest: /etc/modprobe.d/jffs2.conf
        regexp: ^blacklist jffs2$
        line: blacklist jffs2
      when: '"kernel" in ansible_facts.packages'


# Disable Modprobe Loading of USB Storage Driver
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_kernel_module_usb-storage_disabled,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_almalinux,multi_platform_rhv,multi_platform_ubuntu,multi_platform_sle,multi_platform_slmicro
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Modprobe Loading of USB Storage Driver
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83851-6
    - DISA-STIG-RHEL-09-291010
    - NIST-800-171-3.1.21
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-MP-7
    - PCI-DSSv4-3.4
    - PCI-DSSv4-3.4.2
    - disable_strategy
    - kernel_module_usb-storage_disabled
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZzJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      ZEZUVkF2YW1NNVFVRnBaVkl2WW1SbVYwSTBNMlJ3VW5WVE5EWUtRa3BtTnpNMlVrZFFNRk4yUkRZ
      eGJEWlNZWGR2Ym5WNWFsZHBhRmh0YWpadldXaGxlV1EwUVZocVZtbzVSalphU2xoaVRWRktMMmcy
      TmtveGN6a3lNd28yWWxCYU9YVnhkV1J5V1RsM1YwOW1iR0V6V0VSdlRrVmlUWGxoVFhSelFXMVNj
      RXRNY0ZOV2QyTTNUVWRZZGpSSGVIQm1OemR2VlRoa1JqQjRSREZ5Q2tVdmFXNTZlbEZ1ZVRkR2NX
      VXlabE0xVGpkR01rVlpTVmxHSzBnMmNFSTJibGRqWkN0d1NXRTJlakZuZEZSNGFHTjNWRGg1ZWpC
      eVJHMHdUMlpSYlVNS2RqaHBiVEU1TXpWQlpUUlJWMFpUTkZoU2JFSjJkblZxUmxKRlQwWk1SV3hs
      VTBKTWVpdHpZWGh1VW5kcU4waDVUVFoxZGxSVVlqZHFORXRtYm13MlpBcHVRVGt2U3pCUVZYSkZi
      QzlhUVUxdGJVaHNlWFJMVDJKU2JEWnRhRFJvVVRRMFNIRmtOeTlTUmk5R1prZDBXVlpaWWpCNWR6
      TlhNVlF3V25OcGFYcEhDbXRUTHpJMGExaDFPVVpSWm13MFpVZEhaMUV6UVZwaU9WYzVaR2x5VjA4
      MWRtZGpVemx6TkRORmNFVTVja2MxVUZkTmExSk1UbEZoY3pGcGVYaENhalFLV2xSRk4xaHZZWHB4
      YkdkUVNVSmpXR3RsZUdsUWFEVTNjM2tyWmpKNWVrcG1hREJRTm1ZMFJUaDJiMHMyWkhGdFdXbENa
      V0pHWkRJMkwzcGFlbmhqUlFwRk1rWndaSFEwYVhodUszaDVja05PVVZWdmFXVjFSRkJwZGs0NWFr
      aGlhMmhaWVROb0syc3ZVV3N2TTNFMmNrMUZNRzh4ZVZSR1RIVkpUVlkyWkdKSENtRlJTMDlQYjJW
      SVRVOW5WekZxYjAxRk4zTlJXR1p2VURGdlYzb3ZVVmMyUjFnMVNGUk5kVGRqTUdkdWVXNTJZMUpr
      T0ZkbWIxWjFTRFV4ZFd0UFRtWUtiSFJrVHpsNVlsazRaRTFZWkhwVmNrSnpMMkY2UlV4ak5tTkhZ
      bk56ZEdaaE9WWkROa3MzU3poMmFIbDVhRlpXTHpad1QwczVOemhvVm1GbE5VRXljd3BVWjI1NGJI
      UkJjekJvU2xOSFFsQlBWVGRWTHdvOWFXUmhhQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure kernel module 'usb-storage' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/usb-storage.conf
        regexp: install\s+usb-storage
        line: install usb-storage /bin/false
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure kernel module 'usb-storage' is blacklisted
      lineinfile:
        create: true
        dest: /etc/modprobe.d/usb-storage.conf
        regexp: ^blacklist usb-storage$
        line: blacklist usb-storage
      when: '"kernel" in ansible_facts.packages'


# Add nodev Option to /dev/shm
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nodev,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = high
- name: Add nodev Option to /dev/shm
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83881-3
    - DISA-STIG-RHEL-09-231110
    - NIST-800-53-AC-6
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-MP-7
    - configure_strategy
    - high_disruption
    - low_complexity
    - medium_severity
    - mount_option_dev_shm_nodev
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZzJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      WmxPRkF2VWxKR1UxVXZOREYxWjJKbGMyNHJlRlZpVFVvM1VuSUtTbGt5WmsweFlUUlFhM1YyWWpa
      dFlURnlXRkZVTldRMFMyeG1WV0kyZVc1clVsTldVMHhpUmt4YVZraDFXR0ZVZDFOak5VVkxjRzla
      YkRreFFsZEVNd29ySzBkak1FRkZWMUZDTldNME9UbG5SekZrVFhaQmNsRmlORVo0V0c5QlJ6RmxW
      QzlqTDJwb05rcE5OWFF6Wm1OcVZXWTBaWE13TW5FMWRUUkVTVXRvQ25BelQweFFjRzVtZGtsalYw
      bHBXVVU0U1dWbE1IaDBXR3QwZW5aeVRFdENZMGhaWVRWbFJWSlVXamxOVVdGT1JXdFNXVzFYVTFC
      QmMyTldUaTlZVWpFS0wzRmhVRWhrZWxRMWR6QlRaQ3RtVEdkcWRIVlBXRk5pYWxKUVdsWmFaRXBP
      VG1STmIxaG5abWxFUkdGT1QwNTZUMDVWZEVWMk1FdHBORFI2VmxoU2F3cHFVMmhQZDNoVmMyNTFT
      ek4yUzFKM1lsWjZlQzlJYVV4TlVHaFJVbUp1V2pWcE1VaGpjbmM0Tm1KaVpVaFlNVXRuYlRFeVpq
      aFFaWFo0U0VSNU5YRk1Dbmd3VnpSck1HNW9kVVZqZDFkV1JIZHZORTgwVnpJeVNGQm1UVFJpYlZk
      RFEzVnRSVmgwUzFWWFVubDROa1EwVGxKM05sWmthbk5ZY0dKaVRTczFNRE1LWkZkVFdFWkVObEJE
      Ykd4TFYyNVROMVJMVmtONmF5OTRaMHRGV0c1d1VIVnZLMkp0UVZjck5qbFdURmhRWlN0NE5sZFVM
      MmswYTBWMk1HbEpVM2huUkFwSlVHYzNURWRYSzNGcVRXbEdORE55WldwV2VEWjJXVFJTV2t4dE5G
      cFpibWR3V0hoT1lWcHRMMGRaYlhjclExTXhTR0ZWVjAxUWFIRTRZMWt4UTFwcENrdzBjM2RXTVcx
      cWEyNUlRMFpLVG5nclppOUxjV0p2WVdSTVYyZzVTM295YVhGUVduTnNkVWxFYURSNE9FbG5TbTB5
      YTIxWU9VcE5NVU0wVWxreGFISUtUV2szVjJGVmFsRk1ORkpVTW5wd1IxUnRSRlp4ZGpoUFdtOWhO
      R3R5TDI0MGFYbFVWMDFMYm04MFpUTlVOak5aYjJ0M2JtbHhNekkzVERSaWExWklRUXAyZDJ4aGJV
      Z3JWbEl6UzFsb2JtaFdTbEJOWmdvOWJuaHZOZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: 'Add nodev Option to /dev/shm: Check information associated to mountpoint'
      command: findmnt  '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not
        ( ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )

    - name: 'Add nodev Option to /dev/shm: Create mount_info dictionary variable'
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not (
          ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)

    - name: 'Add nodev Option to /dev/shm: If /dev/shm not mounted, craft mount_info manually'
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        -   - target
            - source
            - fstype
            - options
        -   - /dev/shm
            - tmpfs
            - tmpfs
            - defaults
      when:
        - ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not (
          ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )
        - ("" | length == 0)
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length == 0)

    - name: 'Add nodev Option to /dev/shm: Make sure nodev option is part of the to /dev/shm options'
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nodev'' }) }}'
      when:
        - ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not (
          ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )
        - mount_info is defined and "nodev" not in mount_info.options

    - name: 'Add nodev Option to /dev/shm: Ensure /dev/shm is mounted with nodev option'
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not (
          ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )
        - mount_info is defined
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("" | length == 0)


# Add noexec Option to /dev/shm
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_mount_option_dev_shm_noexec,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = high
- name: Add noexec Option to /dev/shm
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83857-3
    - DISA-STIG-RHEL-09-231115
    - NIST-800-53-AC-6
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-MP-7
    - configure_strategy
    - high_disruption
    - low_complexity
    - medium_severity
    - mount_option_dev_shm_noexec
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZzNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      bHJNRkZCU25Ga1Z5dFRaRUUwTDBKbU9YaFhkbnBxWVZaVmFWb0tZME15THpGVE5rdFVSUzloUjNK
      T056RnRkRk13T1ZoVFpqVnhNMGR1YW14MGVqUnFVV3BaTkVWWFNWbHpVMWx3Vm13d1p6QjJjWFZh
      T1hkQ1ZFbE5VUW95YkdSTVpGRkVNVWRsUzJWcFN5dDRSekZJYjBKWmRVOU9OSHB0YUhodlptNXNN
      M0pCWWtwYVRGUndlRVZLVDNWT09GcEZjVXRUUWsxMFZXNUdjVXA0Q2k4eWIwMTBkQzlZYTFWS2RF
      aHplWEl6VUdoc1NXMVFjRmhxZFdOWmVFZGtjVUYwYW5GaVJVNWpaRXBHVlZVelNFUmpZbGxyTlV0
      SVdDdHdORTQwYjBzS2VUZFJiMlp5VkVGelVsTnNOUzlNTnpSRlprMVJabXBhTlU1blEyNHpaRE5N
      VEU5dE5uVkthMEZsTjA5U2MzRkxORmRvVkVVNFNXWjNkSFZIYTJ4U1F3cE5kWEkxVUc1V1NsQlBk
      RWxTZUhKRVozbFJTR0k0VTIwcmJIWlNOVU00UzFWS2RuSmtWMGxuYWxrM2RYUlRhVGg0Y1RScGEw
      WkpUbEZTU1hkb1lraG5Da1pYUkdsbFZFeERURVJaT0N0WEx6SlpRMDl5VlVoNE9EVnRXQzlUYlVW
      WGVqRlJaVU56TUU5QmJrcHdMekpvUlhWUVRHZG9TVTFVVW1KVmRFa3pkRklLVkdRM1lVZExRV1V6
      VFZSNlFUZFVRelJTY25RclJGUlRMMHBRVldwWWRURjFNVTVSYjJwWmFsRXhkREp2TVZrMFFqbHBT
      M0pRVFZKcFFWSmtaWFZHU0Fvek1rVkZSVVJpUjNsUVZWUlVNbTlQUlVjNVVIZDVVMVUxY25Wa05E
      UldiMDVOUm14RmNYQkZlUzlYUVVkWlpFNVpTRnBCVjB0NFZsZE9aME50YzNWSkNpdFFVbVF3TldK
      cFJXVjNUelpwU0U5cVJUTnViSFY1YTJKR2NHUkJSSGRpTXl0eWNFaDBkVlJwY0dVM05tdFJSR0Uz
      ZDB4WWRUZFlieXRPVldWSlVERUtSWEIyZFVobFpscFZVbXg0TVRGM2N6aE9hVTlYWkZwTmRuSnRk
      VnBLY1hZelZpdEhRamhPYUhWNFRVOTVVVFJUUTFoM09TdDJWVXczYjNFeFlrZHRRd3BsWmxSS1Rt
      dGFZVEpsTW1oTVJsaHFVRTk2YndvOVNYUk5jd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: 'Add noexec Option to /dev/shm: Check information associated to mountpoint'
      command: findmnt  '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not
        ( ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )

    - name: 'Add noexec Option to /dev/shm: Create mount_info dictionary variable'
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not (
          ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)

    - name: 'Add noexec Option to /dev/shm: If /dev/shm not mounted, craft mount_info manually'
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        -   - target
            - source
            - fstype
            - options
        -   - /dev/shm
            - tmpfs
            - tmpfs
            - defaults
      when:
        - ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not (
          ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )
        - ("" | length == 0)
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length == 0)

    - name: 'Add noexec Option to /dev/shm: Make sure noexec option is part of the to /dev/shm options'
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',noexec'' }) }}'
      when:
        - ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not (
          ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )
        - mount_info is defined and "noexec" not in mount_info.options

    - name: 'Add noexec Option to /dev/shm: Ensure /dev/shm is mounted with noexec option'
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not (
          ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )
        - mount_info is defined
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("" | length == 0)


# Add nosuid Option to /dev/shm
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_mount_option_dev_shm_nosuid,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = configure
# complexity = low
# disruption = high
- name: Add nosuid Option to /dev/shm
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83891-2
    - DISA-STIG-RHEL-09-231120
    - NIST-800-53-AC-6
    - NIST-800-53-AC-6(1)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-MP-7
    - configure_strategy
    - high_disruption
    - low_complexity
    - medium_severity
    - mount_option_dev_shm_nosuid
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZzNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      dGtTVkF2YWpCTGMyMXhiVzgyUVd4dFlTc3pMMHRaWlRJdk1GTUtaM0pSUjFCNFV5dEhWQzlQVkhw
      VlpHWmtRamxuWVZSb1RYVXlkbWhGZEZONVVVMTZiSFJXTWtrNGEzSnRjbGxoVkhKQk1VOTBPVFJR
      VEZkek5HTlBNUXAyY1cwM1JtUkZTbTlsVTFOaFQweEhlRzloYzJGU2ExTlBla1J3V2pCbGRGa3ph
      MUZQVTFGRVdta3pXRUZMYkhkNFJUaHVPVzVGUlc1WVoyUk5iMjVZQ2k5NWVFcGhZVEpSTUdWWmRF
      VmtUMUE1U0hSbldqRjFlRXBxV0VkTWEzZ3dhbEV4ZDBWcWJ6RTFSVGgyZW1kd2NYWmtMeXR2WjBa
      b1MwSlNXVUpqVldjS2ExQXlia1F4VkN0YVVUZEJSR0ZPY1VFeFZtUkpTMDVsTW5GclNGVmpSWFl4
      U0dVdk9GRjJVMHBtU2paU1NWZDJOVU5CUjFkdldGUlBOVU0yV2tKSWJnb3lUbWh2Y3pKblJVNW9N
      SGxsT1ZSa04xaGlUUzg0UlhBd1lrSkRNWG8wWVd0cldYbEZjekJ0ZUVOUGJYUk1TWGt3VGtzck1V
      eGpkR0ZKUkV4VGVrdDVDbUozVjJsMk5FZzBkVVJIYkZVNFlrdFFSM1pMYldsTWJ6VmlkblJVYnpW
      WU4yNVlaQzlSVDI5b1lscG5ObUpJYlVKUVp6WmpibWh4YVVkcGFGTklWVU1LY25sRVVFWjViRWh5
      YXpsTVJWVkhiRFZvZVdWMFZWWjRRMUUyWkc1WU0ycHFLMGxOWm5OQ1VtWkJZV293V1hGMk1tOVBi
      RE13U1RGb01ESnBPSEVyUWdwYVRYSjBORzVCYTNOTlJuWlJNMDU0VTJwR1ltb3lZMDlpVWprd2Ew
      WlFOUzlIT0Uxb2JrNVhUVmN5UVRCV2JrSkdUa0ZXTWpsV01YcG9Ta2xqVlVNdkNsSTVUMEV2WlVw
      UmJYaEliWGh5VldKR1VUWlhiR3ROUVRkWFJYTlpMMmxsVmxST1luUnRaM1E0ZEZGdFQzbFBhbGhP
      VkhkdFdWaFJTek5PWnpaRWMwRUtjRUo2VW1ob1p6bE1kMVZvTDFnMVJsZFJUa1ZaTlVsd00zSndk
      Rk5XYjJGU1R6QnNWVE4xY0ZKcWFVZFZWR3RVU1U4MWFHWkNkbmxTUTNoM2VqRlhTd3BsVTFkalVr
      RnZVMll6YmpaaFZGaFpTVzgxVEFvOVpXSnlkQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: 'Add nosuid Option to /dev/shm: Check information associated to mountpoint'
      command: findmnt  '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not
        ( ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )

    - name: 'Add nosuid Option to /dev/shm: Create mount_info dictionary variable'
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not (
          ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)

    - name: 'Add nosuid Option to /dev/shm: If /dev/shm not mounted, craft mount_info manually'
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        -   - target
            - source
            - fstype
            - options
        -   - /dev/shm
            - tmpfs
            - tmpfs
            - defaults
      when:
        - ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not (
          ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )
        - ("" | length == 0)
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length == 0)

    - name: 'Add nosuid Option to /dev/shm: Make sure nosuid option is part of the to /dev/shm options'
      set_fact:
        mount_info: '{{ mount_info | combine( {''options'':''''~mount_info.options~'',nosuid'' }) }}'
      when:
        - ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not (
          ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )
        - mount_info is defined and "nosuid" not in mount_info.options

    - name: 'Add nosuid Option to /dev/shm: Ensure /dev/shm is mounted with nosuid option'
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }}'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - ( not ( "kernel" in ansible_facts.packages and "rpm-ostree" in ansible_facts.packages and "bootc" in ansible_facts.packages and not "openshift-kubelet" in ansible_facts.packages ) and not (
          ansible_virtualization_type in ["docker", "lxc", "openvz", "podman", "container"] ) )
        - mount_info is defined
        - (device_name.stdout is defined and (device_name.stdout | length > 0)) or ("" | length == 0)


# Prevent Login to Accounts With Empty Password
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_no_empty_passwords,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_fedora,multi_platform_ol,multi_platform_rhv,multi_platform_ubuntu
# reboot = false
# strategy = configure
# complexity = low
# disruption = medium
- name: Prevent Login to Accounts With Empty Password
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83611-4
    - CJIS-5.5.2
    - DISA-STIG-RHEL-09-611025
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - NIST-800-53-CM-6(a)
    - NIST-800-53-IA-5(1)(a)
    - NIST-800-53-IA-5(c)
    - PCI-DSS-Req-8.2.3
    - PCI-DSSv4-8.3
    - PCI-DSSv4-8.3.1
    - configure_strategy
    - high_severity
    - low_complexity
    - medium_disruption
    - no_empty_passwords
    - no_reboot_needed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XZ3ZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      TlZSVkF2TURCbFJXcEtlRmhSU0dvMEx6YzNaVkZwSzA1SlduY0tjMVlyTTNveWVsRmFiemhsY3lz
      NGF6UktRV3BVZFUxTUx6bExhbGd3WlhKSVRHWndNMWx0VW0xalNVZFFWa3gzU1U1dVEyeHdaRUZL
      VXpaUlJHeEZkd3BOVkZWM1ZHMUJURkU1VDNkRUswTmlSakUzTTNSTVF6ZDVUamRIWnpsRVZtbFhl
      RGRZY0ZaNFEySnhhelZSV0Vsd09EWlBaWGtyTUZZeE4zcEVXazlOQ25SU1oyUnRaMWhMWW1wUmVq
      TmtXRXRDWWpad1JIRlRkREJpVm1aWGVWVlJkRGhvVnpkNlFtWnpNamxQTnpWRlRqbEthRk5SVlRS
      a1YzTndXRGRCTmk4S2FWUm9WRlZUZWxoVk0xSnNjemN2VFU5eFluQnJVMWhDWVhCb2MyNUtXbFJY
      UmpWcFNsTndORzVWUVZJNGJEaEpWRWtyVXpCaFMweGFTWGxYT0M5blJncHJaeXMwZVVnMVQycGxa
      amR2TW1jeUsyWm9VbTF4UldGcGJqaGlSMHRVWjFSbmRraFFaWGx4TDNaQk4zVk5OMlV5TVZWUlpF
      RkZMMnhpZFhSVFMzWndDa0pqYkdSQ05ERnNMMHQzYnpnMk5ubFVNSEY2VkRsM016WmhOVWRDVmpk
      WFFUTkNlRVpQTHpKcE9WZHBSamxGVlRGeGNFMHJSVFkwU3pSRFIyeE1OMDhLVDNCVWRqSkxlSG8y
      VTJWYWVrd3lNSGRKYVhaaVlsUkphemhoV0RZNWVWWmpjWFZrWVZOYVRFVXpUbTlyWVVaMWRHVTNT
      VFZHZUVwUFJTOUNjSEZGT1FvM1NHUjFXWEJEYmtkbGMxTXpWMEpJUkVsUWNtTjFUVWxxZEV4NWNF
      NXRVRFJ2TTFNd2RrNWpVSE0zVEVwSE9XOW5iekY1WTBGSE9WWnllR1Y2YmxkekNubG9VRU12T1ZS
      Rk0wZEZZbEZYVkhKamFXWm5RM1o1ZUVacWExVkpXakpQZEZaeFJqaFJTSFZHZUVaeVpHeFdRVkZY
      U25OQ2IyOVlkVXc0VVRsUWN6VUtjRE4zUlVOTFEzWlhObmhUTldOc00yaDVZVXB0UkZnMVdrdzFj
      blJIZVhsU1lVaHZSRUYwYlRSMU1FVk5jbVIwZFZkVU4weG9URXhKWTFoeU5DdFJiQXBRVGtsQ1Iw
      Sk5lRm93VEZkNGVYUTNVWE0wS3dvOVJrUk5aUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Prevent Login to Accounts With Empty Password - Check if system relies on authselect
      ansible.builtin.stat:
        path: /usr/bin/authselect
      register: result_authselect_present
      when: '"kernel" in ansible_facts.packages'

    - name: Prevent Login to Accounts With Empty Password - Remediate using authselect
      block:

        - name: Prevent Login to Accounts With Empty Password - Check integrity of authselect current profile
          ansible.builtin.command:
            cmd: authselect check
          register: result_authselect_check_cmd
          changed_when: false
          failed_when: false

        - name: Prevent Login to Accounts With Empty Password - Informative message based on the authselect integrity check result
          ansible.builtin.assert:
            that:
              - result_authselect_check_cmd.rc == 0
            fail_msg:
              - authselect integrity check failed. Remediation aborted!
              - This remediation could not be applied because an authselect profile was not selected or the selected profile is not intact.
              - It is not recommended to manually edit the PAM files when authselect tool is available.
              - In cases where the default authselect profile does not cover a specific demand, a custom authselect profile is recommended.
            success_msg:
              - authselect integrity check passed

        - name: Prevent Login to Accounts With Empty Password - Get authselect current features
          ansible.builtin.shell:
            cmd: authselect current | tail -n+3 | awk '{ print $2 }'
          register: result_authselect_features
          changed_when: false
          when:
            - result_authselect_check_cmd is success

        - name: Prevent Login to Accounts With Empty Password - Ensure "without-nullok" feature is enabled using authselect tool
          ansible.builtin.command:
            cmd: authselect enable-feature without-nullok
          register: result_authselect_enable_feature_cmd
          when:
            - result_authselect_check_cmd is success
            - result_authselect_features.stdout is not search("without-nullok")

        - name: Prevent Login to Accounts With Empty Password - Ensure authselect changes are applied
          ansible.builtin.command:
            cmd: authselect apply-changes -b
          when:
            - result_authselect_enable_feature_cmd is not skipped
            - result_authselect_enable_feature_cmd is success
      when:
        - '"kernel" in ansible_facts.packages'
        - result_authselect_present.stat.exists

    - name: Prevent Login to Accounts With Empty Password - Remediate directly editing PAM files
      ansible.builtin.replace:
        dest: '{{ item }}'
        regexp: nullok
      loop:
        - /etc/pam.d/system-auth
        - /etc/pam.d/password-auth
      when:
        - '"kernel" in ansible_facts.packages'
        - not result_authselect_present.stat.exists


# Install AIDE
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_package_aide_installed,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = enable
# complexity = low
# disruption = low
- name: Install AIDE
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-90843-4
    - CJIS-5.10.1.3
    - DISA-STIG-RHEL-09-651010
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-11.5
    - PCI-DSSv4-11.5.2
    - enable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - package_aide_installed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbEJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      WkVZMUF2TVdwM1pFUnhWMHhPTmtocE5rRTBXR2d4YTNCamVuVUtXa0ZxVkRoeVQxQlBRVWxxUVZK
      UVpUbHdTbll2Tm1sYVJHTlJTMXBDTlZOUWExVnZkakZCVlc4eFUybGhaV0p0ZEZOa2QwZGxVRnBM
      Y2pKTmJXZE5OZ28yVFU1R1VUUTJUVWtyYUhaU2JuazVWMWMxV2xSUk1raERWRkJUT0d0ak1EVmFV
      MlJrYW5WdVdVWk9OM3B5TWxKd2VtaHFlV2RHV0ZWSFpYTnFSVFUzQ205WWJrRktWV3BrYVdGa0wy
      bFFOM0JqWlRaQ1NqUTJRMDFZUjFkS1R6Vm9SWFJHU2xOTVMzZGxhVWhxTWpSR2JVdGpSMU5ZWlV0
      NlNIaEVSVmx3YUZFS0syazRVa05TUmpkamVYbHRiSHAxUVROUGVGSkZPVWRGWVZCMlJYQjBaWEJD
      VkdrNVpIWlNjVWhtVTNGTFJYbGtkRTFzYzJ4RGRrNDJTa0ZoUW1oR2RBcEpNVGhTYm1KMVMwUTFj
      SEkxZWtsMFVsWnFhSEJDTjBkUVdUUlBiM2xDY3pGVFZHdzJOMjFtTmpSd1dGcDVUVGR4YlhwRmJu
      cHJkeXR6UzJrd1NVVnZDbkZZVjBsQ2JVcEhNbEIyUjJNM2MxbE5LMjAyWWpSM1Iwc3pRa05ZVmxG
      Rk5uWndhelZFTWtOYU5rRkVNMUJxVmtVMk9WaFZORkYwYUZCamEwOVVXR29LVTNvd1IwMWphRzkw
      Y0RWMmJtTXpSa3A0ZVVwS2VEazNZWEpSTkdoeGVrTm5UM0psUTJOS0x6a3haWGRZU25GNWQyWnZS
      blpuY1RJMEwyUnFSVlZTZEFwM1NIVjJVRUUxTmxsTE5VYzJSakp2ZFdwSE5IUjJZMlJaSzBoalJY
      UldiaTltSzNSMmQzSm1kV1prUlVneVltbFFjMWxZZVZOUldtbHdLMWxMUzBoT0Ntb3hOMkV2SzJK
      Wk1HdHRkRXBGU21KR1dFeFdWRU51TVRKeGQxSmlVRk4zVkRZeVZubElNV2hFT0ZkVU5HRm9lVUZz
      VVRkYVlXOTBkRmhMVkVoNFVIY0tlSGhETjBseWQwTm1iekJ5UlhCeVFYWXpObFZpV0hKdFRIUnla
      amxwYVhsMWRGUjVlVmRvU1VKRU1FczJTbW94YzJ0blJVZFhZazFhTlVoMlFYRXhkQXB4U0hFeFZW
      SklPQzlOYURWU1JuVmFVM2xITUFvOVdYQXJVUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure aide is installed
      package:
        name: aide
        state: present
      when: '"kernel" in ansible_facts.packages'


# Install firewalld Package
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_package_firewalld_installed,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = enable
# complexity = low
# disruption = low
- name: Install firewalld Package
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-84021-5
    - DISA-STIG-RHEL-09-251010
    - NIST-800-53-CM-6(a)
    - PCI-DSSv4-1.2
    - PCI-DSSv4-1.2.1
    - enable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - package_firewalld_installed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbERRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      UnRTVkZCU1RSUFNFSnJSRGhOTmtjdmNIQlZXVGxKYldwcGVXSUtUV2RIVW5reFVVRnFkMGxyT1hr
      M2VVTTVhVlV2ZG5nNFJsUnNTMDFUYldVellXVlJiWGw2TjJVd1dYRkxVRFUxU1VseFozSkRRVFpq
      YldNNVNURk1Rd280TjFWa1JYZGpZM0ZKTDNvM0wzTTNWbVZPVEhOTlkwOVFXRmxrUTNjMFUzRlVV
      SHBEWVRGb2NUVTBkRGhvTW5CWlUxbFRaMjU2TTNWS1MzaEJaRkl4Q21SUVMzWnhOa3BXTmtzNWNX
      cHdZa3BWVVRJMksweHZkRk5FUW5kS1NVOXZXRmxZVkdkQ2VWUndNMFJQUVZwS05WUjVjbEZrYVdk
      SmFra3Zja3BWV1RjS0wwcEZWa2hyYlRsUFpWbGxVRlpsUkV0REwyVXdWV0kwU21scGNVOURlWFUz
      UzNCalJUZENaalJEUkdsdldHWlhkblI0V1ZrMEwzVTFXVEJyYVRKdU9RcDZWbVJRWkdsbkswWnZS
      RWRSZG5WalIwaHVLMGRKYkRaTWJVWnhiVTFPTHpaYU4ydzVZWHBDYmxCcVkxSjBabVJZVm05QmF6
      RlhNelZhV20wdk5qVXJDamN4YW5CQllWQmtTaTlvVTJ4NWFtcExZMmhSVG5SbVdHcGxWMEY2T1Ro
      MmJrOTZSVzV1UzJwWWQyRnJZVVp1WWxrNWQxbHlZbmhwYlhKaFExQXdaWEVLVUhCclZXMHdiMk4y
      TTNselRFeFFVRXh5TmpGdGQyZEVOalZqVmswMmJVNURNMGhwVG1waFpXWkpaR3BIVFZWWmJFMHpS
      bU50VUVoS0wyeHhUM1l6T0FwTlJXZHBaMGN6ZW14Uk56UnFRMDV1TjA5bmN6Z3hMMUpqU0ZaQ2Mw
      TkRTVGxDUlhkT05qZExjMlEwYTBoNVVYUTBjWFJCWmpkMFRFY3phMGhhTWpad0NreG1LMVpvYW1w
      VFEwOU1UVGxNVDNFNGNqVkVlRGNyYTNCMlUzcENUVTVWY25aR1pEWllZbFphWTFWWWVtaGhjR0ox
      TlROdlREbGtObXhFZUdsU1UxY0tTRFJpWjAxUk1rMDVTRWh2VGxwMFZ6aHdZbHBvVEd0TlFWZzJX
      VFJLZG1GeFoxRmhhVzlVV1dwSE0zZDBZWGRwTjBSdVNYb3ZRbGN3TVV4eWJ6SmlVZ3BKZDJGTk1V
      MVlRamhCYlhkRmVIWnFhMlV4UndvOU5tRTRUd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure firewalld is installed
      package:
        name: firewalld
        state: present
      when: '"kernel" in ansible_facts.packages'


# Install nftables Package
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_package_nftables_installed,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = enable
# complexity = low
# disruption = low
- name: Install nftables Package
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86378-7
    - PCI-DSSv4-1.2
    - PCI-DSSv4-1.2.1
    - enable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - package_nftables_installed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbEVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      STNSVkF2YWpSNGIyZHhaSEJDU2xSaFJXOXpSakJuWjFkbGRWa0tUa2RTU1ZWUmFHSkRUekZzZWsx
      c1lqSjBZbTg0YjI1V04wUmtTa1J6TWtrNGFsZHdkSGwwT0ZJMlpWVkhRbUptUlVGbE5reGhWSFZ4
      ZVRKT1pWaHdTQW80TWpCUGJuQTJPVmh4ZFdndksyWk1UelpFZFROM1QzSnlaM0V4TjNCeVdVbDZj
      a2hsVERkd2NXeE1OVzh6SzBKTVV5OXdNRlUwTWpKUWNGZFdjVEV6Q2pWRVRqZFBjRmxMVm00dkww
      OW5VRmxvVmtaR2IyZHpVRkEyTVcxb00yUlZTbEJOWjFkRlMyWkxjMUpMZW1Nelp6RklkRWM0TVRO
      U1F6TkxlSGRLT1RFS2NqZExhMGhvT1hkdWQwOVNkVGRoU0hKSVl6VlJLMnBWVkV4cVZVaHpjREJK
      ZUhCTmFqSTRjVWR2VkdSSVdFOWlVRWRhUkRSSk1tSTVTMk5LVUdWbVRBcFRPRUZFVnpOMGJsSXZi
      elZ6VEUwdmVuZzFjMUZEVDIwelZVZ3ZSRVpJTWxoMWFsUjBhblJXVFRsMkx6bFBTMnRFZDBaeFMw
      bzNlWGxEUWtkeWFrVlpDbnBUTkZCSU1XdHZkbEJXYjBGRmVqVTJiRU5qU0RkcFkyTnFSRFZpYWsx
      dVRGbG9NM1Y0ZW5KbGFHUlliWFJaZFZGT09ERmhibGt6VnpsMk9FNTZTM2NLT1VKRVdXSktZMDB6
      YTA5UFRVdExSRXB4TTNKamVGSXdSazV1UXpWalpYQm1jV3MxTkRWVVUwc3hNMmx6ZDJoWFdGbDVN
      WGhQUzNjelprTnNVV0ZGZUFveWJ6QldkM04zY1ZndlNrcElaWFZzU2pkU2NuSm1OVmw1TUdNd2Iw
      NVVSRVZoYUhKcVdrMDFNVXRaZDBKWk1WWkZjbVI0VjJJMmRVbFdXWEpJUVhCNUNrSXJVR2xZTW1N
      cloybHZXRVJCVWtORllXeEZiVWxNWTJSRE4xTXpVM2R6WkhodWEycE9NMWMzY1hGM2NWUnNVWFJ0
      Um5ObFZDdHBVV2hJYmxGa2RrUUtXV2R1VG1jdmFVSmFaVGxFTDJsRFIxbG1XWEIxWjFsVWFrVkVO
      WEV2WVd0NEx6UkxVMU40ZW5aNUsyRTRTMU5yY25GbmJGWkRUMDE1YlVKNFlqaEdVQXBrZHl0c1dH
      MVVOMUJPVGtVMlVHMVlMM2RWZEFvOU9XaDRZd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure nftables is installed
      package:
        name: nftables
        state: present
      when: ( "kernel" in ansible_facts.packages )


# Install systemd-journal-remote Package
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_package_systemd-journal-remote_installed,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = enable
# complexity = low
# disruption = low
- name: Install systemd-journal-remote Package
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86760-6
    - enable_strategy
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - package_systemd-journal-remote_installed
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbEdRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      NWtkMUF2YWxoV2QxWkJhM0J0YjFaTFNrOXhaRXRxZWpKcFNtUUtSRWxFVWxjM0szaHBRV3B5ZGpB
      MmVuWm1UazlCUmpZeGFEaElaMGhaTVd0clRtNURhVWwyZVM5M1YxcHhha1pIUW1sc1kwOUZVbTVH
      Wm5WVGRTdFhid3BoZVdJNE4wMTFXa3hRVjNFMVNTOUJSMWczVkRKT1JXSkhTR0pvU25OdGMxQk9i
      blJ4YzNndlMxbFpSMDF6UTNKRlVsQjVRWGx6VEVZdk5IUjVOQzl5Q21zMUwzazJRakZGSzFsT2FY
      Qk5VbmxMUWpCNFJHaHRVVGhTVmsxUU5IVjJUWFYzVmt0V2FtaHZSWGxpY0RkUVpHOUtPR05GSzNS
      cE9YVk9UV2x5U0dRS1VrUTNZMjhyT1VsUlFrSm1hblUyZWs0eVVFSk9TamQyVWxKR01sRklWRFIz
      THpkRVVEbHVSMEoyU1RKTk56VkhSVXR3SzFFMWNVSnRhM1V5V0RsWlNBcG5ZMUYzZDFCWEwwUlNN
      VEprVmpGT1kxWlRhRE51VFhsSU4wVlhSVk5sZURsSE1HVndUWEZ6VERsS2FHd3lZa3RXZFVkdFYw
      VlpXWEJWVHpWdFNUWnRDbGR6VG5SNWNrOWlZblZrVjBkYVJIWjZUREJTY3pCQ1VrNW1WMDlqVFRS
      clIzVnFja0p6V1RSbWNtOXZRekZsV25nMlJIWnBaU3QyYVZGamVrUmlSM29LYkRaSEx6UnZPRmR1
      UWxoQlJERlRZM1ZXYmpOT1kwbzFWekJhZDFVMFFtNTVNRlFyZFhsWE5IVTNUMHBFUlZsV1pGaHBS
      bnB1VWxsTFpYQmxVbWh5VGdweVFWQlNZeTh6T1ZCbU4wTlJZekZ5V0dKS1Z6bE9TV3BPVEdsRGIx
      aHVPWEJ4T0dSV1pXOWlXREZDTW1SdVNsQXhVV2RRV0VSUmJWcG9hM3BqU1VWckNsQnhZbk15TVdo
      VFVXOXhaVE40VVRKQk1DdHRNekF2Y0NzNFFsTnhhRTUyYjNsd2RuVXJjelo2VEZKTVJVVnpORUpO
      TlhRNVVuWmlSM1Z6Wm5sM1VFTUtiRkowVDJ3cmJWbHNUREZpUVVSbVpuZDJhSFpPVEVOUFUyeFph
      VlI1ZFc1clJrRkVSekpvWlZKVFMwSktZV0owYldWbVQwUm1kRTlVUVhGU1pHRlNOQXBtT0VOeFZ6
      a3ZSekZOWTNrMFlsSnVOWGRqUndvOVJpdGtSUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure systemd-journal-remote is installed
      package:
        name: systemd-journal-remote
        state: present
      when: '"kernel" in ansible_facts.packages'


# Disable SSH Access via Empty Passwords
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_disable_empty_passwords,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Disable SSH Access via Empty Passwords
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-90799-8
    - CJIS-5.5.6
    - DISA-STIG-RHEL-09-255040
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - NIST-800-53-AC-17(a)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - PCI-DSS-Req-2.2.4
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - high_severity
    - low_complexity
    - low_disruption
    - no_reboot_needed
    - restrict_strategy
    - sshd_disable_empty_passwords
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbE9RVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      TnhSVkZCU21oaFRsZzJSa0YyVUhBemJYUlJTbFZNYzJGcmFWSUthbTk1Y3pkNE9FWnhOSHBPY1dO
      Uk0xbGpUemN4YWtGSUwwSnZhbTFpU2tkMlQydFRhbU56VlZKdEsyZGFRMjVPUTNkQ05FeFhPRE0w
      YzI5SVdYWlRad295ZWtoNmFVazFOR0VyU0haa1ZHOW1SazloYzFsYVNGcEhaMlI1VjAwM2IxbG9X
      RWhWYUV4VUwzaE1URXQxVUZZNFIxWTJSMjVqVVc4eVdtVlhha2xFQ201dFZIWldWbUZSVDJOaFpI
      Vk1WRmxtVUdRMmRWbEpNRFV6U0hwTmJsVk9iMHAyUkZSa2JFUlBaVEZ2VG14cVRFSlJPR0ptU1Rk
      UlJuWjZlRFZPVmxNS01qWklkbU5PVFZkalkxQlJORU5MVGt4MlpURlZWR05QUnk5eE5sWkJUekV2
      VkZSQ1NtMVhUMkpFYVUxd2VsSkxNa1phY0ZoQlJtbFBVMnd4YURsSVNBcE9XRGxSWkVWNmJHOXBW
      RU5DVkN0VVZIVmlXUzl2VW1wb1dtRlJjemg1SzFkaVUwZzBaelJSYmtkWWIzbERSRkZhZGtGa1Jq
      TlFRV0ZzVXpkblNGSmxDbVphUTNaMU4zSXdkVTFaWVVjelF6VnJTekJLVERrdldXc3JjVVpPSzJG
      V1EwWXlVelJzV21vMWNFRmtkM0pMVTBzME0zQjJjM2hXUjBOeVVqbFFOMFVLUnpsSmVVMUdObUk0
      UjFsU2FtbDVlVTFvTnpGV1MxUkJXVlJzTVhwcGVsZHBWaXRWYzJJM1YzVlROREZRU25oUWVWUXJU
      VkJCV25sWFJTOW5PRmhtVUFwR1EwOXNXVWxPVWtRM1ExbDJUWEl5WkZCVVNsVTBkMmhWYldwWWRG
      bGxaVk5LVDBsa2JrYzJOMFFyUVVKTVYwZGlZVnBRVERoTVJsRjNhVkJTZHpjM0NuZGtZMDVJUkhB
      MGNuVlljMXBSZEhOUlduTkplbVZrSzJoU2EwMTJZbGRCYnpaUVpqTkdZVEJDYzBsTGQxZzViMlkz
      VVVnMVJGVkNRMFJYV1N0eE5VMEtNMDVWYXk5MVNYQmlPSGRNU25KM2FIQm1UV2hhUkZWblNXZERj
      VWQ1WlZObVFWbzBPWHBRVkVGVU5tNVdORGhZYVVsaU1IRkhZMWhRVkhveGQxbzFWQXA0ZERrM1Ex
      SkZVMGR5YldKcVoweFVVV2RJU3dvOUx5dGpTQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Disable SSH Access via Empty Passwords
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)(?i)^\s*{{ "PermitEmptyPasswords"| regex_escape }}\s+
            state: absent

        - name: Check if /etc/ssh/sshd_config.d exists
          stat:
            path: /etc/ssh/sshd_config.d
          register: _etc_ssh_sshd_config_d_exists

        - name: Check if the parameter PermitEmptyPasswords is present in /etc/ssh/sshd_config.d
          find:
            paths: /etc/ssh/sshd_config.d
            recurse: 'yes'
            follow: 'no'
            contains: (?i)^\s*{{ "PermitEmptyPasswords"| regex_escape }}\s+
          register: _etc_ssh_sshd_config_d_has_parameter
          when: _etc_ssh_sshd_config_d_exists.stat.isdir is defined and _etc_ssh_sshd_config_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/ssh/sshd_config.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: (?i)(?i)^\s*{{ "PermitEmptyPasswords"| regex_escape }}\s+
            state: absent
          with_items: '{{ _etc_ssh_sshd_config_d_has_parameter.files }}'
          when: _etc_ssh_sshd_config_d_has_parameter.matched

        - name: Insert correct line to /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
          lineinfile:
            path: /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
            create: true
            regexp: (?i)(?i)^\s*{{ "PermitEmptyPasswords"| regex_escape }}\s+
            line: PermitEmptyPasswords no
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'

    - name: Disable SSH Access via Empty Passwords - set file mode for /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Disable SSH Support for Rhosts RSA Authentication
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_disable_rhosts,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Disable SSH Support for .rhosts Files
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-90797-2
    - CJIS-5.5.6
    - DISA-STIG-RHEL-09-255145
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_disable_rhosts
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbE9RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      WktVVkZCU2l0MVMzbEdaMjVyZG1SQmRYUXJjRmRSWTNJelNUQUtVa292YUZWb1NUQjZNbnB0YzJa
      eE5pOVJaMUV3WlhaT2IwNU1SMVJ0VFdONmRrRTBRemhwWXpKM2JTdDVSbmx3YUc5VlNrRTBVRlJV
      TDBObFRYRkhTZ3BxSzJWUlRVbFpUR1JCVWtGS2FWSm5jV05vY1dneWIyVnFkMjVFWjFZNGJFMVVO
      a3hoZDJGMk9FWjVielF3YVU5dFpYaDBjekpEUW1Sak1HOXZURzFuQ25veFFsTmtlVEpZS3pOc1Ex
      UTViMjQxZDFoblRTOVRSVU5WUTJveGFEQXZZemhVVVdaMWFrSjZZV1ZDYTBScGNYUjRMME42YW1W
      S1QzcFBlR05vUzBjS1QwUnBOR05QTVZVMVRWZDJjMHRwTmpSb01TODJiMHRFT1VaNVluaGhTWEE1
      V205YVpsaFlXbVJ0WWsxUE4yMURabGxwZEhJNU1URXJObkphVG1jdmN3cDNTMDlNSzB0d2IzbGpR
      MFF6UWtWaWJrWlphR3BhUTBZMVdXTTNUM2hRT0hsUmVraFhSVXBhTVdwRE4zZDVTR0ZwTldGa2Mz
      bFdZMUZqWVV0MVJXaEJDa0UzYWpsdFRHaDVUbTV6UVhkeFpYazRNVWczTjBOb2VtSnNNMmMyYlhV
      dldFdzJZVFJTT1cwd1JrazBSRzFZYzNOSlUxQjFlSEJQVnpScFIwbHhiMjRLVFZaYVpuRm1aWGd2
      VGxOT1VqRTJURGhEZDNsSFUwaFFkREpKZVhaMWQzQnNNV3BSZDBaTVlVWTRabE0xYkdkMVJGSnFX
      bk5XVERRclUxaHNhMEZzWndwVmFUTlBLMHhOWjJOT2VWcE5NMUpCWmtwQ2NVTkxjRU5RVTFWWVVF
      WjZXVkJaVkc4M2IyRm9SMDFVWjNsM1VIWjRXWFJPVkM5TVpFUlpjWE5uTVRkT0NsRlhMMU4yZEhS
      V01uRXdRekZyVnpocmFWZG1URTFEU2xSWmVqaHNWR2R4YTNZeFFYb3ZORmh4U21kR1kwbHpjVzR3
      ZUZKT1dHNDNTbW8xY1dsd1FVTUtabWhuZFhWcldWRTJabE5zYVZGTGIwVlZPRGhqZUhwRFZXODNT
      WEIwSzB4S01WZGxRbUpGTUc1RWJXNDJjekpyZVZKblYyUndURUZDVW5KNlZIb3hkZ3A2ZUU1M2Ez
      Vk9WMlZ0Wms1b1ZIVnBMM3BqZWdvOWNteEhNQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Disable SSH Support for .rhosts Files
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)(?i)^\s*{{ "IgnoreRhosts"| regex_escape }}\s+
            state: absent

        - name: Check if /etc/ssh/sshd_config.d exists
          stat:
            path: /etc/ssh/sshd_config.d
          register: _etc_ssh_sshd_config_d_exists

        - name: Check if the parameter IgnoreRhosts is present in /etc/ssh/sshd_config.d
          find:
            paths: /etc/ssh/sshd_config.d
            recurse: 'yes'
            follow: 'no'
            contains: (?i)^\s*{{ "IgnoreRhosts"| regex_escape }}\s+
          register: _etc_ssh_sshd_config_d_has_parameter
          when: _etc_ssh_sshd_config_d_exists.stat.isdir is defined and _etc_ssh_sshd_config_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/ssh/sshd_config.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: (?i)(?i)^\s*{{ "IgnoreRhosts"| regex_escape }}\s+
            state: absent
          with_items: '{{ _etc_ssh_sshd_config_d_has_parameter.files }}'
          when: _etc_ssh_sshd_config_d_has_parameter.matched

        - name: Insert correct line to /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
          lineinfile:
            path: /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
            create: true
            regexp: (?i)(?i)^\s*{{ "IgnoreRhosts"| regex_escape }}\s+
            line: IgnoreRhosts yes
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'

    - name: Disable SSH Support for .rhosts Files - set file mode for /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Disable SSH Root Login
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_disable_root_login,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Disable SSH Root Login
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-90800-4
    - CJIS-5.5.6
    - DISA-STIG-RHEL-09-255045
    - NIST-800-171-3.1.1
    - NIST-800-171-3.1.5
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-6(2)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-IA-2
    - NIST-800-53-IA-2(5)
    - PCI-DSS-Req-2.2.4
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_disable_root_login
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbE9RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      VktjMUZCU2pGVlJuVnFXRWt4VDBSaEwwcHZUMkpDVW1oQlIwY0tVbkpWV2paRU9YVmpjV1YySzBG
      a2NXRjBMMFpaUmxCMFMxQnlTazFJVkU5aE5VNVpSM2hsY2tGdlZGZzJhbWd4UVhGUE0wOXZTVTUz
      UzFKT1NGTjFPQXBhYUhwbk9HcGpSakZOVDJ4VVp6RlhXR2R6U2pVd1ExSllRbkZVTVZBNVptTjBS
      MUJzUWxSQkwySm5VbkpaWlZacFNUa3ZMMGR4UzNneU0yeDJObE1yQ2pCc01uWlVaVGRZWjFsTmJW
      cHhSM0JqWlVvdlVHTTNOSE54TkdScFdVRlBUbmhTUTNodlluRjBhRWxTTUhWcVdrZDFiak5tWVdo
      b1VVNVNiM0U0TW1VS01IWkdlRlp0WkhSVVZEY3ZNMUo1VFd4M2MzZ3hObFptT1VWSlNXRmFTR3g2
      VVhaeVFURTFiVmhwYlZjMlNHUnRkVGhzWWpVeFNrVjFTVlZ1T0ZBeFl3cDJSbU5VU0UwNWNEZFlZ
      MjVUUjNKeVVIQmlRM3BZVm0xQk5HaFFOa1ZGV0RKTFVHWXdRMVpMVjIxRFExa3pkM2xKTlZaUFFs
      RnBNM1ZhTnpKTWExZHRDazVDYWt4TlNsZDBURVZPVTA5aWFHVnhha1ZNYmpoYWFDdHBSMEZ2U2xw
      Q0wxVXpLelkzU0hrelIwNDViVmhaVVdOMWFraHdSak5ZUkhVMVJqVkRjV1VLUTJ4d1puRlNRelk1
      WjBRM1VVeG5UazVHTlVOVk1VSXdkWFl6TmtOVE5tZE5ZVmd2U3pCT0wzbFJPVkZuT1dkV1NUSXlS
      bEZNT0dwTU1Ga3hORXRzUVFwRVNuUnFka05CVEhabVFuSm5NazF3SzIxM2EzZzJkUzlHZVZrM2JE
      bEJjWGxNWWxRNFZEbHNlVlJJZVdGcFR5ODVRa3N3WWprMVJua3hTelpCVGxabUNtdHJXak5PVlZw
      T1owVnhkWFkwZEZCSVNtMUxUbWMyYTJ4Q2VrVkljamRFT1U1a2NraERibGd6WWpoQ1ZtcDViV05p
      Vms5TlFVNXBOVzVqUWtaNFdFNEtlbVF3WkhkR1ZFNHhTM1JLTmtaaVVucDFTVUppZG1kWlN6WnBN
      VkpXZUVWWlVYcHVhVzE0Y0VGbmQwbEJWbGRUVDJNeVJpOUZSRmRhV1hoQ2VrVktPUXB0YTI1TVdX
      eERSbkJDVVRoTk1sWmFhRzB5UlFvOVUza3dRZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Disable SSH Root Login
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)(?i)^\s*{{ "PermitRootLogin"| regex_escape }}\s+
            state: absent

        - name: Check if /etc/ssh/sshd_config.d exists
          stat:
            path: /etc/ssh/sshd_config.d
          register: _etc_ssh_sshd_config_d_exists

        - name: Check if the parameter PermitRootLogin is present in /etc/ssh/sshd_config.d
          find:
            paths: /etc/ssh/sshd_config.d
            recurse: 'yes'
            follow: 'no'
            contains: (?i)^\s*{{ "PermitRootLogin"| regex_escape }}\s+
          register: _etc_ssh_sshd_config_d_has_parameter
          when: _etc_ssh_sshd_config_d_exists.stat.isdir is defined and _etc_ssh_sshd_config_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/ssh/sshd_config.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: (?i)(?i)^\s*{{ "PermitRootLogin"| regex_escape }}\s+
            state: absent
          with_items: '{{ _etc_ssh_sshd_config_d_has_parameter.files }}'
          when: _etc_ssh_sshd_config_d_has_parameter.matched

        - name: Insert correct line to /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
          lineinfile:
            path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
            create: true
            regexp: (?i)(?i)^\s*{{ "PermitRootLogin"| regex_escape }}\s+
            line: PermitRootLogin no
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'

    - name: Disable SSH Root Login - set file mode for /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Do Not Allow SSH Environment Options
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_do_not_permit_user_env,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Do Not Allow SSH Environment Options
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-90803-8
    - CJIS-5.5.6
    - DISA-STIG-RHEL-09-255085
    - NIST-800-171-3.1.12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - PCI-DSS-Req-2.2.4
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_do_not_permit_user_env
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbE9RVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      YzRjMUZCUzA5bWFrSXJVbWd3UkZGNFJVRlhMMVJFT1dJclpqVUtPVGd2ZWtOalkwOWFSWGN2TTNv
      eWVXZ3JXazFGTVRKM2Nta3hSVlZaWjJ4bWJFTm5lamt5TnpWaWNrNDJOekJqZFdJMVJtSlRXbVpy
      TjNVMWFuUnZXZ3BWUlhaWFFYVXhXWE4wYW10VlZWcHVVSEkwYVRsNlVqWmlhVU5CYzNob2NsWndT
      MUpVZFdOUFJ6TndUR3A0Y0N0ck1IWTNlRGgwYkZJM2VrVnNNMU5IQ204ellYWnZTM0ZRWW5sc2Jq
      TXdWRFJFTkVaRFNWbGtaM04yY0ZWc1RVdFphVGhXVlRCSk9WazNOakpVUkRaMlMydHJWREV3ZDBa
      aU1ISkhkQ3RsU0RVS1Z6UnZZWGhWWnpodk1tSTRPVkI2YlZGWlZVcGFaRVJRVW1nclYxTnhMMGRy
      UzNsNE5IWTFla2tyYmpSaWJIVkxiMHMzVEhaeGVWWkJUbmhETlRsNFNBcEpaRGt2YVdKQlYxUkpL
      MDVqWVVkbVJESm5Vak5wUW1OYVNpOXlhWGhqU0ZGTUwwTlZZMU5NY3pJMlZrbElVbTVYTWpGcE1X
      bDJlVlJZWWtsVVZHZFVDbm92UTNGQlFqSlBNRkoyWkRsTFJHbDJVbXR4ZG5KblpUQk1XRkprYkcx
      WVZFSTFVa2hLYURGMU1GUkRiRWh0TVdkSVRsVlRkWGN5WmtsWksySkNiSGdLTDBKR1FuUjZkRlZ1
      VlZsaE1HOU9RV1UyUmpCeGNIVk1RMXBPWkM5dFMwSTJZekpuUlhCRmRXMTRiVkJyT0RWV04zWXhU
      MEpDYVRKUlRHVk9aRFpOUndwRFdrc3JWbmRGZUZoaGVsSk1LME5SVkdsUWVXUlJSSE5EYnl0RmJE
      aEpUU3RzTlVwMFZraE9SV3hpVUVGWmRscEZjaXRhYXpJNU1HRlBaVFZ2T1ZaekNsSXdSalkxSzBS
      SU5IZEtTbWM1Y0RGalJXWjBialZSTlRkV1dqSk9TRmwxV2xaRE5WSkRWbmRDU1RBMmRWSkZlQzlw
      VEZwWlVubG9UMnhqV0dSVWNqQUtSbEkwVlVZMlRWWkRkR1JuWTJKbVQycEdielZWUkhaNlIzcEZM
      MDFvUTBsRVYwODBhV3RpVDNSclowUlRXbWQyWjAweldWRkxjbFJoWlRobWJVdzRWd3BIWkc1c1lV
      ZEZNelEyVFZOVFYzVjJZMUZZU0FvOVZuUnlOUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Do Not Allow SSH Environment Options
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)(?i)^\s*{{ "PermitUserEnvironment"| regex_escape }}\s+
            state: absent

        - name: Check if /etc/ssh/sshd_config.d exists
          stat:
            path: /etc/ssh/sshd_config.d
          register: _etc_ssh_sshd_config_d_exists

        - name: Check if the parameter PermitUserEnvironment is present in /etc/ssh/sshd_config.d
          find:
            paths: /etc/ssh/sshd_config.d
            recurse: 'yes'
            follow: 'no'
            contains: (?i)^\s*{{ "PermitUserEnvironment"| regex_escape }}\s+
          register: _etc_ssh_sshd_config_d_has_parameter
          when: _etc_ssh_sshd_config_d_exists.stat.isdir is defined and _etc_ssh_sshd_config_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/ssh/sshd_config.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: (?i)(?i)^\s*{{ "PermitUserEnvironment"| regex_escape }}\s+
            state: absent
          with_items: '{{ _etc_ssh_sshd_config_d_has_parameter.files }}'
          when: _etc_ssh_sshd_config_d_has_parameter.matched

        - name: Insert correct line to /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
          lineinfile:
            path: /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
            create: true
            regexp: (?i)(?i)^\s*{{ "PermitUserEnvironment"| regex_escape }}\s+
            line: PermitUserEnvironment no
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'

    - name: Do Not Allow SSH Environment Options - set file mode for /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/01-complianceascode-reinforce-os-defaults.conf
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Enable SSH Warning Banner
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_enable_warning_banner_net,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Enable SSH Warning Banner
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-87979-1
    - CJIS-5.5.6
    - NIST-800-171-3.1.9
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-8(a)
    - NIST-800-53-AC-8(c)
    - NIST-800-53-CM-6(a)
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_enable_warning_banner_net
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFBRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      cFhPRkF2TWxsbksycHpZWEFyZEhKVFdHZEhaa1JUYlV0WlVpOEtZbTAzZDNGdVpXTmtNV3RIYjJk
      M1l6UjNWbEl2VW5SSFdGaG1TMkppS3l0c1FsRTFPSFE1TmxSQmVrd3dURTEyUW5JclUzWmxORGwx
      ZUV0bldrSTBXQXAwT0hSRk9WTlBNa1l2ZEVwWGNHaHFWamxxVFdNdmNYbzVlSE5NUzFZMlpWaGtL
      MkUzZDJFMk1uTXZXRU5RTmpkTVVrWmlSVEJ4U2tWMFZuSjJUa3BXQ2s5SWRFcHhkbmhYZVU5aE1r
      bEhTV2szVmxOd1NuQlBORUpGU0dWdlRtNDNhWHB4UnpCcFJVazNVelJYVWxBMFlsRm1jVVZ5Tldo
      c2FYZG9jM0Y1UzIwS1RWUXhaamRGY2tWRk5EVnNVRFF5YmpCMFYySjBTMUpRYVVndkswZGlZMGxX
      U2paVFltUklabXAzV2pOaFVITnlSWE01YjJzMVNUQTFia1ExZDJreVZRcEtVM2wzVTA1bGIwcDZk
      MlpITkUxTUsyNWtXREpMVG5CWk1EVTVNamxQU0dkc2RteE1OakZ5TlhCUFoweE5RM0ZaUkdsNk4w
      dFpkV1JsYTFoMksxRjJDaXQ0WjFsNlRqa3haQ3RXT1RNcllqRjJVRkpHV1dKSlkzb3dUWFpNTVdK
      cFNXUnpZVkpzYUhsd1FXeFllalJyVUVGaU5ETXhjakUyTDFWS01tNVFVbUlLZG5WNmQxWmFhM1pH
      YzNoTk1EY3llVU14YVdSYWJqUm1XVFUxTUVzcllVSTVRa3hPUjFScU9IWmFiRkptWlRsNmRtTlla
      M2RzVlVWR2JFcFhObkkyUWdwMmVITXJVMnhHVmpKeGJYUnJORkp0Y1dvd1ptWjNRV0p3UkRGT1ds
      RkNSbXhCU0ZSSU5VWXlMMGhZU0VSSlFuZGhWblkzZEVGcGFtODBPREJ2SzFCR0NqSXdOVEJ1YlU4
      MFIzaHlVMFJhU1ZwSE1tVnVaREl2UzBsdU5IaERlako2TURabU5XTkNSU3N6VEVwc1ZEZGxVazFG
      VkdGb2NYVkpWblZpVkVWdlpua0tORzlyUlRJeGRDOUZUemhxYnpKS1QyZExNU3RvVlRJMWVGQlNZ
      MGhYY0cwMWJucHBSMFp1TkdFd05HRXdiRXhzWkd3NE5EVjVVakJqY0dkcWFVVnFhd28xTWpaSmFG
      SjJURWhxVjFObGFYSndSVEpEYlFvOVNVeHhkUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enable SSH Warning Banner
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)(?i)^\s*{{ "Banner"| regex_escape }}\s+
            state: absent

        - name: Check if /etc/ssh/sshd_config.d exists
          stat:
            path: /etc/ssh/sshd_config.d
          register: _etc_ssh_sshd_config_d_exists

        - name: Check if the parameter Banner is present in /etc/ssh/sshd_config.d
          find:
            paths: /etc/ssh/sshd_config.d
            recurse: 'yes'
            follow: 'no'
            contains: (?i)^\s*{{ "Banner"| regex_escape }}\s+
          register: _etc_ssh_sshd_config_d_has_parameter
          when: _etc_ssh_sshd_config_d_exists.stat.isdir is defined and _etc_ssh_sshd_config_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/ssh/sshd_config.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: (?i)(?i)^\s*{{ "Banner"| regex_escape }}\s+
            state: absent
          with_items: '{{ _etc_ssh_sshd_config_d_has_parameter.files }}'
          when: _etc_ssh_sshd_config_d_has_parameter.matched

        - name: Insert correct line to /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
          lineinfile:
            path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
            create: true
            regexp: (?i)(?i)^\s*{{ "Banner"| regex_escape }}\s+
            line: Banner /etc/issue.net
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'

    - name: Enable SSH Warning Banner - set file mode for /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Set SSH Idle Timeout Interval
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_set_idle_timeout,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set SSH Client Alive Interval
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sshd_idle_timeout_value: '300'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFBRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      UlhUVkF2TUc5cWNFOVBZVGhJV1dKSWVDOUxhMjR6VEhKSVVGZ0tiMnBWYUhOS1EwWkxRVVY0Vm5K
      Q2JHbGlWVUpFWmpCS1JYTnZNMHBKY21wSFlYWktTazVxVVVGdVYxUk1hM2g1Umk5Q2NtMUdLelJX
      V2t0NU5WcEVkQXBtTldsYU4zWmlVREZIV1RZMWNEWXliMEV2T0VzclNHcFFURU4xT0RCVlEyTkth
      a2t3UVVOc2VGUjNXazU0VHpoa2VFOUVORll5UkZBcldVSlhNV1ZwQ2tKWVluWlNlbWh0YmtaaFRt
      NUtPVVUwVERVMldtTllLMmRhUm5wWVFrcEhTWFpEYm1keE5uTnhTVkpxVUZoU1kyeEtNVWxwWW5w
      NWFHdEdORGx0WVZFS1dFZE1PVXRrVUd4dldqQjVlblF6YVc4d00zbFJjRVF6VTJzd2JqWTVkWE5X
      V0daemNHbEtjMjlLTm0xVU1GaENRbEJsUWpJd0t6bFpTbHBDWVRGTFl3bzNjRlZQYVdGa2VYY3ha
      RVo0Tm1wTGRHMXZTRk51TkZZM2FFNVVXU3RRU0ZWVE0xTndOSGRGUlZwM2JtdHRjRlZ3TVVwck1W
      aHROVmxRVVZadGR6Rk1DbU5LVUM5T2NHaEVNSFpOVWpGYVdYQkRWV2g1Tm5GcWRsbFJUelpWTm05
      V1pYRTVOMFJ6Y0hSclJHbHZSMFJtZFhSNGFrZDFVMU5CYkN0VVRISnJlSEVLWTFad1Z6RkhVRXRa
      VDNVM2JtWk9VaXN3VW5KelRuaGlZbGRPWWxGUlZXWjZORWNyVmxVclVFMWhNaTlCZVdSclpUSnpW
      emN6TWtacFUyOVFObTVoYVFwWWQyVnNSbFU0VGtSUGVVTm1jSEZuUkZReVNWcEpZMk1yTDJSWlFU
      ZEhSMVUyTDJOQ04yUmxTbVpHVkhKUVNqSk1TWFl3YzA1WllUQTFlazFCYW5wM0NraFlVMFJHYUVk
      c1YxVlFNbmN4Y1daclRESnVMemgwYXpsYU9WazJaa3hMVjFsekx5OTBZWGg0Tnk5dlRDOVlPRWhE
      U1RCeFYzaG1NbTlEU1cxaFUwZ0taSGR4UkZrNGREZHpVV05PWjNaRE1FbHhRWGREZVdJd01tdEJX
      RTkxTDJWVmIydHZjbkZZWTJkS0syOTVNalZrVW5saGNWZDJZM1p0V25GSllWTXZOd3B2TTBWb1dH
      NHhNM3BwT1Roc1psRTFlSFpvZWdvOVFscFdhd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-90811-1
    - CJIS-5.5.6
    - DISA-STIG-RHEL-09-255100
    - NIST-800-171-3.1.11
    - NIST-800-53-AC-12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-2(5)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-SC-10
    - PCI-DSS-Req-8.1.8
    - PCI-DSSv4-8.2
    - PCI-DSSv4-8.2.8
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_idle_timeout
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set SSH Client Alive Interval
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)(?i)^\s*{{ "ClientAliveInterval"| regex_escape }}\s+
            state: absent

        - name: Check if /etc/ssh/sshd_config.d exists
          stat:
            path: /etc/ssh/sshd_config.d
          register: _etc_ssh_sshd_config_d_exists

        - name: Check if the parameter ClientAliveInterval is present in /etc/ssh/sshd_config.d
          find:
            paths: /etc/ssh/sshd_config.d
            recurse: 'yes'
            follow: 'no'
            contains: (?i)^\s*{{ "ClientAliveInterval"| regex_escape }}\s+
          register: _etc_ssh_sshd_config_d_has_parameter
          when: _etc_ssh_sshd_config_d_exists.stat.isdir is defined and _etc_ssh_sshd_config_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/ssh/sshd_config.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: (?i)(?i)^\s*{{ "ClientAliveInterval"| regex_escape }}\s+
            state: absent
          with_items: '{{ _etc_ssh_sshd_config_d_has_parameter.files }}'
          when: _etc_ssh_sshd_config_d_has_parameter.matched

        - name: Insert correct line to /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
          lineinfile:
            path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
            create: true
            regexp: (?i)(?i)^\s*{{ "ClientAliveInterval"| regex_escape }}\s+
            line: ClientAliveInterval {{ sshd_idle_timeout_value }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'

    - name: Set SSH Client Alive Interval - set file mode for /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Set SSH Client Alive Count Max
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_set_keepalive,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set SSH Client Alive Count Max
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_sshd_set_keepalive: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFBRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      UXJTVkF2YWtSU1Yya3dLMll2T1N0b04xQTJSVXhDZW5kalVWQUtkRk5NSzFkb1dIWjJZMWxUVFc5
      NVp6WkpXbVpOVW5GamFUaFJSbXRoUXpCelpGcE1WbkFyYlhaMldsSlZaRGRKWTNWeWVIUnZSMU1y
      UjA5RlRFcDFjd3BJY1VjNVNVWm1kMmxxUTFwSk5YTktVbFV2YlV4c2FVeG1SV1ZSUzJKcmJteGph
      RVZHZDNWamRsTTRhMDF1UlRkSVRuRmhTbVJ6T0ZsamIyZFhVRmRzQ2s5RWIyWnRaV1pIVWsxVGFs
      cGlkbGgyTTBSNk9YVnBTRzFEUlZadlVua3laVUp6WVcxR1NYUkVjamhzZUN0MFoyRkxjV1V3VUZK
      cGRFOXRWbTVWU3pNS2RFSm1NR3h5VjBaWWJGZEZMMjFTVjFKMmIzVmhaelpPTkdKdWIweFJWVkpT
      VmtrMWQzWmFLMWhVY1VsWGJXMVhUVmwzWVVWYVExbDFhRGxVUlhJMFpBcFNlV1Z6UlVVeksyTXpO
      MUZJV0dSdmMycFdOV3Q1TTFCeU4wbHZSRVpYZWtwUllVTkJiMU42WVc5T05GZFBjM0F6TmtOcGMw
      NXFXbTF4U1RGMGIydHVDakJrVG1GVmFWQm9Sakp3VFhwMFNsTkxTR3RtT0haaWEyOURkSGROVkc5
      a2NqSTJVUzlyUml0eFNYUndTVUlyZUc5S1pVUkxPVlI1YUU1bWNFODJMMU1LYjBOQlRsRTBja2hS
      VUc0dmJFZGpkVUpCYjJwYU9UbHhNRWRYV2xKeWJGRXJlblZtYWxCa2JGZE1ZblZ5T0VKak5XeHpN
      RzVOVjBoT2ExRXZjazFaVkFwSlJub3djRkk1U2sxUFVFcHpVVWN4Y2tkVk1qQlpkR2xJWkVadGJI
      bFdRa3BuTVRZNFZ6RkxObVZsUmpoV2MwOVNWRmxPUWtsd1NIZHVhMEZsUnpCb0NuVnVhblY0WWpO
      Rk1WWlhiVE5GTjJKS1JuSnhVVUkzVEZST1NESklMMkpKZUV4Tk1sVTRPVzF0YWxSbVF6bFpVVkZh
      VWpWTU5tbHJSR1pXVkdzeFdrb0tibUZqWTJWV1NqYzVOamREUWpBM1lVTkpLemhtTDFWRk1VaDRU
      azgzYW5ZMGJDOHZiRlp0Wm5WNlJWUk1WbmxyZVc1c2IwcHhZakJGVTI1Q2JIZGhlQXBoTTFsNVVY
      QllhMFpFUlVkU2VrVkhjazVTVXdvOVVFNTNUZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-90805-3
    - CJIS-5.5.6
    - DISA-STIG-RHEL-09-255095
    - NIST-800-171-3.1.11
    - NIST-800-53-AC-12
    - NIST-800-53-AC-17(a)
    - NIST-800-53-AC-2(5)
    - NIST-800-53-CM-6(a)
    - NIST-800-53-SC-10
    - PCI-DSS-Req-8.1.8
    - PCI-DSSv4-8.2
    - PCI-DSSv4-8.2.8
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_keepalive
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set SSH Client Alive Count Max
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)(?i)^\s*{{ "ClientAliveCountMax"| regex_escape }}\s+
            state: absent

        - name: Check if /etc/ssh/sshd_config.d exists
          stat:
            path: /etc/ssh/sshd_config.d
          register: _etc_ssh_sshd_config_d_exists

        - name: Check if the parameter ClientAliveCountMax is present in /etc/ssh/sshd_config.d
          find:
            paths: /etc/ssh/sshd_config.d
            recurse: 'yes'
            follow: 'no'
            contains: (?i)^\s*{{ "ClientAliveCountMax"| regex_escape }}\s+
          register: _etc_ssh_sshd_config_d_has_parameter
          when: _etc_ssh_sshd_config_d_exists.stat.isdir is defined and _etc_ssh_sshd_config_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/ssh/sshd_config.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: (?i)(?i)^\s*{{ "ClientAliveCountMax"| regex_escape }}\s+
            state: absent
          with_items: '{{ _etc_ssh_sshd_config_d_has_parameter.files }}'
          when: _etc_ssh_sshd_config_d_has_parameter.matched

        - name: Insert correct line to /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
          lineinfile:
            path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
            create: true
            regexp: (?i)(?i)^\s*{{ "ClientAliveCountMax"| regex_escape }}\s+
            line: ClientAliveCountMax {{ var_sshd_set_keepalive }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'

    - name: Set SSH Client Alive Count Max - set file mode for /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Ensure SSH LoginGraceTime is configured
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_set_login_grace_time,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure SSH LoginGraceTime is configured
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_sshd_set_login_grace_time: '60'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      Vm1NRkF2TURkVmEwMVRjbGsxV25WMFJsazRNM3BMVEhoUGRYWUtXa2hZYUZSNlZXSldOR1JWWjBG
      Vk5qbG9SMlUwVG1ZNGMwNXJhRmtyWVdSS1YzTXZiR3gzYjNCRlNVSnNPVzV2YWtScWRGRXhkWGRO
      TkZSaE5FZGlUQXBEYW1aV2MzWnJRMWxQVXpsQmFGVklhSGRITTFoV1Mwb3lkWEIxVEdOM1J6RTFk
      SFpOV2xKbFVuUldhRko2TkZCMk5VcG5SVXMzT0dWSGVHbFVNMWgzQ21wWE9YRkhZV2Q1TUVGUE0w
      dHFZM05HZG1veUwyTldSemQ2WVc1elRGaG5UeTl1TDFaSkwwUTVSSEZKWTNOWVdFRnZUMDEyUzFG
      T1drNVRaVTkzZVdjS2VrRjFXa2xXVmlzd2VXeFRSVGQyVFZCbk9FTkxOblZ6Um1sM2FVZElSbWMw
      VGpaeVJWZFhZa00yVEVZNVpVMHZPVk5ZWjJaU2REQmtTRVZNTDBsMFlncGtTVUZCWlRoQlRsRTBk
      MWxZVHpNdmVtYzRiMDU2Y0doM1oyOVdORmRZVlN0NFFreFJkU3N4WTBKMVRWWm5TMUZQYWtsamFW
      VTNTRFZKUVVSbFNqTXdDbk0yU1ZWd1lUQTFjR1pqU1VFemNHVmxkR2hoTDI5cFEwSmpZVXhOSzA5
      NlRrdHhhRVp6ZUhocE1UaGFka040ZEVwUE9XSm1WbVJ5Y1RocFdWcHRhRVlLZFdaelNqQnpSbWd3
      YVZKRE1sa3dZbmg1WVZScU5qazJOWGx2ZEVWWFFUTldUSFpzV0dkc2JUSmFhVVJXVm1sdlZIZ3Jl
      RU16YlVOWldXRXdWamd3UmdwbmFXTXJjVzB4T0hkUmRrNTRSak50YmtzMUswaE1PR0UxVm5OcU5I
      SXllR3BFYjBkRWF6RmtUbXh5U0VGRlVFMWxWRXBUVG5OaGVEVk1kemhTWXpOakNtdHhSVzAyUm05
      S2JqVnpTbEpXZFhaMmFIbEhOMmhhT1ZwUksyeG9WR3g1UWtFMlNYSlJLeXRUZG5NcldsaHJSbnBv
      WWtKRmNUTXpTMmRTVERGak1FVUtWVmRuTlVkblZsRkljVEEzYXpKWFowaHRTVGhoYTFkb1V6UnJP
      VmhtV1hkMkwwUTNjbE5KUVdsclEwVlRZalZ1VkdGcVMwSXZNQ3N6TUhRMlNUWkRaQXBWVlhoMFds
      QlpLMDFwWlZsS1RXSnVZVzF3YkFvOU5sZzJjZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86552-7
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_login_grace_time
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure SSH LoginGraceTime is configured
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)(?i)^\s*{{ "LoginGraceTime"| regex_escape }}\s+
            state: absent

        - name: Check if /etc/ssh/sshd_config.d exists
          stat:
            path: /etc/ssh/sshd_config.d
          register: _etc_ssh_sshd_config_d_exists

        - name: Check if the parameter LoginGraceTime is present in /etc/ssh/sshd_config.d
          find:
            paths: /etc/ssh/sshd_config.d
            recurse: 'yes'
            follow: 'no'
            contains: (?i)^\s*{{ "LoginGraceTime"| regex_escape }}\s+
          register: _etc_ssh_sshd_config_d_has_parameter
          when: _etc_ssh_sshd_config_d_exists.stat.isdir is defined and _etc_ssh_sshd_config_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/ssh/sshd_config.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: (?i)(?i)^\s*{{ "LoginGraceTime"| regex_escape }}\s+
            state: absent
          with_items: '{{ _etc_ssh_sshd_config_d_has_parameter.files }}'
          when: _etc_ssh_sshd_config_d_has_parameter.matched

        - name: Insert correct line to /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
          lineinfile:
            path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
            create: true
            regexp: (?i)(?i)^\s*{{ "LoginGraceTime"| regex_escape }}\s+
            line: LoginGraceTime {{ var_sshd_set_login_grace_time }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure SSH LoginGraceTime is configured - set file mode for /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Set SSH Daemon LogLevel to VERBOSE
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_set_loglevel_verbose,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set SSH Daemon LogLevel to VERBOSE
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-86923-0
    - DISA-STIG-RHEL-09-255030
    - NIST-800-53-AC-17(1)
    - NIST-800-53-AC-17(a)
    - NIST-800-53-CM-6(a)
    - PCI-DSS-Req-2.2.4
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_loglevel_verbose
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      TmFWVkF2VWpNMU1tOXJVRUk1T0VReGMwUktWM0pGWVU1S1ZGTUtTblJ0WjNWU1NVMVBiM0J6WlZv
      eWFuazBhVmh1UmxSU1FVSnNTM2szVEVWUlRGVnBaemw2WldWSVJHNVdNemQyY2pONVkwTlFVRFJw
      V2tzNWNWcHpkQW94WVhGVVVFTTBkVFpGTDFWc2R6Z3hlVmRDV20xeVMyRnFNVmhXYVhZeU9VRm5V
      RzV6U0RreWNVWTNMM1JNTmxGalprVXJTVkp1Vms1dFlscGlUbEJ1Q20xa1dUZE1iVXRvYVZGSWMy
      c3hia2ROUlcxVWFVMWxkRmx3YTBVMlVFRmpiWEZpWkdreVdHZEVOVTEwVVRKV1drVXZNVVpRU25s
      MGVWQm1aMDUwT0dVS0wySktZMkpwS3pkUFJIQnpaMlpUV1RVM2J6SlRjRTVzU0VOQ1ZHcFVWbEJ1
      UzFOV2FrODRaalptUm1kUEwyUjZWRmxYU3pGSFFubEVXbmhaVFhoeGVncEhhbHB0U1dOS05tNXFL
      M0ZEWkZwbmVYUm1XbWdyY2s5QlMyOXpUR0ZtU3lzeFQzRXliUzlLT1VOR0swZzFjekZDVERSbWFG
      RlFOMlJ6VEc5UGFXNVdDakV5UTJ4cldVaE5SbHBTV0VNd01rRkJLemxhU1V0amNHOVRaWFIwU0Zo
      alIyb3JiblZ5TWs1aU1YZzRaRVZrUWxwQk9WWmxjek0xTWxOelN6ZzBjVTBLUlhGRFdXTnBUR1V2
      YWk5c1VYQm5aRlZWV2xOc05rdFdRMFJDVHpsdFVuYzJaSEZ0VFdKcGNIZEdlRkJDWTNwS1JFTjRh
      RkZ5WVVOUmFWUkRaR28wUkFwSmMzQnZRWE5vV21OcU9GTjJSbHBhU1ZSc2JIVm1RVGRYY1dkS1R6
      RjBSMFEzVURScWNuSkZkVXd2UW1oclpuVnFiMVJzTDJnMGJFUnJhazB5UTJsV0NtVkdjSFJxTml0
      WVNXWTFjR0ZhWkRsaFlscFVkRVpUVkRkWU1rbEpaMlJxT0RKU1lqVTJaVmxvZDFkVU5YVnhhbGhI
      Y1U5R1lsbDVTamxxY0RodFQzQUtSRVZZVjIxNU9FODRkbFpvTUZwWWEwcGhlVWxzVlhsVFFYZEpX
      V292Wkd0Qk4zcHFhSFpCU0doT2NYRTFUbFJFYXpobVVWRnNTVU5KUmtNcmR6VndiZ3BDY0hBdlFX
      bFhOWFpJYzBVelVXaFlSVVJzVWdvOWJYSnNOd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set SSH Daemon LogLevel to VERBOSE
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)(?i)^\s*{{ "LogLevel"| regex_escape }}\s+
            state: absent

        - name: Check if /etc/ssh/sshd_config.d exists
          stat:
            path: /etc/ssh/sshd_config.d
          register: _etc_ssh_sshd_config_d_exists

        - name: Check if the parameter LogLevel is present in /etc/ssh/sshd_config.d
          find:
            paths: /etc/ssh/sshd_config.d
            recurse: 'yes'
            follow: 'no'
            contains: (?i)^\s*{{ "LogLevel"| regex_escape }}\s+
          register: _etc_ssh_sshd_config_d_has_parameter
          when: _etc_ssh_sshd_config_d_exists.stat.isdir is defined and _etc_ssh_sshd_config_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/ssh/sshd_config.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: (?i)(?i)^\s*{{ "LogLevel"| regex_escape }}\s+
            state: absent
          with_items: '{{ _etc_ssh_sshd_config_d_has_parameter.files }}'
          when: _etc_ssh_sshd_config_d_has_parameter.matched

        - name: Insert correct line to /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
          lineinfile:
            path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
            create: true
            regexp: (?i)(?i)^\s*{{ "LogLevel"| regex_escape }}\s+
            line: LogLevel VERBOSE
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'

    - name: Set SSH Daemon LogLevel to VERBOSE - set file mode for /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Set SSH authentication attempt limit
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_set_max_auth_tries,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set SSH authentication attempt limit
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sshd_max_auth_tries_value: '4'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      QlFUVkF2TTJWdE4ydGtjbGt5UkZCdVIxWlFTMGRqTW1vNE0wWUtlbVowVUhSd1N6a3dURFp1WTNV
      eVkxbzVkRzF1VUdGNWJUVm1kRWhqTTNWSE5tWnVWMmhETkUwdlpYRnJPRWRQUkc5aGREWlFRazVX
      WW5GRVlsTnlTd3AxYlVKRWJua3hRV2g1TkdsSlpUQlFPRWh6VjA5TFRHOXpUMUl3WlhWdk1UTmtV
      RE0yTTJ0UlNrTmtSbGhYYTAwelltc3JObGh5YW00NE9HWTVVVk4xQ21seWQwdFNSM2RSTlZGdFZW
      WkhRV2htUWs1NFVIY3llWGRzT0RKdFlVTXpXa2h3U1dOREszWmlUREp5ZDFSbWFVUnRhbEpDU1V4
      SE5rRTVjMmh1U1VZS1FtYzJRelJoZVhWQ2QwdG1SaXRGUkU5VVdXbERRMDVUVlcxUk1XbFBNMnhM
      YUhoeFdrZDFLemx3UzNwNlJHVTJXakJuWjNwWWJXMUlSSHBqU0RoRVVncHpObXN5U1c1b0swNVNR
      bUZZY1hSS01EZHlWVlIxTjNWSVozWXdTVEZ2WlRZd0swOVFSbWc1UTAwNVoyWk5XSEF5TnpVMk1u
      bEdUM04wWlUwemNsWlFDakUwU1ZOcWR6aGxSR1psZFhwR2FFUk5iVFEzVEU0elZXd3JjRVo1Y21w
      U05rUkJRMmN5TlhWNGNsZzFNVGRTUjB3NWRucGFiRzV5TVZGdVNUVjZXRmdLU0RkRFNsTklTSEJN
      WWxvNWIwNVpLM0ZNTWpOR2JteDBWRkZUTW1WMlZFNUpUV3hGYml0b01VUmtjWGhxWVdvclNVOW9N
      MWxVVkdOemJWZHJMMkUwZFFvd1kyeEVRMlFyYW5CVVZIQmlhelkzVVdkellXUTFlbTlQWkdOcWNH
      WlZhbXc0YUZrdlFrbFRSemMwYldjMFNsTjFSMGhxVDNoNmVtTXdkWEZYYjBsWkNqbExSM1E1VlZZ
      M1NIbHZRMGRMTnpGR1dsZDZTV3h6VkVvclVtWTNiR0kwWVZCR1pWaHllVlpPY25FdlYwVmhSREJQ
      UkZKb1JFTTNielZHVTNwME1VSUtkV2RsVkRJNGMwSlBibVl4ZGxKT1ZrNTBlVlUyWm5oSFkwRnda
      bmR2WWpOaWEzaEZZM3BVYm14amFreFpOVzExVDJsNldUUXlaRmxxSzJSS05rcFVVUXA1V0VSd1dG
      TmlUVTFOVTBkSVJUaEZMMlZHTHdvOWJEWjFOd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-90810-3
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_max_auth_tries
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set SSH authentication attempt limit
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)(?i)^\s*{{ "MaxAuthTries"| regex_escape }}\s+
            state: absent

        - name: Check if /etc/ssh/sshd_config.d exists
          stat:
            path: /etc/ssh/sshd_config.d
          register: _etc_ssh_sshd_config_d_exists

        - name: Check if the parameter MaxAuthTries is present in /etc/ssh/sshd_config.d
          find:
            paths: /etc/ssh/sshd_config.d
            recurse: 'yes'
            follow: 'no'
            contains: (?i)^\s*{{ "MaxAuthTries"| regex_escape }}\s+
          register: _etc_ssh_sshd_config_d_has_parameter
          when: _etc_ssh_sshd_config_d_exists.stat.isdir is defined and _etc_ssh_sshd_config_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/ssh/sshd_config.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: (?i)(?i)^\s*{{ "MaxAuthTries"| regex_escape }}\s+
            state: absent
          with_items: '{{ _etc_ssh_sshd_config_d_has_parameter.files }}'
          when: _etc_ssh_sshd_config_d_has_parameter.matched

        - name: Insert correct line to /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
          lineinfile:
            path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
            create: true
            regexp: (?i)(?i)^\s*{{ "MaxAuthTries"| regex_escape }}\s+
            line: MaxAuthTries {{ sshd_max_auth_tries_value }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'

    - name: Set SSH authentication attempt limit - set file mode for /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Set SSH MaxSessions limit
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_set_max_sessions,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Set SSH MaxSessions limit
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_sshd_max_sessions: '10'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFFRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      UmlRVkF2TUhGVGVYWk5aV2d3T0c1Qk5sQkRNSGx1YVVNckx6TUtibVJ3TTI1SmQySXdja0k1TUdo
      cE5FRktPVEpsUTNKNmNsZzNNbFZPVDFsdFZqQmlVVlZNYm5NeGFYVlhkbVpYVG1aRWJITlliMGRO
      T1RORmNtVmFRd3BQZUdvNGQwZFFWbmRKZG1aNmIwdzJiVmM0UkhKTWF6bG9aSEVyU3pOMlJtMHlT
      R3R3T1M5cmVEWnpjRWhwWlcxR1VIbHpLMnBXUmtkRWEyUktMM1UwQ25aelRFeHNhMEo1Y2pJMU1u
      Sm1aMDFKUlhCbFdTdDBjRTlaZW10SlRtTk5aWE5IYkRkWlN6aFNUekp6T1ROTFEycEdZbWM1ZFc5
      aVZGZFZkVkJZU21VS2JWVjBiR1JaZURGbmVWZEliM1ZLTTAxa1ZFWkhkbmRDVERobWMydHFWalV6
      ZEZCVFVGcDRRVU5zVHpGNGFrZDBiR1JxUVRGb1prMVlLM0ZITlVaRGNncGxWa1ZyVTNFMmQyeEla
      MVJWTVZkdU5VcHpLMU12WVV0RFQzWjBlREZ1WmpGcFRrWkRTemw1T0RKT2RsUjRZbEF6VTJaSVVW
      WkJWa2ROUldKekwybHdDaXRvU0RkMVJtWmtLM2xYVW5Gc1ZHVklVMUpuV0VoSlkxaHZkbFU0VlVN
      ME9YazRibFF5UnpaV1ZWUXJhRmxyVWpWUVNpOU1TMFJVTDFwRFQyTlNPR0lLTkdvcmNVcFZZa1ZK
      VjJkMFozQlNNV2h2WjFsemNrVjRkM1pEUTJzdlFrd3dkR1F4TVdKbWRsaDFPRlJpWTI1a1VHVXJU
      MkZEYVZZd1JtUmthbWx3V0FwMldUQXhUVmhvY2s1NVUxcFVTRzR2UkZOVU1ISnpTalZxU3pGMlVF
      ZzFVak41UjBZcllrVmxkR3RKZHpKU2NYUnlPR1JSZUU1eGRscHRPV0Z1YW04MUNtVnJibTV3WTBo
      R2VHMXZLMlJhUzNvMk0ySlhWbWhpYjBjMFkybHhSMWwwVlZKNGFWQjJXV3d2Tm00M1ZuWnJZa3BP
      VlZoUVNWaENWVlJ6VlRsdEsxSUtjelYzT1V0WFV5OW1hVzFEVHpkd00yOUZaVEkxYzB0aGJVbDBk
      MmgyVkdsa1IxRTVha1prYUhWWGJrWllRakJ6VkU4eGNsZDZRazl4UVdWWFVHNW1kQXAwVlVkT1Uy
      bE1UMUJ0U25seVVVeGxLM2RTTXdvOVl6VjJUd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84103-1
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_max_sessions
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Set SSH MaxSessions limit
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)(?i)^\s*{{ "MaxSessions"| regex_escape }}\s+
            state: absent

        - name: Check if /etc/ssh/sshd_config.d exists
          stat:
            path: /etc/ssh/sshd_config.d
          register: _etc_ssh_sshd_config_d_exists

        - name: Check if the parameter MaxSessions is present in /etc/ssh/sshd_config.d
          find:
            paths: /etc/ssh/sshd_config.d
            recurse: 'yes'
            follow: 'no'
            contains: (?i)^\s*{{ "MaxSessions"| regex_escape }}\s+
          register: _etc_ssh_sshd_config_d_has_parameter
          when: _etc_ssh_sshd_config_d_exists.stat.isdir is defined and _etc_ssh_sshd_config_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/ssh/sshd_config.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: (?i)(?i)^\s*{{ "MaxSessions"| regex_escape }}\s+
            state: absent
          with_items: '{{ _etc_ssh_sshd_config_d_has_parameter.files }}'
          when: _etc_ssh_sshd_config_d_has_parameter.matched

        - name: Insert correct line to /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
          lineinfile:
            path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
            create: true
            regexp: (?i)(?i)^\s*{{ "MaxSessions"| regex_escape }}\s+
            line: MaxSessions {{ var_sshd_max_sessions }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'

    - name: Set SSH MaxSessions limit - set file mode for /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Ensure SSH MaxStartups is configured
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_set_maxstartups,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure SSH MaxStartups is configured
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_sshd_set_maxstartups: 10:30:60
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      TnFORkF2TWpJelpFaFNPSEpqUWpodmRWaFhaMHBzZUZwRWJGRUtjMFpHVDBOS1NEWkNVMU5LTTBs
      TGNERjBZMWN6UzFsdGRWZEJUSFIwZVVsRGNXdHJXa0kyZDFsMlJ5dDFSelpNTkZoV1ZFMXllSEJH
      YUdKd2RqaGFTd3BsTDFCak0yOXdSekJ1TTFaSllXVkJaVTFqTlhoRk5UWm1RbGwwT0RGUmFDOVZZ
      VlVyU1hwNlVuaHlNbVEyVkRKNlUwVklaMFJHWjNocWEwUlpRVXBUQ2xaSVdFSkdiMloyTDJaRE5r
      a3hOVEpoYkZGUFIwd3pTblIzYW5KQmExTjFZVGRzYlZNeFpVVmtRVlZJUjJkVWJ6VnRWWGhLT0RZ
      clQwWktjME12TUhJS1owVlhOMEZGYm5KTFluVTBSa2QxWVZKQ2RuZFJSRGRsTWpKSGRuaHZSMGsz
      U2poVVJVeEZNMDl4VEhOc04xVlZjamx4ZDA0M1UzRlRWMEZrYkN0cU1BcFRlbk5PUkVoRFQxcEZU
      VmQwWTFaMWQyRlpaV1kwU1VKelVuZHBiUzlhTlhaNlZIUklNM0ZJZUdSMmREbEdkbmhGTW1WeFNE
      QllkVkJOY1RSV0sxUlpDa3N5YURCaFJsaGxWSGxzT0dOU1NXbFRTVnBJTW5GVFVGZHRaR2RzYzNK
      MVpXRmhlRXRETDBOMmIxZ3phRzVUVG1JMEsyTnJOSFZFYml0dVdrWnFRMnNLU1dFeVdHUlNjVGhq
      UWtwdFVtMUVXWFZhVUZoYVRURlRUa05NYWk5b1VWRkpjMVZTWlU1bGRWTlFRMFZpZFRWcFpWRk9U
      a0pXVkhwWlJVaENXbWxoT0FwVFNWUTBOVFp1UzFacFNVVk9lbTQxVVhSSFdVSnNNV0ZEVEhSSWIy
      OWpjUzl2THpONFFuVXpNRlpTV0hobmNuZzRiVGxJUjJodEt6bFBSbGRwVVdGWkNuTkRSR054YTBG
      b1ptUlRlVmRvUjJKUWRucEVjVE13SzJGUk5WZHBVakkyU1Rkd2NHdG1jRFpoU0RnNU9VNDNVMkZG
      V25oVWFITlJNelpQTlU4NFptMEtSbUpLVUcxUVdWbHlZM0Y0WjBZd1pIUnVZa2h5YTJoRWRtSXJT
      MVE1TXk5WlpUUjNNREkzUW5SS1MycDFlVGRTWTI1eFdFZ3lkMnd6VEhCMVRHSnJkZ3BrTm5aamNr
      bFpPRkJ3ZFVaMVJHRjZPVzU0TXdvOVpHTm5hQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-87872-8
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_set_maxstartups
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure SSH MaxStartups is configured
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)(?i)^\s*{{ "MaxStartups"| regex_escape }}\s+
            state: absent

        - name: Check if /etc/ssh/sshd_config.d exists
          stat:
            path: /etc/ssh/sshd_config.d
          register: _etc_ssh_sshd_config_d_exists

        - name: Check if the parameter MaxStartups is present in /etc/ssh/sshd_config.d
          find:
            paths: /etc/ssh/sshd_config.d
            recurse: 'yes'
            follow: 'no'
            contains: (?i)^\s*{{ "MaxStartups"| regex_escape }}\s+
          register: _etc_ssh_sshd_config_d_has_parameter
          when: _etc_ssh_sshd_config_d_exists.stat.isdir is defined and _etc_ssh_sshd_config_d_exists.stat.isdir

        - name: Remove parameter from files in /etc/ssh/sshd_config.d
          lineinfile:
            path: '{{ item.path }}'
            create: false
            regexp: (?i)(?i)^\s*{{ "MaxStartups"| regex_escape }}\s+
            state: absent
          with_items: '{{ _etc_ssh_sshd_config_d_has_parameter.files }}'
          when: _etc_ssh_sshd_config_d_has_parameter.matched

        - name: Insert correct line to /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
          lineinfile:
            path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
            create: true
            regexp: (?i)(?i)^\s*{{ "MaxStartups"| regex_escape }}\s+
            line: MaxStartups {{ var_sshd_set_maxstartups }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure SSH MaxStartups is configured - set file mode for /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
      ansible.builtin.file:
        path: /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
        mode: '0600'
      when: '"kernel" in ansible_facts.packages'


# Use Only Strong Key Exchange algorithms
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_use_strong_kex,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Use Only Strong Key Exchange algorithms
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sshd_strong_kex: -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-hellman-group-exchange-sha1
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      UXdVVkF2TWpGelVVdE1XVll6V21OTlQwNHZkekJhU1hwVk5Ua0tTekZITVRkRFdFOXhWell5U21O
      WmRuRnJaMDV1WjNWdFZVOHlNMkl5UVdoc1JXbEJOVkI0TmpoeFVrSkJOM2NyVW1KME5VTnBRVE5O
      VlVremRVUTVRd3BVYlhkeGFGUTRiazVJTWpScVFVeEliSE5RWVhCMWQwbENkRVY2UjJ4d01uVkNS
      R05wVFZGR00yeDJkMmdyUlhkVFdUTnZORVpIVDFvdmRXZGpaRm95Q2xsQ0t6SlZaVVY1WkdabGJY
      bGhkbloxVTNwM1QyWTFheXR4VEM5MVpsb3lSRVJ6YjBJek4wMHlRbEpTWWxKeGVYRnJNR1JYVDJs
      aWJtNUVTbFJPVm5rS1pUQnZiMmxHZFcxc01XSkNSekJtUWxwSlFYUkllak42ZVU1bFNUUjRhR0oz
      VkVOa1lqSmFXbkZCZDBWWloxaDJhRWhXVmxSd2VuSlhTV3MzVHpaVU1Rb3JNek5rTkZOSE1FOVFj
      a0pKYWxocllqSTVSemhPVldwdE1HTTVSV05uTjFCSU5FNXdjM0psVnpsd2F5dFliRzB5VUZCelRH
      Sk9WRWMxVFZwamRVUm5Da2RTU0ZGT1VHTlVOVlZ5WjJGeFJXNW1Well6Y0V0cFFXWkdSVVl3YWxa
      VVZrdFBVMlU1Vmpob1pUQndiekpSTURSQ2NYSmtkR0pzVmpReFJ6bHhiRzRLV2xOaFkzRnBPR2RP
      Y25WU0sySmlUVTQxVmt0NFJ6QlpRbFJuYzNoT1NtTklPRFZvWWxGSWQwNHhjbWhvWW1KemNFWk5T
      RWt2U0NzNGJuUmxMMUl2TmdvMGRGTkpkbkowTjNaMlRFdFFZMnRxSzFaUE5ubFphWEE1YkVsVVMy
      UjRiVmdyVDFGR1UxWlBjRFZ0VDJoV2JsaHpiWFJLTkd0a1FqZzJXazVsZVhOSENtRmpObXBpYVRO
      RFlVRnBSWGx4TkRsQ1JWVnFVVGM0ZUVoTWFFOUVZMUpJVnk5cFduZDJVR2xFY25Cc1JVNUdNamRG
      ZVdSYVluaHFNblJaVGtndmRIVUtObEUxYURVeFEyTjFha3M0YTNkc2RuTkZSU3RRWWxOVWJtVXlk
      VGxWTVZka1NUTTVZWFpqYkd4dFEyZGxabVpGU0ZBM1pFZ3lRV3BZU2tOVVZWWmpkZ280Y2xWSFZE
      VnJVRW96ZDJObFYxTk5abkJETmdvOU1WQlBNd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86768-9
    - PCI-DSS-Req-2.3
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.7
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_use_strong_kex
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Use Only Strong Key Exchange algorithms
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)(?i)^\s*KexAlgorithms\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)(?i)^\s*KexAlgorithms\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)(?i)^\s*KexAlgorithms\s+
            line: KexAlgorithms {{ sshd_strong_kex }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'


# Use Only Strong MACs
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sshd_use_strong_macs,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Use Only Strong MACs
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sshd_strong_macs: -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-etm@openssh.com
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rs
      TklUVkF2VWxKek5FNHpNMDFEVmtGdWNFbFpOWE5rY0hOcGJtNEtkVVF5YzFZMlptZGlOVUp3U0Vw
      aVpFVmFibWcxUWs1a2QxaFpXa0pxTmtwMVoySlRRbTlrZFhaVVUzaFBhbU5LZWtjMGVHdFZibEZE
      T1UxU1UyTlRWQXBoVGpOeFdEZHlORVlyUkhCWmFDdFROVGt6SzFGMWR6VlRjRVk1UlcxbE5VOHZa
      azR6ZDNkNE1rMHdPRFZHV0hKSVRUUTFjQ3RaZGtSWlFtbElPRTFxQ2sxNVl6aFRjV2Q0VmtWMk56
      SktORVJWWjFwWE5WTnFPVGhvYkV4WWFFeEJORVZ4VEN0dllXdHpibWN4ZGtaMWJXSndZakpXU2pZ
      M05Xc3ZlRWhQYkRrS1dtTjRlbGhZU1hRNVMxbzFLeTlqWjBaeFZVWXJTR2R6Y25wU2VUUlVWelJz
      VUhkUVQzVkpUMHhuUzBkeFVHTnphVmxHVjFaVmRGWjRaek5KY21WcFF3cG9aWEJqSzJVclpURnRj
      M2xOT1hkc1NISk1SRU13ZVRKaldGRkRMemxXZVUxUU5USjBaREpFZG5kcllYSkxkQ3R6ZW1zM2Jr
      MUVURTFyY1dJNVRrbHZDazFoUjJwblpuVklkSFE1VG0xVVlWSXdTVFJJUm1ablJXNTBiRXB2YVRS
      NlVFMTBZV1ZEUzBGMVVIRXpTVmhhUWxSNmNGTnlRa0Z0VlV3MWVrazJNRUlLYXpGd1RGTktUVEFy
      TDNJeE1EWjFRM1kzU2xWUEsyTkxTM0JpTjBRM1JtNDNUbGxqWTJVNFMxZFFhME40WjNwelFqUmtZ
      VE5vV2taTmVXUXdTMGhyTndwdmR6Vk1NMDUxYlhkTFVIQjVhVVJFYUZrd1R6QnpTVTVFY2prMVRq
      SnFTMVYxVDJKbVdXTnZOMk4zUVRGWlptbHhTRmhMYWxsamNDOU9ZMDFhS3pNNUNuTjZXa2Q0ZW1Z
      clEwMU1lbFpaVlRGWmNEVjZZMmsyVUdGTWJYVm9aRnBDU0M5RGQzbDNWelZDY0dSeGVubFJXRVJw
      YkVvdmFVaGFNSFJGTDNWSFIyc0tTekJES3pnelUyVkxiRkJHWWtoV09FcEhTMnhZYW5KYWEwcGtT
      RkZYY0hseVV6QkpaRTF6VGpSQ1FWRmtTMjlGVUdaWE5YcDFRV0UwVldWSVEzZFhUUXBHV2xCMGVE
      UkViWGxUYkhSek1ETlplbkE0Y0FvOVZ6RlBTd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86769-7
    - DISA-STIG-RHEL-09-255070
    - NIST-800-53-AC-17 (2)
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sshd_use_strong_macs
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Use Only Strong MACs
      block:

        - name: Check for duplicate values
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)(?i)^\s*MACs\s+
            state: absent
          check_mode: true
          changed_when: false
          register: dupes

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)(?i)^\s*MACs\s+
            state: absent
          when: dupes.found is defined and dupes.found > 1

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            regexp: (?i)(?i)^\s*MACs\s+
            line: MACs {{ sshd_strong_macs }}
            state: present
            insertbefore: BOF
            validate: /usr/sbin/sshd -t -f %s
      when: '"kernel" in ansible_facts.packages'


# Ensure Only Users Logged In To Real tty Can Execute Sudo - sudo use_pty
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sudo_add_use_pty,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure Only Users Logged In To Real tty Can Execute Sudo - sudo use_pty
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83538-9
    - PCI-DSS-Req-10.2.5
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sudo_add_use_pty
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFJRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      QmlSVkF2UVRoQlpVMTNVelpNWVhVeU0ydHhXR0ZyWm5KWEwwRUtTelp2TkdWQmN6aDJaalJZWkVW
      UVdXcHVZbXR3Y1dJdldFTm1XRXRzVVV0eE9XRlVLMlpSUkUxQ1kzVlFRWE5FTnk4MlJFSjRVRXhL
      TlRoTFpsRkpjQXA0YlZWMGVUY3JZVTB4YTBaeGJuSTJTV1pLVmpOSVoyNTJSakJaZEhSUVUzaE5i
      RkpoTjNvNUwyMUtSM2h0U0VOTFYzbGtkVkZpUWt4dmJ6SjVhbmhEQ2pBd1dVNVBTblUxUmtGNk5r
      ZGFha1JyY0dZemVuUlpWbGN3WjJsMFFqSldUbmQzU0V3NFJsbFBZa1pNYkVvdmVXSjBkbWczVDNS
      eFFraFRRelJtVm13S1lua3hSeXRSU0dSRFRHOHdhbUZoWkZwS1pEaDNha0pPYUZscFQxZFpOa0Zx
      YkVSVFprMWtZVUpwUlhGemVqVlVURlZEU3pCR01rUk1SVkVyYUd4V1RRcHNNRU51Y2pVM2JIcFFU
      MkpPY1VSMmFXMU5MeXR0ZEU1d09FcGljSFpGVFM5TVIzZzNOVFJRV25oeVMyRktTbTFWVkdsM09E
      TkRWR2t3UjJ4aE1YcEZDakUyVWt4ek9GQlRNMjVpWW5FMVYxVlNjamhJYVU5RFYwaGFNbGhZTlZW
      TlFYWXlaazExYzJKVGRVSnhiR2h3YjFkQk5XNVlkbE5SUzBKVmJEQjNWVVlLYkVOR2NVUjNNbmRE
      TURJeE4zb3JiM1ZCVDFVNFQxZGtZMjB6WlhWaVVuTm5ibEYwUzFkS1RGWkdLMUlyVVVwVWFtczNa
      RzAwYld4NVYzSlplRFZvZWdwRFNsTTNTMjVUTXpKUlJpOXJZVlV6WVhGMFVEaEJSbU52U21sNldW
      SkROVWhXYUZSVVZHRjJaREV2ZG5CUVVHSm5RM2RtTjBFclFpOVNXVEJSTkhGNUNrVmphM1pOV1dw
      MlZtOHljbXhvUjBGc1VXdHRVbXQyV25SMmMybDFTRkZZVldkcmMwaFdlbTFPZUdkcFNIRnZZbWxL
      YTFRNE5WQnZPVWhzU2tkbVNsSUtRMWhTY21Gd09YZDFNR2RpT1RZNGJrVTNRM1V4Y2xCUFJqaGpl
      SFZSVjNWeFQyVldNMXBrTDJRNVVWWk5RVVJPYm5CR1dXbDJRbWMyV21WMU5YUnNid292ZHpadFFr
      aEZTeThyYjJOcFVVSkROMDlNTUFvOWIxaHRkQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure use_pty is enabled in /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        regexp: ^[\s]*Defaults.*\buse_pty\b.*$
        line: Defaults use_pty
        validate: /usr/sbin/visudo -cf %s
      when: '"sudo" in ansible_facts.packages'


# Ensure Sudo Logfile Exists - sudo logfile
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sudo_custom_logfile,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Ensure Sudo Logfile Exists - sudo logfile
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_sudo_logfile: /var/log/sudo.log
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      dHZUVkF2TUVSVFUwSkxOVVIzTW5ZNWNUZEVhM1JXZURsdFRrZ0tUR2NyWkhSR1oxaEdTbU5QTmpK
      V1JubElVWGRwV1hkeUsxaG9iRWRyZFZZNWExbFZOMkZVTldZeUwxb3ZWREJDVldkS2IxY3laSGxO
      YUZoSE4wcFRTd3BwYlU4dmVYUnhLM2gzTTFWaFlUZEpjRlI0V0cxVmFrb3ZlV3BTUlZGWmRuZFBV
      bHBNVmpNdlNWcE5ka2hHZUZWSFJUWmFUMEZwYjJKRVEyMHdkVEpCQ2xCbWMyaDNkR1l3V1ZGbFNX
      eE1RWEF3VVRCaWJGbDBMMDVTV0VrNE0yMW9VVW94TjNKbWJVNU5ZeXRyWkdFMFJYWjZlRVpDWkUw
      MVlsQXJlWHBEYkRnS1FXTndiemxRZGpaS2VXUkVhWEpRTmtoSU1EbHVUMXBYUlZKa2VIWjZhakJq
      Wm5KaFZHdGtPRWxGY1dGV1psUkRlVVV3WkRoMkx5OWxjUzlIYzBoMlN3cGlMelJTTkV4RVRFMUpX
      Vk5aYm5WcFQySXlZbE00V1hCM1VIZEhRWGxQTm5wVlZUZENSR0U0WmxOd1JsTmlZV2Q2UlRkUlVY
      a3ZVMVo2Y0d4MVRVUXlDbUZhVEVoNmNqVlVlRXQyWWpCV1NXSjRhSFZYS3pabE1HVlNUMWRHY1RR
      MldHRXJWbXhqTjBwWU5GRkhka1YzVDJvNFIzUjVUUzlEYkdWWlUwTllRMndLZEVwVFRHSmlhamhR
      YWxKYU5WUnBZbFIxU3poTmEwYzBZVWRQUTBoSFZ6Qk1VV05ZYlZJdlZ6Qmxlamd6VFZWclNWQlNZ
      V1JTS3pCYUwyOXBSM05MY0FwUVNUSTVlbGhZYms0NGEyZE1XalJsVmxadGN6QlVUM05YUWpsYVJF
      TndVaXRIVlZaUFYyczVVSEYwUWpoc1JXNW9iVFZLV1U5aWFIWTFhM1pLUkVoaENuaDFZV1oyYTNZ
      NE9VZHhUMGhWYzFoNFF6WkdRVkZWY0d0M05qVjRjazVHVERGWlYyNUhkMVpqZWxkamEzQlRVa3B2
      VG5ZME9FUlplVXRHYzFWSlMwY0tSWGQ2YVZKM2JUWm1iRkpRYmt0RGVWUmpPVzl2VlRoM1pYUk1V
      ekF6WkVkTVNVeFJNMkZ6Y0N0NWF6ZHdORVJrV25BeFNrdFRPSEJOT1ZWS2VHTkJSQXBZT1hoT1Qy
      dzNZa1p4V0VveVFuaG1ibXM0UkFvOVdHVmtPUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-83527-2
    - PCI-DSS-Req-10.2.5
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - low_severity
    - no_reboot_needed
    - restrict_strategy
    - sudo_custom_logfile
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Ensure logfile is enabled with the appropriate value in /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        regexp: ^[\s]*Defaults\s(.*)\blogfile=[-]?.+\b(.*)$
        line: Defaults \1logfile={{ var_sudo_logfile }}\2
        validate: /usr/sbin/visudo -cf %s
        backrefs: true
      register: edit_sudoers_logfile_option
      when: '"sudo" in ansible_facts.packages'

    - name: Enable logfile option with appropriate value in /etc/sudoers
      lineinfile:
        path: /etc/sudoers
        line: Defaults logfile={{ var_sudo_logfile }}
        validate: /usr/sbin/visudo -cf %s
      when:
        - '"sudo" in ansible_facts.packages'
        - edit_sudoers_logfile_option is defined and not edit_sudoers_logfile_option.changed


# Require Re-Authentication When Using the sudo Command
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sudo_require_reauthentication,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Require Re-Authentication When Using the sudo Command
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_sudo_timestamp_timeout: '5'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      QkJORkZCU2k5b01sZ3lORlo1VVZJelVYQjFSRWhaYVVkeE5HRUtTMHBWVkRGRU5YVjRPSGs0ZFhG
      c2ExVTNSRlU1TVdWNE5uSTVXak42TTFWSGF6ZDVNV054UjBSMWFXWjBNa0p2UlVONmJsTTJSWEZ5
      ZEdVd2RrODVNUXBoUXpSa2FUSjFiRXhKVjJ0b04wcElhRmR1V214UFFqbEdRMFpTWjJ4aGQzbEtP
      V05RV0daNVQyeDFWalZpZWpsWUwwbGlOekp0ZGxORlZsbEpNMlpUQ2tobE1ITTFXV05SV1Zwdksw
      NWFVMkprUm1kWFlXWjBkVVJ3WlVrMlIxZDNVbWN4UW5SUU9ETk9hbEphTUhrclJYRk1Xbmg1WjJS
      NFZUQmtjRlJPWVVrS1VpOXJTa1JhVm04MVlscDNSMGRIV1ZKbk1sQnJNbWQ1ZFZscFNtOXVZWEZG
      YVRKRFpXcFVlSE50U1hKbVJHWkpWWEJaUjFCNGNGRnlibEpLZG5CeFJBcHZSemh5V1hSamRqTkRa
      blkxWjJkTFRsSkxURVpqYnprclFYSXlZbUZOYnpKbldtZzJaMjVqWjNWR2FFa3djRWd2ZFRsdWNp
      OUZXSEJFVXpWU2FYbFZDbFpsYW10TGJVTnJXVlZHU21semExQlZRMFlyUkZwRGRtaHdiSGxuV25s
      blVYVTFTMlJpVVVkV1RVUlRkVk5JTTJ3d1R6aDVSbVpQT1hBeGRXUXpWbkFLZEV0elNVcGlORTVr
      UTBSeFZXMUJXbXBNWVZrMVVub3dORmhQVVhGcWJ6ZEdTRkZFU1hWUVVUSXhlQ3RJVEVOVEx6ZDRR
      emxZZHpsWUwybFZSMmd5ZHdwRVkzbzFNMkpFZWxsak1GaFJVMlZhU1d0TVNtczNiVGhMVFhsaVZq
      bENVelJwYzJOalVXOTRlVlZTT0M5blZWbzVTMXAzV210S1FraDBlVm81U21kUENqUmFORGhDTkda
      cGJVMTVXRmROVmtKWllteFVNM1EyYlhRM1RXcHdlREppTmxWSlFXZFFVMWg2VVd0Q1VrWnlkVFpC
      YkhoMFIzVlVSVkZxV2tsM2Ixa0tZblF2U0dVMWNVSTViemt6WmpKSE9WRTFPR05zZG1oTGFYQTVN
      a3hNTlVSRlN6UTFTMGxVUkdsTVRYZE1VMjlxVnpKbFowUnVhSFZSWmsxd1kwMVpTQXBYWmxjd2NV
      YzJlalZwTldwbVlUZDNkVkJLZUFvOWRVSktLd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-90029-0
    - DISA-STIG-RHEL-09-432015
    - NIST-800-53-IA-11
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - sudo_require_reauthentication
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Require Re-Authentication When Using the sudo Command - Find /etc/sudoers.d/* files containing 'Defaults timestamp_timeout'
      ansible.builtin.find:
        path: /etc/sudoers.d
        patterns: '*'
        contains: ^[\s]*Defaults\s.*\btimestamp_timeout[\s]*=.*
      register: sudoers_d_defaults_timestamp_timeout
      when: '"sudo" in ansible_facts.packages'

    - name: Require Re-Authentication When Using the sudo Command - Remove 'Defaults timestamp_timeout' from /etc/sudoers.d/* files
      ansible.builtin.lineinfile:
        path: '{{ item.path }}'
        regexp: ^[\s]*Defaults\s.*\btimestamp_timeout[\s]*=.*
        state: absent
      with_items: '{{ sudoers_d_defaults_timestamp_timeout.files }}'
      when: '"sudo" in ansible_facts.packages'

    - name: Require Re-Authentication When Using the sudo Command - Ensure timestamp_timeout has the appropriate value in /etc/sudoers
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        regexp: ^[\s]*Defaults\s(.*)\btimestamp_timeout[\s]*=[\s]*[-]?\w+\b(.*)$
        line: Defaults \1timestamp_timeout={{ var_sudo_timestamp_timeout }}\2
        validate: /usr/sbin/visudo -cf %s
        backrefs: true
      register: edit_sudoers_timestamp_timeout_option
      when: '"sudo" in ansible_facts.packages'

    - name: Require Re-Authentication When Using the sudo Command - Enable timestamp_timeout option with correct value in /etc/sudoers
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        line: Defaults timestamp_timeout={{ var_sudo_timestamp_timeout }}
        validate: /usr/sbin/visudo -cf %s
      when:
        - '"sudo" in ansible_facts.packages'
        - |
          edit_sudoers_timestamp_timeout_option is defined and not edit_sudoers_timestamp_timeout_option.changed

    - name: Require Re-Authentication When Using the sudo Command - Remove timestamp_timeout wrong values in /etc/sudoers
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        regexp: ^[\s]*Defaults\s.*\btimestamp_timeout[\s]*=[\s]*(?!{{ var_sudo_timestamp_timeout }}\b)[-]?\w+\b.*$
        state: absent
        validate: /usr/sbin/visudo -cf %s
      when: '"sudo" in ansible_facts.packages'


# Enable Randomized Layout of Virtual Address Space
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_kernel_randomize_va_space,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Randomized Layout of Virtual Address Space
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83971-2
    - DISA-STIG-RHEL-09-213070
    - NIST-800-171-3.1.7
    - NIST-800-53-CM-6(a)
    - NIST-800-53-SC-30
    - NIST-800-53-SC-30(2)
    - PCI-DSS-Req-2.2.1
    - PCI-DSSv4-3.3
    - PCI-DSSv4-3.3.1
    - PCI-DSSv4-3.3.1.1
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_kernel_randomize_va_space
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      bDVkMUZCU1cxTFlYUlFZbGRpVDBSR1ZXUTVNR1pLYkZsWlYyb0tWbUpwTTFsblZGaE5hRmROU0Zk
      VlV6a3djVlpYTkhFelkwSXJUelppWTFCdFoySmxRVEpIZVVaUWFsSjZjemRaTDJNeE1VNDJTbW92
      UnpCemNIVXJUUXBvTkdsNVNGUkhVMmhaVTFWUGNtSjJOVEJRYm5sUVMwRkZOVkJUWm5WNE1IbEtX
      bVUyZGk5alUyUk5NVkJsWVdscU4wYzVXVkY0Ym1GR05HbGhjVzR4Q2t3dlJucFpkbWc0WVhNMFNq
      QTVNMjFoYWpKQlYyMUlTbWxKZGs5ak9VWXlhMWhSTkRZelIweHZhMVpDTnpKWE4xcG9SbWRMWVVG
      bVRqVjFlREppUVdzS1VUaGlUazFyY1c1T05Xc3hUVFpEU2twTFoyTXZaak41ZFRWUGFHRjZRamxo
      ZFVGalJERmpjWE5YTkZWbFRVOTJhelZJYURkaWNuZ3hNemxoV1VKVFdncGhVMlJDYjNBNVQwZHhT
      VmhPUVhKdFNqWndPWEF5UTJWUGJGQjNiVVY1ZFhSM00zaFRaVXhLTW1SS1RrVmpWMnBuY1RsWVJX
      NVVjUzgzU2trNGRuZEtDak13ZEVnclJHcGtkR0psUmtKdGJYRkNRbk50VG10NmRHUlFZM1Z6Y1hC
      bllrZFlWRFJ1VUVSYWVtbFZSVVJyT0RJMlNISjBaRkZVZDBSNGMzbG1aWFlLU3pSaVMyVnBaRmQx
      YjNKdFNHVTNiM1F5UzFGaVpIUlNOWFl6ZVhwaVIyVXZZMmxOZDBaWWIwNUdhVU5RTVdFMU4wZG9V
      M2QwYjNwM1R6SmtkelpMY3dvM2QydHVOREZ3ZVZvMmREVmxielkzWTJkMk56TTNTM0JQTWpkQ0wz
      QlBUVnAzUzJacmVrWlRUblkzUzNCc2VGcFpWMjlpZWxWdVFWRm1kMEoyYW5aVkNqZHpNQzl5YmpK
      T2RFOUtXRFYxT1VKT1dtRmtXVmRWYkd0bFdFOUliRlZTY2xOM2NFNXBVV2hTYTBSeVEzcHZkVXR6
      YVhobFJXOHJWemhRSzFSeWFrUUtNalZTWWxjM1ZXVlVhWGN5V0VJNU0wa3lhWFp2VURnMFRqUXZN
      R3c1UWpocWJUbFZPRE4zVGpCVFRuWm9kRFpFUTJwYVowRnFNeTlaYjJaNVZqVlZVUXAwWm5od2FY
      SlhhbFoxTTNRdk1XSTVRbWt4WVFvOWRGWTRZUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*kernel.randomize_va_space.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of kernel.randomize_va_space from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*kernel.randomize_va_space
        replace: '#kernel.randomize_va_space'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl kernel.randomize_va_space is set to 2
      sysctl:
        name: kernel.randomize_va_space
        value: '2'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'


# Restrict usage of ptrace to descendant processes
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_kernel_yama_ptrace_scope,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Restrict usage of ptrace to descendant processes
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83965-4
    - DISA-STIG-RHEL-09-213080
    - NIST-800-53-SC-7(10)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_kernel_yama_ptrace_scope
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      MU5iMUF2YWpOQk9VdG5PRWdyZVRoWFZqSlJNRWQ2VW1KNWFtWUtUeTgzWldkd2FVcHRTV1JGTkhk
      TFRuSXlSa2hIVldwaGFHOWxNbmhXV0hORU5IUXpZazExVURaV01rWkZTVkJKV2pKelFXUm1XRGhz
      WjFGMWVFZFJkZ3BOYkU1UE0xTnpha1IxZFZGUlZHMWhNM2hsUlN0UFZXdGlZMVZPVTNOa1FsRXpj
      SFJVZWxOclJTOWpPVkpWUkhOS2JrazNOVkY0TXl0Q1lpdG9SMXBEQ2psU1dVeDJVRWdyWTNSTFpX
      ZzVVazFxWkc1WU5USk9Nakp5TXpCcmNVMXVkak5XU2xobk1WWjZUa3QxVUZwRlJFTjZkbTVoZFV0
      SWNsZHFhMVJPVDFVS2RWaFVha2M1ZVcxRk1FUlVZMFJEVlZWeU4wZHFVV0ZOWW5nNE5tOU5jbTlR
      TDJKTFFXRjVhRGd2YTBreFEwdG1LMUZaSzNaWFJGaHlkVkI2WkZSdWJBbzBTMGx4ZEVKWmR6QnRS
      RnBpY21KclkydEpaWGhUY0RKSGJsUnJkSGRNY1Zab2FYUXdRMVo1VnpGMGJtZFVialkxTjNWSFNV
      RXdaRkU1TlhkREswcEtDbG95U1VvNGNHY3hXbmRuZWpGWlRFNWtSMlJ4VVRBemFESkdNMU5VV21k
      MloyZG1abk01YTNoWFFrUldURmRCWW1Kd1R6TjZhM1ZHTkZaR2JWVXhUMmdLVUZOR05HUTViRmhx
      Y21kRFUzVlpWRlpIZG5ZMU1sUlBiWFp0Y0hkalRtcDFlR0o0WTNseGNVTjBORTVWYlhvM1QxaEZh
      V0V3Y1hCTlZXRkphQzl3YUFwTlkyVnNSa0l3VFdaaGRYcDROVkZ1U2xZMlIyZFZkMUZwUlZoelQy
      UkJXVWhzU1daWkwwZFJiRTl4Um5SYVJITnNaMVIwUkRscFMxbENRM1psZEhoVkNqTjRNMjFRY1ZK
      UFpuVlhXRGhZVEhSTlJqTXZaR2RRWVd0UWJWcFhXa3RtYW1JeUx6aEpObVpKVG5aTVNVMDJlRzl4
      ZW1KWlpVTmpOM2hsY25WbmJsUUtVVEl3WVhwUFNHUjVia1p4WkRGS2VGQnZhRUZXTVdabVNWVnZi
      bkJGYWxoUFFYQkphblV3UXpWdGVEUjVkMVo0VkZwc1oyOWhibTlxYTBSNFQwZFNZd3BrZVhWdVMy
      OXRVWEJuZDNGdWRXOHlZbmR6U1FvOU9GVnJNQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*kernel.yama.ptrace_scope.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of kernel.yama.ptrace_scope from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*kernel.yama.ptrace_scope
        replace: '#kernel.yama.ptrace_scope'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl kernel.yama.ptrace_scope is set to 1
      sysctl:
        name: kernel.yama.ptrace_scope
        value: '1'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'


# Disable Kernel Parameter for Accepting ICMP Redirects for All Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_accept_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Accepting ICMP Redirects for All IPv4 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv4_conf_all_accept_redirects_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFNRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      bHZUVkF2UVdwTk9EVXdSVTB2ZDNGNVRtSkJTMWhxYldkV1F6Z0tkemx5VW14WmRUTmFZME5SUjNG
      a2JsSnZTemg2UVdSVGVYWTJWR1pNSzBvMGFXcHlSRGQ2TmxveFlWQjVUWGd2VDFsNlUwa3dUSGw2
      UzBzMWVqTnJXZ3BsYjJWdFpXUnJNbXBvVXpoSGVpOHJhREVyVlVaTFZqZFJRVTFFVVdNM1FWZ3lS
      VnAyUTNGUlJtVllTWEppTUdaSWMzaHRLMGxSVEZOS1ZEbHRObk54Q25kMVdYUllaVGxHTjFsMlVs
      TkVkUzlsWVdwWVFuUnZUa1ZRVkhSNmNFZGhaa1Z3VHpCRE1rMTBWVkpNVUhsU2MwWklLM3BKWXps
      aVFYWjBhQzl1TW5FS1pHZFVTMFF6VFZJeVJVeE1ZV2RDYjB0VGVXTlhSVmhrWkZSaFZUWnpNVXcz
      WTNoMGJHTXJhblpRTmxGQlN5czFSRkZCTjBreGRrUm9hVXBtWWxCd1RRcFpOekV3VGtsVk5tOUlh
      RXBzWVdOR1puTXpkVE5XWkdZM1N6TnJhVVpsYW1oWldETTFVbFppVjBsNVVtUTVhMUpKZUd0aVNs
      Y3laRzUxV1c1T2JEZFVDbFFyUnk5WE9FODFlREpWTDBGTVZGcFRMMlpEYlhGUGJtVndielZuU25S
      QmVGaEhPRm92VkhOMVFUSlJOekZhVUZBellrOVhjME5xVFc5SFRtVmxNRTBLYVhwT1FVSnNjVWR0
      YVVZNGQyRTNNVmQwTDBSRFJHcDZVMnAxVlVnNWRrMW5VeXRsT0daWVJVazFVMmhxZEhBMVRXRkpO
      Mmw2ZUUxUFFqUmxWRVl4VGdwV1RXUklVR0ZKV2xwMU5YbHpUREVyYTFkMmFVbHRWemhvU2xGVWFH
      bHpVMnhRYUcxSmJrbFZZbEJKVG5VM2VISm9NVXd2VDNCa2VEbFZRVEEwUTI4eUNqZGljR2RyV2to
      emNUZFRja0oxWjNsdWNrWlBjelZOV1dRMlYzTkVSREJzVEVad2RpOXJaSFpRWjBGWGIwUk5NMk0y
      YlZVM2RUTXlUWEZVVWtKREx6QUtRbnA0ZEhSUGIwbHRMelprWkRscGMxRkxRbnA2VlVGcE5UZE5L
      Mjk1Yldnck5FeFBRbU5sWjNZMVozRjNaRTU0V1hRMldsbEZXVWs1YkhOcFIxaDZNZ3BoTlRWR1NF
      czBOWFZSZWtzMWEyUkJRVzVTUmdvOWJqbFlaUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84011-6
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-09-253015
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-7(a)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_all_accept_redirects
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.accept_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.conf.all.accept_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.all.accept_redirects
        replace: '#net.ipv4.conf.all.accept_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.all.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv4 Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_accept_source_route,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv4 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv4_conf_all_accept_source_route_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      bHBNRkF2TW5Wd05rVnVOVEZPVjFGeGRYcDRNMnN3VnpRdmNsTUtSVGMzYldKVlFVcFVOV1ZzVGpC
      M0sxQTFTekYwTVVnM1UycDJNU3RUV1U1cloyeDFMMmRRYlRsellraDVjMUpYUmxremMzWXJkSEZu
      YjBrclFUTXhhUXBrTXpka2EwOUlNbVZ3YjFsaFlWaHJSVlkyY1ZkR2VITkJjakJrY1dKdmNrUnJR
      VTlGYWxSQmFHVldRM2R4U0U5dWRrdFpXU3M0TXpob1JVRkNiUzlrQ2k5WE5GRm5aRWRhTDFsM2VE
      RXpjM2h3Ym05ek0yUXpWVWwxY0RCNlZqVlFPVFpDU1hWWVJ5OTJOWE5xWlZkNFR6aHBNVVkyY1ho
      WFJrVTFSM2N4Wlc4S2VXbHBOeXRGUVhkR2RWRk1VRkpJUWpsaE9XOTFNMUIwVG5KMGFXSXhlR3Bh
      ZW5CMGFYZEhWblF5YlVGQ1RsSnhPVUkzYlVwS1JUUm5OM0phUVZSNVl3cENiMWhuWm5GQ1NrNWtj
      VVJaZFhwcFdXSmxSRXBCY1VJNE5DOHlNRkZ5VFdwUFYyUk5lVFpEVW5weVNrRnJXV0kzWm5Cd1ZF
      aFRNbU5TZG1sVUwwNHpDalphWlVKd01IaEpTbmRZZVdNeVYwWjNaRWxDZFRsQk5taFZTVFJDV0hS
      TVRXbDNjbW93TjFGdVREUXhlSGs1VldkelVHNTZiU3RpTXpSbVdXOTNlSGtLUjJGNFUxVklWek5R
      VGpSNmRuUjBaRTVFUTFOc2NHNTJVak5RZHpOTVVFVTJkalpzTmsxME9GcFZNME14ZVdoYU5WUlhV
      UzlaVVdaeFNUUTNOVWhIWXdwQmEySlVlbVphVjFCaE4xQndXRTl2ZDA1RWRYVkNjamdyYlRod1du
      ZEZZbmxUYkc4d2N6TnROV3RQYjNaV1VFMXZMM1JQVUZJeFdGSm9WazFvV1VFMkNrODFjRGhYVFZW
      RGFFSnhiMU51WWxSa1JGbzFObmhhVUV4blpXNXZZemRXUW1OUFNVRjRWV3Q0YTJWaE9VSXZUVXBh
      U0daS1RtdGhObTgxY0RkWU1XMEthSGhUTWpVMldVVm1ZVU40YzI5a1pEWnZNREk1V0ZwSE1UWkth
      RnBaZG5BMlRWVmxZV2xwT1hsU1UwVkZSMmsxWmtsR1lsZ3pSWHBxUTJaNWIwaG5hZ3BaUlc5UFJV
      NVJWa05aTjA5S2JXWk5hMVpTVUFvOU9ETTVNQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84001-7
    - DISA-STIG-RHEL-09-253020
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7(a)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_all_accept_source_route
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.accept_source_route.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.conf.all.accept_source_route from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.all.accept_source_route
        replace: '#net.ipv4.conf.all.accept_source_route'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.all.accept_source_route
        value: '{{ sysctl_net_ipv4_conf_all_accept_source_route_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Enable Kernel Parameter to Log Martian Packets on all IPv4 Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_log_martians,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Kernel Parameter to Log Martian Packets on all IPv4 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv4_conf_all_log_martians_value: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      UTNaMUZCUzBwTWNGVmljbkZSTlVGRVVsQTFkVnBNTWt4RUwyMEtUa05rWlRsd1l6VmlVR0ZJVG5C
      dVFtTnlNRUZ3UW1KS1ZtZFlPRGxYU0dSNVMyNTROa1JTUTNGS09YVkpSVW96UVdWU1pFMXRNaXN4
      VDJWQmIwVkxkd296UmxoQlpIUk1kV0ZMVkVFd2Ftc3lTRmRpVTNJMVdXYzRaVTlJWTBoNGVtaDNh
      VU0zVUhkUmJrbzNjVVpoVkhWclRWWk1hRzVUZUZod2JreFBVMW94Q2sxcVQydzNiMWcwVmxjMk9V
      ZENRVTFGY0c1VWJ6Sm9VMWxPVERSSlJTOUdURWhVU2trdlNtVlpPRTg0UzNOUkwwTkNjSFI0WlU5
      cWFXaGFlRUZqZFU4S2VVdFhia1Z6WjFNd01ETldURmhHY3pWNWFtVlRZV1pzTXpZd1lsRjJRVmQw
      V1ZKSlZuRmxhVEEzWjBRcmIzUk5jVFozVTNSWlMwaDVTMFZhYUcxbmVRcFdSa3hTYldjeVJGRjRU
      bEpPZEU5NVkwaDJiSFpwVFV0aE9ETkpWaXN2UjNSRmIxcHBjSGcyUWs1VVNFbEZVakpYWldoRVpF
      c3JaMnN2UmtOTlVFdHNDbGhCU210eGNrbzRUbXgzYmxGM2JqUnBheXRJTW5SdFRrWk9TV1p2V0Za
      TFUyRlFPV0psTTFOS1RXRm5iMGw2ZDA5RU1HWkZVbnBuVEU1T2JYWmtjV3dLTUhWek9VZHNNVmxa
      UWpkeEx6bHRNRzV3TmtWelNHNVJaVVZXTjFGeU9HVlVVRmhwY1V0V2NHSTBaMGxLVW1wdlQxaFhl
      R1ZrYmxoRldrdHhTazFRVWdvelJGRlBhbkI1YUZkbVltY3dZVWRuZVRSYWFIZGxWVUZuT0ZwRFZs
      RXZVWHBqYzBGQmNqaDRaazlxZERBelVHOVZjekJGT1RKS2J6WkxNbTFhTTJSM0NqTlJMMVZoYWtS
      TVYwRkRkMUpKY0N0c1drMUlkVUZZWm14MGRUZFpTbWxsZUZaQlpHbEZWM0psWlZCbllVSkNMMmw2
      V0VwT05IZG1Sek13WTB0TWJ6TUtUMUIzTmxaMGVITlNRVklyUkZwMk4wNW5kV2MzUlZZM1QzUTFP
      UzlRT1RoNGEwZzVkWGs0ZEhCV2REZHpaMEZ5TjJrcldFWk1TRGxWVW1sQ01FbHFiQXBPZW1aRFUx
      TnhSM3BtUVZjeGNIZEhWR0kxZUFvOWRIUlZjd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84000-9
    - DISA-STIG-RHEL-09-253025
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5(3)(a)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - sysctl_net_ipv4_conf_all_log_martians
    - unknown_severity
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.log_martians.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.conf.all.log_martians from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.all.log_martians
        replace: '#net.ipv4.conf.all.log_martians'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.conf.all.log_martians is set
      sysctl:
        name: net.ipv4.conf.all.log_martians
        value: '{{ sysctl_net_ipv4_conf_all_log_martians_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_rp_filter,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv4_conf_all_rp_filter_value: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      d3lXVkF2TVZKdFdHUnFLMlo2ZW1KUVEzQnNhV1JGYVdaR1V6VUtaemhIWm1vd1VEUnVNR1EyVEZK
      S0wyVk9WVWRGYzI4NWJtNUljbTlGT0c5clRHUlZWRVZRVkZkV1FrbHBWRzluYkRsVFYwbHpNV05t
      VEZGWVYwNXZZUW93TW5aNE9FSjFZMlJ2UlU1dE4wMVJibFZCV1RsWmQxWk9iRXRHY1V0VGRGVnlO
      MDFVT1ZoNmFIQjZjMjVKWVhkMlNEVXhlVTl4VURNd2FVbFNaVlZ6Q2xsMlpVNW9WREpzSzB3MlVH
      aEtlRTk1TkdZNGVsRTNhUzl0UTJaeWFXSlpVM1JaWTFKM2F6Tm5iQ3N6UjNGdlRUZDBiMGhxVWtw
      eFpreHhaMFI0TTNZS1ZXVTRSM0YxYTNGYWRHa3liV3BFTVZoeU1uYzBNa3g2TnpsQlJVaFlkemcx
      ZFhCd2FXaFFla3hXU1VOMVJWcERlVVJpVmpOdWVsbEphWGt3TTFwUFJRcG5Za2RTYW0xUVlXVnZi
      blJ3TlNzeU5VTXdVVTUwUzI1dmVsTTNUVEJQYlVkRkwxQldkVEZrU1dwS05tRjFZalpUTjNWNlRq
      bDFhRnBQUzJSNFJIQlJDbTVVUTJoaVdWWlVPRWR1TkN0UlRYbDRabXh6WlVOc05sUXlMMmxMTmpo
      U1UzUjZObXhHTWpOS2RsUjJVMDh6VG5CcU9GSk5RemczU0haYWRGVmhjSGdLVXpabVIzQmtjMHd5
      ZVhsS04xVlphME55UXk5REt6ZFhWRlpaSzJOV05Xa3JhVzlRZWpBeVlWbEZlWEUzWTB0TlZqRlVR
      bkpEUVVKTmRHUndUVE5tVmdwQ2NGcFZkM3BxVFhwcmRqUklSbmxyTUdoUmJFRm9PRkZ4S3psM1ZU
      bENRVk5DVVZWRVpUUXhRVWR4UmpkTmRVWnVaRlJKU1RBMGFucDBTR2hDTmxGRUNrd3dTRFo2VEdW
      UmVWQk1jVE5PZGtRemFDc3pSVWhLYlVsV1lrbFVUMHhRVUZkT1ZtWmhla0ZWUkdjek1XcE1jaTls
      ZUhkc1drRnhjWE4wU2prd01FUUtNSEZ6YXpKVFptb3pOR1p5V2tKUFRGcDNWV2h3TVhjM0szSTFk
      MlJJY3pOb01FMXlZbGxSZUVOSGIzRk9XWHAzZEdFNU1IbEVVamxQVlhFd1kyTlhTZ28yZDI5aWFI
      UkxXR3BsZVRkRlpsQndSSG80ZHdvOU1EWk5VQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84008-2
    - DISA-STIG-RHEL-09-253035
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-7(a)
    - PCI-DSS-Req-1.4.3
    - PCI-DSSv4-1.4
    - PCI-DSSv4-1.4.3
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_all_rp_filter
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.rp_filter.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.conf.all.rp_filter from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.all.rp_filter
        replace: '#net.ipv4.conf.all.rp_filter'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.conf.all.rp_filter is set
      sysctl:
        name: net.ipv4.conf.all.rp_filter
        value: '{{ sysctl_net_ipv4_conf_all_rp_filter_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Accepting Secure Redirects for All Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_secure_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Accepting Secure ICMP Redirects on all IPv4 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv4_conf_all_secure_redirects_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFRRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      cHNNRkF2TW5aS1dFODJkSEZ6YXpZd1ZrSkJZMlF6VFdseFEyVUtlVEF5Wldaak9EVkpWVTB6YjNC
      bmFVWlFaa0UyZVcxbVZGaHVLMWxsYTJ4V1NYYzFiMDV4ZUU1d0wySkVSems0TURGd1ZuRXZiRGty
      Y1c1R2MzUllRd3AwWTNsT1pVTkZORzVIVjJRckwwcDJla3QxV0VkMGQzQmlkVTFhV1hKUk9EUjZT
      VVpKU201d2NreExOelZsWms1dk9WaHRMMlZJTmtJeFlVdHVVMEozQ2t0VFdtRkRUVzVOUTBscWVH
      dFZZVnA1YWpCd2IwdDZjRzVsZDJoTVZGbzBhVkFyV0RoQ1EzRk1XSFl6YkV0MlkxaDVaRWN6U1Vz
      MVltcG9SMVF2T1c0S1NEaFFWVGxtU0ZKQ2RIVlFUVk5NY0VKdU0xVlFaRGh0VkdSQlFUbExRWGRF
      VkRoRlRrdDZlVU5hYW5vMGFteEdiMWhXVjFwWVYwRkRZMnBRYUVsQ1pRb3habU5NYVZsQ1oyeEtk
      SGhuYkhGbWFraGxjbmxYTUZjNGRHNVVTblJuVEVoc0syWmpUQ3MyU0U5S1RYcHVOVGRNZDNsTlFW
      WnBSM3BKVkhGUmFEQnVDa2xYUlhBemFGRlRPR3h4TWpOWGFXUlNkVXh3V1VGMVMzVkJTMVpZY214
      WE4waHlhR040TlhaWlowbHBabmM1VW5kblJqQlVSbWwyY1dwclFVZEViRVVLU2pRMFdubHpObEZQ
      YWpSWllpOTJXVXc0ZWxOelVtSlFTamxNWmxsVWNWZHBXSE5oTTJKS01uSjRZamh2YlhBNFlubHVO
      MnQ1YTI1Q2FuWjBOMEZKZUFwbWJrSjNPRmN4T0d4S1NqbGlkM1pXYmtzNFlpdDFNVmRLUW5aSlJV
      TllSRUZhZFcwckx6TlVRVU5XYjAxcVRXTjRhVXh6YUVjd1VsVk5ialprUTA1WUNuTnViRk5YY25k
      cE5XSXZUVEJpS3pGcFRrSkxhelp0V2xCTldFY3pOMDAzZHpOVmNXNWxkMUpYV1VRMVUzbDZabGh5
      Y1c5RmMxVTJlazVvZURRekx6Z0tTVEY1ZFM4d1JtbzFhVkoyWWs1S1EyMXpPVmxNTnpWQ1VsRndj
      bkJsU0VKeVdYTk9kbWRFTXpKNFlUazRWSFJKUVdjMFdFdFBlVFZwVTJsUWRYYzVad3BPTmxNeGFE
      QTVkR2RyYkZFMGQwWkNOMHBIU2dvOVYyUlBWd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84016-5
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-7(a)
    - PCI-DSS-Req-1.4.3
    - PCI-DSSv4-1.4
    - PCI-DSSv4-1.4.3
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_all_secure_redirects
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.secure_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.conf.all.secure_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.all.secure_redirects
        replace: '#net.ipv4.conf.all.secure_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.all.secure_redirects
        value: '{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Sending ICMP Redirects for All Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_all_send_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83997-7
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-09-253065
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7(a)
    - PCI-DSSv4-1.4
    - PCI-DSSv4-1.4.5
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_all_send_redirects
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      VmhSVkF2YW1VNU0zRnNVMnBCZFUwMFRsbEpZVFJSZDNCbGVqTUtVbGhtVVhwTFEzVlhZVzFuUVVW
      RFYxTmxiVmt6V2xKNlVsbE1VemswV1VzMmVHNUxRMGhsV21aak1uZENlR0ZyUTNSVmJITmFOalEy
      V1hvclltUkhhd293VFhWMGMwaG9XalJJVkV0d1FsRnZlR3hoU1RRMmEzZHZablJUY2pGdFpURlpi
      V3R5ZFVrck5VdFFWVWtyYTJ0SVQwZzBZWEZrUldFMk1YZDZLM3BoQ21ZMVJXNXhXVzR4Um10cU5s
      cDJZV3hvYVZwTE5tczRVVGhKSzBOdE5rZDFhRXhxUzFGbVFuVkVUa2h5U2xrMldVTk1WSE5pZDB0
      YWIzZEVVMHRXTkNzS2VVdHRRVzlRVFU1bU55OUplbTVLUkhSSVZtd3pOWEZ1U2todVRVTktNMFpD
      VVZSbGJUVldWMVZKYUd0MWRDOU5NMlJMUjFCS1JEQklkVUUyZUVkcWRBcDNTQ3RsYjI4eWRuY3dL
      emRXUkdoTGJGRlVZV3RHUnpWbU5GTnFiM0UwTnpWaGVWZEJRME5qVkdkbmJqVlpVMUZ4YmxWS05E
      RTFSVUZXWVV0bVVHY3lDbkZNWWtoSVIzRjZiVUVyU1N0cFYycGlVbWN4ZVRkWFdVUklORGhJU1V0
      TFJWWlNWVmhVTkV0WE1FNVBNa0UxVFZVNVVVRjJkVFp4WWtSR1lXNW1ha2NLSzJzcloyRm9PVkFy
      UWxoemNrZHpaRWRYWVc0d2RGTm1ZMlk1WTBGS2JrRjZabU14VEVaNE0yWTFTbEl4ZEhCaVVYaE5T
      RTVFU1RCdlNsTjZWM2xJT1FwNU5YUnlVVmxpVUdJMk9VaHRNRE1yVUZSRmNrY3lRVnB3VW1WR1ls
      RnJOMGM1WlRsSVN6RXdOM0pUTUVsWk0ybFBPV1JKUW1KNFNXNDRSalU1Wkc1bUNqa3ZlRzFXYVdj
      clNuZENjRlJKZFhGUFEwTTVRWFJ2Um5kTlIzcEZibTlMUlc1blNYZEdSbG93VUZCV1VtSjFkRmh6
      ZGtOdU1XdFVlbFppVEUwM1MxRUtXR2x0Y1VwblkxTktTWE5HWkdRelZETldNRVZqYUhSd01uZFNN
      RmxVVmxaMVUwMUdlamRqU1hCQlEyNTBSMVpFVTNwVGVpczNRVXBYYUVwUVpWQXdlQXBXYWpkSFJU
      aEJZUzlYVUhSTlNWbzNUV1pVV1FvOWR6azVOd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.all.send_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.conf.all.send_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.all.send_redirects
        replace: '#net.ipv4.conf.all.send_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: '0'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'


# Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv4 Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_accept_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv4 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv4_conf_default_accept_redirects_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      azViMUZCU21oQ1FreGFMM3B6V1VGYWEyOUNkRk12VTNCUFpUVUtkbFkyZUVKbU5WSXpORTU1ZUhV
      dlVGVklWV2hGUTJSTlNqTnFVWFFyVmxaUVZtSlNVMnhvVkVKTFpXZFpVRE4zTVd4NVZEY3ZNV2Q2
      V1RCSGNYQjJVQXAwSzFSREt6YzJWM05yY1RsWlpsaHpUbFoyY2xCa1VEUlJOMUpTVEhsWlRWZExl
      RVZ4UW5WVFkxRnJXa1J1VmpOaFZqWlVla3hJUTJGR1RURldielJFQ21keGFGTk9URGRhV1hvMFdr
      ZENORkpNSzAxVFZYWmpTMjVOTjJ4M1NGRTBWRzVNY0M5amJVOTFiVGRrVkZGS1UyTjVha3hzUnps
      MFlqZ3JTbTQ0WmtnS2MxcERiVFpuYUhKbFdqSjZlamR0UjBacFZGaGhVR05VVFVwRmVuQndlSFJP
      YXpOMlRHVjNNRFY0VEZobVFYUXlZamc1YVU1ck1YazVZM0Y1YjJwTFVBb3lZVGRXYlhKT1FsaFVh
      a3BLTW5kalV5OW5abVI0ZVUxa1NFOWhPSE5GVTA1R2FrNHpMM3BpWWt0WlR6aG5SbXBqY1hWc1ls
      cG1aSFpSVjJSd1RHcHRDbWgyTXpWcVJtaEtVMmRRYm5SU2NFODRaMDFRUzB3eVRDOHdkVmxPZVhC
      b1p6bHdTVmMwWjIxbVEyaENhbTV6UW14SVFqbFNNMGh0TUdOdVowMHdhVWNLVW5aclEySlBXbFpL
      ZDFsRU1EUTRkR1kxTXpZNGNrRmxlVGhpT0UwM2NUTnRNbnBsZEV0SWR6UlRVMGx6ZERoWVowY3Jl
      V3hFZFhkNE1WbExRbWRMV2dwV1pWZGhja041U25rM00wTXdSR28xYkdORU1scGpiVWwxVWtoMVpV
      aDJMMWhqTlRSVWVqSlpRelpPYUZCSmJUTlNUVVY0WlhOUk5WcHJXbUk0WmxWT0NtNVdjV1JoVmxo
      d2JrVTJWV2hKUjFkd2VEQlVkV1J0WlcxbE5WaDRTRzFHTVRoM1IycHhTME5NU0d4VlRXbDRRbUZS
      WjI4NFJWbHRaR3d2UkRoa1J6VUtNSFpOZEVweGVqZzBia1V6VkhKRVFVZHhNVVpITkN0RWIzb3pR
      VEpQV0d4dGNtaHNNemhGVlU4dmVFczVlVUl4YW5Sd2FreFdRMVkxWW13MFZESlRSd3BxVFZSYWVW
      ZHlaMFJtVDJ4dFNuSnNRa3hKU0FvOU1XUTFRUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84003-3
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-09-253040
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-7(a)
    - PCI-DSS-Req-1.4.3
    - PCI-DSSv4-1.4
    - PCI-DSSv4-1.4.3
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_accept_redirects
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.accept_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.conf.default.accept_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.default.accept_redirects
        replace: '#net.ipv4.conf.default.accept_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.default.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Enable Kernel Paremeter to Log Martian Packets on all IPv4 Interfaces by Default
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_log_martians,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Kernel Paremeter to Log Martian Packets on all IPv4 Interfaces by Default
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv4_conf_default_log_martians_value: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFVRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      eFFNRkF2TWs1QloyRnRlR2hDYW05VFRURkVVSFZQY1dOblRYUUtiSGRLWTNWVlJFeFdUVVIzV25a
      V1NWTnhXbVpFWTIwMloxQXlkVFZwYWtoblVGaDROMkZhTDNremVTODJSakUxTTJ4TldURnVhVWQw
      YkZwNGVuRkJXZ3BMYXpKRFQyVnZVV3hUUzFOME9TdHphV1p6UlVwbVNFNXBRVGwxVFVsemJIcHJh
      MlJyVjFWTmIyYzRWREJSU213MlVrdEtXV1l6VEdwc1NqaFpRVzlZQ2pSNlZYSm5iRzlOVWpkc01W
      WkVieTlTZERZdmVVdFpVV0UzUW1Ob01FbG5NSGhYVkdsVlQwRnhLMDUxWlc5aFdGZHlNMlpxV0c1
      UmRFbEpNbXMyVVM4S1pXUmxXREZoTTJJMmF5dGxjV1JDVlZOSVRVeFBObkkzUmxWbFdHcERTRTlX
      VjI1VlRXOHdWVWxUZG5KUVlXWjZUa2czZVVwTWMzcFBUVk5HUWpGWmVBcDFVVGg2UmxCVFlYbDZS
      azR4VkVnelMxTklVbEUyZFU1RU1FWkpTSHB0WTNoTmRUVTFOM2cyTlhOSWFuRnlZekpqVm01SE4x
      aG9TRlZVVGxKTWRYbHFDa3RLYmtkTmFURmFOMjR2ZEZkVFNFUnBhaTlMVDNaVU1YWnVUMUJzTldk
      b0wwTnlOV0p3Tkd4S2RIcHFOWHBSVmpGTlZWUlRla3BMTkVkME5uVlZja01LV1doaU9UbEhXVVZ3
      WlcxTlluVkpaR3cwVVdSU1JIUnNXa052SzNGaFFtbHlWRzgxYTBWQ2NuUTVOVFJTVFVOaVNHcGlX
      bXhyWlRkRVVVVXdNa0lyTmdwTE0xbHlkV3hYWkVWWFJqTmpOMFJ0TW10a1dGTnZZbXhSZUZaU2My
      eFpaVTh3VUVSNlZGUjVVV3gyWmt4MFRqTlFlVFoyVkcwelJ6WTJNMHB5Y0hKNkNrTjZLMHR6SzNS
      UmRteDZURlo2WjBOT1YxZDRUUzh3YmtveFFXSmFaMXBMUzA1WlZFZE1ZbmxSVlcxWlR6RmplR3B1
      WmxCR2FWRTFWa2RoZEZveWRqTUtiRVZGWWs1eGNVZHNRVXAxV21OVFYyWlNSR0Z5UjFOWFRFeHRi
      RFZQVTNkTWFYVjNSRmxLZUhWc1FsQndaemR2U21kUk4yaHdMMUV5Wms1b01uVnZjUXBTYkVaU09G
      cE5ZemgwT1dGeVNtZDFkVFZhWmdvOWRXMW5PUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84014-0
    - DISA-STIG-RHEL-09-253030
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5(3)(a)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - sysctl_net_ipv4_conf_default_log_martians
    - unknown_severity
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.log_martians.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.conf.default.log_martians from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.default.log_martians
        replace: '#net.ipv4.conf.default.log_martians'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.conf.default.log_martians is set
      sysctl:
        name: net.ipv4.conf.default.log_martians
        value: '{{ sysctl_net_ipv4_conf_default_log_martians_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Enable Kernel Parameter to Use Reverse Path Filtering by Default
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_rp_filter,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Kernel Parameter to Use Reverse Path Filtering on all IPv4 Interfaces by Default
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv4_conf_default_rp_filter_value: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      SjZXVkF2YVZKRU9UUjJSbVpOWW1WWWRpdE9RMnhWTlRBclVuVUtVa2xDZFhCU056Uk9aREpYUVdG
      T2NsUnNVMlJpVEcxUk9XWjNhbTl3VkVkU2NYSXlWazE1WTJkT2RqRndOV1V6YTFCMWRXaDFOVzls
      VGpoR2RuUkxaQXB3Ym10eWNIQXliSGsxVjFab2NtcDVjRlEyVUM5RFRVaE5SRU5QUm1wUFp6Rkpk
      bTFZTDJ0S1RqRXJMemsyYTJzMmJYaEVSSGxaWjFveVVYRlRVemxZQ21abmF6QkZSVzVZTVZGRlZ6
      QjBlRTV6WlVod1J6TjJaakJhU1RNdk0wUkdkVVl6UVhaNFlrWlJkVkZ3U1VWTFUwODJPVnA0YlVG
      dGJqRlZXR1ZRVW1nS2RVeERTalpyZFhkd2VYcEhjR3RNWm5KSlkzaDBObnBaVldjMVpGQkNiMHRP
      Y1ZJMVJHTm1abXNyYUdWUk9YcE1VM1p6VVhWaWVUQm9aRlJxTXpSd01ncEtaR0Y2TXpOcFVUVTFh
      bXBUYlZaUEt6aFphRXd3ZUN0VVNYQXhlRlpKWXpKRlJGTmpRM2RuYVdWSldXNTZjVFJZWTNoMGVu
      SXphMnBWV2xwVVEyVTBDamhST1dVeUsxb3liWGRNZVRKYVZTdGtTWEJRT0dwcFJIa3phbGhVT0ZC
      dVNXaDRSa3RWYm1WTksxRktOa0pSYTIxVlRrTTVXalI0WkVGbmIzaDZkRTRLZW5SM1NGSmxNVlJY
      UmtoRVdHWlpNRXBOVkdWWlZFRnROMFZFWjFoVVJVVTJXRnBRUVhJclluWlBaUzltYlZsRlRUZHhT
      SGRXTkdSTllqaEdhRUpYVEFwMFUwaFljVU5sUVVka09HWkpjR3AxWjBWYUswWlFMM0JCVkhnM2Vs
      Vm5SbkpyZW5CdWMwRktlbVZyUTBsMEwyWjVWREoxVlhJMWNHcHpTSGxqTTFwd0NrTmtaakZXVVd0
      UFQwdERVblJFY25sNEwyVkRRMDFUYVU1bkx6UXdjMmh4UzBobE0xaFNWbVpUY2tsalIweEJTblZE
      UTBoVFZUQnlRV0p1Vld0elZFOEtNa2RCZDAxMVlVSTVSMWxTUTNvMVVEbHRlVWd3VTBwMVl6ZFlh
      RWMxUzBsNlJsVlBLekpDWVRGdk1ERkdjRVI2U0RSbU5EbEpNVzVhTkVKalVpOVhjZ3BtVUVWNFMz
      TlJaRmsyZVZOUVNrNTRUbU4xV2dvOVYwMHliUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84009-0
    - DISA-STIG-RHEL-09-253050
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-7(a)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_rp_filter
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.rp_filter.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.conf.default.rp_filter from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.default.rp_filter
        replace: '#net.ipv4.conf.default.rp_filter'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.conf.default.rp_filter is set
      sysctl:
        name: net.ipv4.conf.default.rp_filter
        value: '{{ sysctl_net_ipv4_conf_default_rp_filter_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Configure Kernel Parameter for Accepting Secure Redirects By Default
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_secure_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Configure Kernel Parameter for Accepting Secure Redirects By Default
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv4_conf_default_secure_redirects_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      aHJSVkF2VWpKaFZHdFZRa1owYzBwU2JUTm9RM281WjNrM1dtWUtkR2Q2ZFU1dVdYaGhOa2xDUzAw
      NWFFZEhMM0pOTDA1WVRGQllkRXhSUW14cGFFWnpkMU53U2tFd1NVUnpSVnBqVURBMGFrRkdVMngy
      V2prMVZuQjBXUXBLWVd0eU5WWkJUMGQzYWxwSFREZHVkSG80ZW1odVVrOXFVMUJzWm5sNGVVeDVk
      M0YxU1dsaU4yUlFTVFJ0U1dsdFFqbHVORmx1SzB4MlVHMHZNMk4wQ2xkbVNYVjRlWGxtVWl0UFVG
      Tk5kMU5tVURsTlNubEhXVWhDTVRKUFZsSlZOazFzSzNWYWNrOUpibHBVVEdRMVEwOWhaVnB4Y0VS
      eU1VbzFTbEp5WjFZS2ExcDJielpSVkZoSFZYSllSakJ5TldFemFWWjBPSE5STlRWM1VWTTVSRU5D
      ZG1FMFUxWldkMlFyUzNaVGJFaGpjVmhIV0ZsWFVFeFJiRVV2UWpsd0x3b3pkWGRsTW01dkszRkJU
      MWhLVEdsNU1rTjBlamgxUVcxWmJuWkhZMGhtWkhsNVdTOUhSRmhYUjJOVFZsSnRVamRLU21GU2FE
      QnJiVEZsTnpreGJtdDRDa0ZIVkZsSGFWQlNiWEp4YW5oM2FWUkhkRkFyTTFKcGNqUndWRVJWZUdZ
      elZreDFOMFZWVDBsWVZFeGlWRWx2V2pCd1FXRlZLM0F4UlhGeFMyMXFabThLYlRRemVteDVablZu
      ZUZKd09GWlFlRVl4TkhsNFZXUnZlR0V4T1dwTlJHTXlSRUZ4VmxKNmRqRm1kV2RMWWtScmVYVTNU
      bEJsWTBJd1IyVmlaMGhtWXdwblFVSndXVXBYT1d4c2FtTlNRa1ZHTWtsWWNuSklXRGN3ZVdsWGEx
      cEZVWFpMWnpJMWFEWlJTMGQ1T1hnNGFrbzVRMFZ6VWpObE5uY3hXVEpOUm0wd0NscEtaMlZ4TVZK
      WVltMVdibTV3WkRkSVIzUkdPVXd3TVM5Q2NqZFlkVTVuTHpGUFlUSlBkelp1V2psV2RYcHdNMm93
      ZGk5amVFTmxaelJPZG1Oc04wRUtWRkF6VUVKNlpEQnBRME56YlVSTlNYSlNNM0Z0UjNkclozbE5X
      V1ZpVjJnNFFrWmtUM0JaUTI5NU1qTnlNV0ZqU2t3MFduWnJVblozVTNOUVkwMXBkd28yUWpSYVRG
      ZEtlWGdyTVVZeU9EZGFWbTg1TndvOVducG5OQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84019-9
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7(a)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_secure_redirects
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.secure_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.conf.default.secure_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.default.secure_redirects
        replace: '#net.ipv4.conf.default.secure_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.conf.default.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.default.secure_redirects
        value: '{{ sysctl_net_ipv4_conf_default_secure_redirects_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces by Default
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_conf_default_send_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Sending ICMP Redirects on all IPv4 Interfaces by Default
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83999-3
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-09-253070
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7(a)
    - PCI-DSSv4-1.4
    - PCI-DSSv4-1.4.5
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_conf_default_send_redirects
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      UmlPRkZCU2xwdFlYSklSVFJ4WWtJMlRtZE1Na3AzVVdFNGMyNEtlR1J6Y21SRmFWaENlV1prYlho
      TGRHWm5hSEJNVEVkV2VuaFZWMk5MTkVSblVIZzRLMjlpY3pCTGRYQktWa3RLY0RodlZUTlROR1pq
      VlZSVVJGZGxWUXB2TWpoeFYyTjVSR3hLWTFCVk5ERjFUVEJaVDNSUk1HWmpjbmh2SzBKWE4wRjFa
      amt2T1hwTlNWcDVTMHAzTm5wQk1qaExkbkJTWkhaUlIzRkdPR3BxQ2k5V2IxcEJPVE14YnpneVVs
      aHBlR1pZVG5NelowMHpiMGR4VUcxWWNrMTJUVlZDVW5WeUwyVk5XVXRSY1ZoTlJWVkNXR2N6WVRr
      d0t5OVdXbkpJYWs4S2RGaE5MMlV3WTFvNGRrazRMMHhVTjFObFMyOHpkREpEVTA5SGJTdDBTek5U
      TjBaNFVWTjZjVloxYlVsQlUxQkRZVXRWV2tNd1JVbFBielJFVlhONmNBb3dPRGhEUlhWQlRrdGlh
      U3MxTkVoQlR6RmtMMHRJVFVGUlpGRXlNaTl3ZUdrd00xVnpaVVpvTlRKaFZISmhXVTl6U0dNNFdX
      OVJUbFFyZDBoclJGcHVDblpGUVhwcVN5OVBSV29yYjNKMVRHTTVRbFJIV1hodFFteGlaVzFpYlUx
      SVJpOW1RVXhNTUhSVVJrWklZbkZHVjBwd2VqbHZUV0ZJYlRKSFJIcFpOV1FLSzJ4cE1sVmhaRWRM
      Tm5oNGFVUkNXV3h5Vmpoalp6SktRVmsxYzIxRlZUWTFjWEUzTDJwRGJFdHdPRTVWWW0xSFdVSlVX
      alpKYVVNMWExWkRVazlRVkFwNFkxbzBVV0Z3VFV0TmVUUjZWMmMzT0U1Uk1HTlJObWhsWTBsVVlt
      aExVVFpJVDNWMFFuaDRRMVJPVlZwV1ptbEpMME50VUZScFJYRkxWMWhTZGt0WkNtMVlOM2hwU20x
      dFRGaGxXVmxhU2pZdlFTdDJlbVZSTlM5WVFqTm1ZMlZLWkZSNlNFZFdjVWxqYkRGYWIydG5RM1F2
      Wkcxck1WTlBTbHBwWVZCdE9VSUtiVVZFVDJWSGVXTlVVMlZvU1ZrMFJ6QmtLMHhQU0VKV01XdHBj
      MU5JZEdWSlNXZHlTemRwUnpGVWRqUkZNMkZtTm1WMGFpdGxOMDB2WkRoSGRIaDJRZ3BpVFRKUk4x
      WkJaa3hzVWpCVFNrMWpiSE4xTHdvOU1taExUQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.conf.default.send_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.conf.default.send_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.conf.default.send_redirects
        replace: '#net.ipv4.conf.default.send_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.default.send_redirects
        value: '0'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'


# Enable Kernel Parameter to Ignore ICMP Broadcast Echo Requests on IPv4 Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_icmp_echo_ignore_broadcasts,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Kernel Parameter to Ignore ICMP Broadcast Echo Requests on IPv4 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFZRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      UXphMUF2YVhOWmEzRlhjMFJqTmxGMk5TdHJkek5VYzJkWFFYb0tOR1l3VlhCYWJsWnZibkZoSzBw
      ek9XVXlkVzFJTlhOdVVsbENVMUJaUm5reEsxUm1helkzVWxob1FuWnROekJMVlhCRVFXTjNSM1J0
      Yms1dVUzQkpSd294ZUdFMGFGWkVMMmxwYXpCamRuZExSMHRSVmtaVmRFSmtRamhaYm5Kck1HRkZV
      akZyT1dSWmJFVndSRVpMWjNKcFlqbFZaMUoyYWpGMk56YzJWV05hQ2tzNFRGTk5UME5XTmt4RVUx
      bGtZVlZVYkZnNVZYTnZUbk5FVUVvMVlXcEljMGROY0U1alJXVTROVzluZG5wUFMycHdaRTlwWWtO
      c09HTkpOa2hSUkRRS2VHRkhPVlJITUZjeE9YSlZkSGRwT0dkdGJtcDNablkyVXpCcFMyVXJSRmRa
      T0dWRVFrcFJZVlZSUVdVeWIzTXJSRlZ3ZEdaa09VOVhhVWx2Y2xGUFZRb3JiRXRYTlcweVVVTklW
      V3BWYjIxRlMzTjNjMEY0UmxFNWQyWTFhMFJqYTJ4SVpFcDNSMU54T1hablRFUlJVWFJ6UmxWalJY
      aFFkbXBwUkZsbFRWcFJDa3g2VVZwcFVHNTVhblprUkdaTGRtcHdMek52U1RBelpGbFJaRzVFVHl0
      TU9HMHpOVnA1UW5GVU9XSkRLMGxEU1Rad2NtODNWRmR3TnpSS01rbG9VMFFLVFd0c2VVVk1jbWcz
      TlVwRlNFNW9aMWgzTlRZelEyOXBVMkZLVURab1JrNTViVTVXYjJwd1MxbFNUVlJrYUZkSWNsZElk
      bGc1U1VZd1YyZE1TVTVNWmdwSmFVWnphSGRLVDIwdk4yaDRNRFJrT1VOM1dEYzVlRVZ1Y1RBeWIw
      dEhlRVI2YVZnNGRqTm1XV2RGZG5CV2N6YzJhbVpPU1hkT05HZ3pVRGg0VjNwTUNsSlJNbXBvY1c5
      U2JWSmxWVEZUYVhKeGIzRmhjMDg1Vm5WUFJIVjFTbU52ZWtSMksweG5OelJ2YUZSWU16WnhUbnA1
      TVVseFNubzRWRlZIVUhsR1J6RUtlVk5sTDFCT1Z6SmlNVlJOTTIxdVZGQjViM2d2Vmk5aldIQkVX
      V1ppWkVZemFERmxUVE5KVFhJNWJGWjNOVmxtUVZwc1oxRmFabkprZVdzd1pHTjZNZ28wZEdOcWRq
      VktUSFF4VkZsaFpuSnJVRU5zTWdvOVNpdEZWQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84004-1
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-09-253055
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - PCI-DSS-Req-1.4.3
    - PCI-DSSv4-1.4
    - PCI-DSSv4-1.4.2
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.icmp_echo_ignore_broadcasts.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.icmp_echo_ignore_broadcasts from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.icmp_echo_ignore_broadcasts
        replace: '#net.ipv4.icmp_echo_ignore_broadcasts'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
      sysctl:
        name: net.ipv4.icmp_echo_ignore_broadcasts
        value: '{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Enable Kernel Parameter to Ignore Bogus ICMP Error Responses on IPv4 Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_icmp_ignore_bogus_error_responses,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Kernel Parameter to Ignore Bogus ICMP Error Responses on IPv4 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFdRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      TkdUVkF2TWl0WU5sRjFZVzV5UW1OaFJYSlVOSEJwUWpreFEwY0tWRW92SzFOSVpIaE5WQzh6VDNs
      Nk1qRlhjRFJTU25GellTczFkV0ZqVFc5QmNUWnJTMmxXU2tkMVVWbENPVzAxT0VNeFJUVnBjRlpy
      U1RoaFNYVk9kUXBoVmxrM1luVjJhekp0YUc1dGMwa3ZaVE5DYzFCd1FrOHpVRFJHWW10bVNIWTBM
      MjVyZVhwcU1reHFlREo2U3pkVVlWWnRUM0kwY25GMloySjNhbVYzQ214VmEydFFURnAzUVhKTVpX
      dERiek41UWxKS09YbE1TelJGWlhReGRUTnljSGRrVUhFM1NWbEhaVVpZTTJFMlNuUmthbWtyWVdk
      Uk1UWnFhamhuVVhnS1Z5OVBjaXROUjNaWlVURTFTR3hTUVVaNlFUVTFOWGRwWXk4MGRIVm5TVmhS
      WW10WlNWa3dWbkUyTlhaalFYWTFaRVV4VFVKWlNEQXZLMGd3VG0xS053b3pVRVZZZGpsYVRrMHZV
      aXQ1TldwaFQwOVlZemxGTkV4V2RqVkJWRVJIVW1Fd1dqQnZabEl5VmtNMlVsZGFjM1E1Y1RablpH
      MTVObmhvY0dkaVRFUlNDblowZDNwWVdEVjJNVEJ1TkVKUGQxVmphamt5VkdFeFdXcEZPV3BZVjJO
      VmFsQmhVV2xDT1dwa1ptMXhPVlZrU2pSQ016ZERPRlYzTTJadmQzaHhlSFVLYzJsSGRrVmlORzFM
      ZDFsdVJXWlBZVzVITVRSQ2VFSXJZVXROUVZVMk0xbElWRGx3U25sblQwcDRlRzVGWnpNNFZqQkVk
      VmRPYjFJemRHdFFXRnBIVXdvek5YaHJaRk52ZEVoNVdrOVliWHBPUms1bU5HbEtWa0Z6VnlzMU1H
      WTFNbHBRTUd4eWNFSjBMMmwxUjBZMU56ZDJUa2RYZDJVMFFVTmljRUp5TW5RdkNqUlNWMFJZYml0
      WmJEaEtRVVVyWTJFeVltbElNRFV2Y1doemIyTlpMM2xES3l0cFJWcFBObWN6VTFSU05IQTVNV1ZD
      UTJOV2FUbFZabFJLTkZZeVRVc0tabmMwVUcxYU4ydEZURTFvV1ZRNGFFMUtaMWRFSzFwelZUVjBh
      UzlTTDNOallVZHJMMmhSU0ZCckswSkpWRTFJWWpKeFVUQjZhV05EVVhZcmFXNU5NQXBIV0RKbGJt
      bFZhME5CUkZVNFMyb3pXbWs0UndvOWFtNVhUQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84015-7
    - DISA-STIG-RHEL-09-253060
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - PCI-DSS-Req-1.4.3
    - PCI-DSSv4-1.4
    - PCI-DSSv4-1.4.2
    - disable_strategy
    - low_complexity
    - medium_disruption
    - reboot_required
    - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
    - unknown_severity
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.icmp_ignore_bogus_error_responses.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.icmp_ignore_bogus_error_responses from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.icmp_ignore_bogus_error_responses
        replace: '#net.ipv4.icmp_ignore_bogus_error_responses'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
      sysctl:
        name: net.ipv4.icmp_ignore_bogus_error_responses
        value: '{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for IP Forwarding on IPv4 Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_ip_forward,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for IP Forwarding on IPv4 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  tags:
    - CCE-83998-5
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5
    - NIST-800-53-SC-7(a)
    - PCI-DSS-Req-1.3.1
    - PCI-DSS-Req-1.3.2
    - PCI-DSSv4-1.4
    - PCI-DSSv4-1.4.3
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_ip_forward
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFdRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      Tm9kMUF2UVc1bFZEZHJWR3R6ZUVOTFQxUjNWR3MzU0ZaRFVVZ0tRbUpwY0hKWFkxZHpPRUZ4VW14
      MGNtTnNjelJOVFhsT2VFWlVLM2RGY0VOaU1rcE5kMUZaTkRab1FVZHhiWEV5Y1hNM2NFdHdWRk14
      YURsU2NFOXhOUW80ZFdOaWN5OXFPUzkwWjNRemQySjNkRmRoUlRKcUsxRTFVVEZWYVU0M1pIUnRj
      aTlKWnpRNFVIRkdkVTVNT0hkeVUzVlFZVFp0V0dkNVNGSXZlRXByQ205VmNuVlVZMUJLWldGdlZH
      dHZaSEU0Wm01WGQyaFZjRkpCV205T1luSk5NbGxsYVRKaWJWaGFlSFpTVW0wdmRGWlFlREJuTmpS
      VlRXeHRPWFZWZEdjS1RuaDZVazF4VHpkUGF6UnBORkU0WkdocE1YTkZWRGxtUjFONGNFUmFSV3hw
      Ym1OWFYzTlhkelJzVm5VMlNVRk1UU3N6YVZwTWNVMWhkRUpTU2pKWWVRcEtlVlptTmtKaGRWcG9l
      a3hHYzJkd1RrMUxURXBzVUUxaFMzRnJaVXAxU25KM1YzcHFhVVUyT1VoaGNUQXhPV0U0WmtwR2NG
      UlNjSGhyVldKTFJXeDBDbGhoTVhrelYxVklkVTVMWW5aa1NTOXlZbWhGUTNkWmFEVnJOa0l3VFhO
      NFRrMTBhemd3UVdKYU9WSnNLMU51T0RCRFpVeExSVFo0VFUwM2VWTjFNV0lLWkcxMmVDdDNVRGxE
      YWtSU2QyTnBUMVZqTldWUWJERXhlRFZKUVVGWVNpOUthRGRFTUZsNVpUUXZVRXBpUlVjd2NWZGxO
      Rll3ZHpjMmIzRnBWSHBQWndwSGRURlVSazFZUlZOWE9FdFhaamszTUhWQmFqZ3hUbXBVVFZjcmRt
      cFVTVEY0UW1obWFWSTFkbkY2VFd4V2VtSmFjRlZ6U2tVMGVuTlFXakptUzBwTUNqQnpVM1JzT1V0
      amJreHhSR2h1Y3psTldtNHpaVXh2YW0xdFpFUnNhbGg1VWxoVlpuTXhiM2M1ZUZad1ZYUnljQ3Mx
      WkZsRGFXNXVZVVpVSzFKTVJrNEtkWGRvVjNkSlEyMVRjRmt3U0Zjck1rTlhiMmxMZDJkMmVUbHZi
      MXBwT0RkWlIzQkdMM3BZZFRReFpHNTZObmRoUkUwM1FTdFRUU3QxTjFkeFFsSjBVZ3BXWTNNd2VX
      Sm1LekJoUlhOTkt5dDRUMUppZHdvOWVtNUxRd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.ip_forward.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.ip_forward from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.ip_forward
        replace: '#net.ipv4.ip_forward'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.ip_forward is set to 0
      sysctl:
        name: net.ipv4.ip_forward
        value: '0'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'


# Enable Kernel Parameter to Use TCP Syncookies on Network Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv4_tcp_syncookies,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Enable Kernel Parameter to Use TCP Syncookies on Network Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv4_tcp_syncookies_value: '1'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFdRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      RXdORkZCU21Nd2JpODNURzQ1T0VRck5WVjZNMEZVVWxSeWRrOEtUeXR3UzJ0aU9WSlljRGQ1TDBJ
      MlVHdERSVGN4YmpsWE0wdHNNRTAzVTJac1UwTnRaRXhQUlRCU1pVRjVNRmwwTTA1d1QwTjNkWGh3
      UmxVd1FYbzVkUW96U1hwV1dHWTNMMGMwUlNzd1pETXhTM0l2YmpSU1UwZDFlbEl3TDFoU1ZtRkla
      bVV4ZVZsc1RIbDVSWGxZVEV4Q016WTVRbXRqZVZVMGMyODJSSE52Q2tnMldEZDVNa1kxUlZaWFRH
      SjNkVFZMU1dGWGMwaFJjRUpTVjNwM05uRmlkV2xNVVcxSFNWY3JRWFZqZFhGMlNHVkRkSFJ0YTJ4
      eVZsSnhOR1JYWTJNS1dGUk5lUzlJTmtsMmNtNWtaVVpCYlZOdVFtTnFaVVJZV1hKaldtZzNWemNy
      TUZkT1NIcGhNRUk1WW0xYU1XUjBaV3B4YUVwQmQyWXZZMm81ZGxKQll3cFlVR2htSzFCeFJVbG5a
      a1ZHYm5sdE5ETkNWMjFHZVhnNFkyRlVXbXBhYURnemVHVTRiV2g1YVdwd2VTOXhZakJpT0ZSR2My
      VXJLMGN3VGsxSlFsZENDbUZVWVVWNGJqUTNTamd6YVhRMWEyNVRXbGRKY21nNVpTdE5WVU5XWVZV
      M2FrdHJUVWs1WWswMlduTnBNVkY0WjNKMlpVMVFSbkI0WjNOdldqZHVPRklLY1djMGMweFdObmww
      VDNSblZEaFlObGx3Y3pkU2RFMW5OU3Q2V1dKRGJFb3laM1J4YW1aUlQyVlJhRXRoWWtjeFRWb3Jh
      R3hFYkRZeVQxVldNekV5YVFwcFluUlFNR3cyZHpSU1dTOVpUekZtUkRkVlUxYzVOMFZVV25VelEx
      TXdjRmg1VTFrck4xUXlVRmxEY0RkM1RXSTRiREZuVjBKcllYZFVZWEY2ZGxkRUNsRnJXa3dyWVZW
      MWNWZHJRM05xVEZGRFVFcGljME5PTDFCeGNrbEZURmRxUjFOQ2JHUk9kblpCV0RkWWNrcFZUbEp4
      TDNSMEswOU9VRU5QVFd0cWNrRUtSRkl6SzJ3MU1reEJNM2xZUTJSeEt6TldNRVJGZGtFNE1tWjJP
      V05QTVd4TWJsSlFkMVoxTWxsTlNqVkhlV0kxYmtKNVZ6WkxTamRDV1hCbGIyeDZlUW8xYVVoTU1H
      Sk5lVlZOZUZWQ2VVTXphWGxNZFFvOVRsbEdaZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84006-6
    - CJIS-5.10.1.1
    - DISA-STIG-RHEL-09-253010
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - NIST-800-53-SC-5(1)
    - NIST-800-53-SC-5(2)
    - NIST-800-53-SC-5(3)(a)
    - PCI-DSS-Req-1.4.1
    - PCI-DSSv4-1.4
    - PCI-DSSv4-1.4.3
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv4_tcp_syncookies
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv4.tcp_syncookies.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv4.tcp_syncookies from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv4.tcp_syncookies
        replace: '#net.ipv4.tcp_syncookies'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv4.tcp_syncookies is set
      sysctl:
        name: net.ipv4.tcp_syncookies
        value: '{{ sysctl_net_ipv4_tcp_syncookies_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Configure Accepting Default Router in Router Advertisements on All IPv6 Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_ra,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Configure Accepting Router Advertisements on All IPv6 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv6_conf_all_accept_ra_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFdRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      cG5UVkF2YWpGQlVXRk5ZMFp0YUZsbmRWcFhRblpLYlhVMk5qQUtkbkJIYlN0blVVNXVZU3QyYTBo
      UlZXUk5RemsxUzNOd1VEbFJiM0Z0TmpoVlJHaFhjbFJrVmtoaFVqWjFNMDB2YWpSdVZWUjVURTFT
      YkZodVprNXVhd3BPYzNGSFZtTlpXRTlCZVhoM0t5czFlVFpxYzBOWFJGY3dRUzlWWlN0bGNFRlhX
      bXQzT0ZwM0wxbDNNRXBNTUZoQ2R6UnJjMFJWUkVaTU5rSjBUR05DQ2pNclJqaEpZVzlMVnpBMEsw
      SXJaRE5TTWtrM1dqQjFaMjlZU25jMlpGaEpNMU41Y1ZjeEwzSnJXakJXUVVWUFYwNVpRVEZXYVV4
      RFlqSlVPVEJaYWtjS1kxRTFVSGxhYjJ0WWNYcHpUbGh4U0RocldraE1LMVlyZFZoNk5sQnBWV1Vy
      S3pKNmNDOUhaV1ptVTNaemJVZGtRVWtyV21OcGRIQmFOQ3R5VjJwdWVRcDBWMU5UVUV0cGRURlhX
      VWxJVTNFM1VVTnBTRmhEUkZGNE9GSnZaMjFwUVUweFNIZFNNRTByTVdzdlJrSXdlVkJNUW1Rdk1u
      cDRiemh4WW1JMVlrY3hDamQ1TWs1VGJsTkZjSGM0UVVORFdsRktkM0pQTVhGbVRrTnpZVGRxV1hG
      T1YwYzBlREF3UkhSdVlsUnBOMmMxYlZJdlUwUmphVEpXZVcxRWFFaEViVzRLVlZaSFNWcE9RamRX
      TVVkekwyeHZTbUZuYlRSUVVEVkJjbUZLWW1wYVNteHlRMnhGTnpsMmNtWTVNSEl4TjAxUVpVdHhl
      U3RRZGt4MVkxVkpOMmhTVWdwaGRGRlVNRXRMZEZCd2RXTjFNREp2V0hsTVZHNVNaekp4ZFcxblFV
      OHpjbFE0WTNOTWQyeDFOa3RXY1VrNGJqaHdLMlpXVmtoRmJVbHBOa0pWTVZaRUNtSjJjR2xZZG1W
      eVpsYzFXVnBRTVdSelNqSnhSbWt3ZFZSRVJHWXlORGR0VmxCUk9YZ3ZRelpNV0VkQk9FSmlibkJN
      WTBodlp5dEdiVXR2Wlc5SFkxUUtRVVptTDBsbVpXUllTbkZ3UkV4RmRVeHVRbWRxVldNd1dVSXpi
      bVZzY3psa2JIZDRjRXRDZWt4bFkzSkpRazlhVG5CeE5EWnFSRWxNYUZCb1NYQlJRUXBVU1VGVVR6
      WmlTR1ZETWpSMk4wZGpRa2hEUVFvOWIxRnRNQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84120-5
    - DISA-STIG-RHEL-09-254010
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_all_accept_ra
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.all.accept_ra.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv6.conf.all.accept_ra from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.all.accept_ra
        replace: '#net.ipv6.conf.all.accept_ra'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv6.conf.all.accept_ra is set
      sysctl:
        name: net.ipv6.conf.all.accept_ra
        value: '{{ sysctl_net_ipv6_conf_all_accept_ra_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Accepting ICMP Redirects for All IPv6 Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Accepting ICMP Redirects for All IPv6 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv6_conf_all_accept_redirects_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      bGhjMUF2TWxCVVZGTkVURU5WWldSaFpFdEJhRTlhVmpSb2QyZ0tXa2xuZVRKbWJHWkViMnBNYUVw
      bVoxSXZkV3B4WmtKR1MwSXZXbWd3VTNKWFdUZEpOR0Z1ZVdadlRYQlFRV2xYZWxFd1RqUlpabEp2
      VVhGdllUaGpUZ3A1VW5aeWRYZzJUMmxzTkdORVdVSjRNV2xHYmpWVUszTldNbU0xWlVKMlNGaDJV
      RlprZUdjMVdFdHViSFJVWkN0VmFIVnlPREV2UTNGS1ptczJZM3BSQ2xKVVNFMXRUblJRVEhjNWFr
      MVlaakJPZFRacGFtZzRWbnBITUdKVlkycFpTbGhWUlRKV1pUSkxSVEZsTm5GSVluUlFXRlZHVkRS
      WWFHOTNNR1Z3V2pNS2JreFFPRmx0TUc1WWRWSkdaa2RXVUU1b1VrUXhaM2RITTJwelJGWjFTSE5z
      WVZGaGNsSnRZa05wVTJ4WmRtbHRiM0F3T1dJeVUzbFZORE5yVTFOa2FBcHRVVXRFTVN0cmJ6Sk1U
      MGxZTDNWVlRFTnNTMHQzZG5wWGRHNW1aWFZhYlU4MGMwcEpiemxxUlZZelZXaHVWM1Y0WkVaT2Nr
      UTJPVVJ1T0cwM05XUktDakJzTDBKVU16TmtRVlZyVFVkTFYwTmxkREJ6WTNwdk16VXJaVXhRU1d4
      R01XZExPV3BhV1dGV1IzUnRVSFZETm5VMFZVSnViVTF1Y1hodFpqQjJURE1LVW0xeE5qSTJhVWd6
      VEU5TGIzcGFZbmQ2Vm0xRmN6QkNMMnNySzFwcGVGQlpkMGwwZW1KeFJraE1Vbmx0VHpSVGRXb3JS
      RzEyT1U1amRtdGhNMDFsV1Fwa1l6bExkWEpoV1ZneWVuTmxhVE5TWmxaTlZITkhOR2xHYkhRNFVX
      NWhVM1V4WjIxVGJUVjFLMWR2UTIxNVJHcE9iMUpsVG04ckszWlRVVE5SVkV3eUNrSnVXWFp1WVVs
      VFZsbHBPRzVFTjIxMFNISmhXbXBxU0dSMVpERmpZbVZvV0VGSE1UZHRkR2RrZWtGeVRtWTNVVGhZ
      UlV4ekwyNUJORlF4U0RBM0syNEtUalJqT1hScU5UZ3ZTWEpyWjBobmJuVTNjVUZ3ZVdGS1lVOVla
      R0ZzVjBGblluTkZlbHBOY2tkaWNXdFJPRzlDY2s5VFJTOUNPRU01UkdkSGVraHlOd28zYkRNMFNG
      ZzFiR28xTDFOWFRscENkVEpvTlFvOWJFRkJZd290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84125-4
    - DISA-STIG-RHEL-09-254015
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-6(b)
    - NIST-800-53-CM-6.1(iv)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_all_accept_redirects
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.all.accept_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv6.conf.all.accept_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.all.accept_redirects
        replace: '#net.ipv6.conf.all.accept_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv6.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.all.accept_redirects
        value: '{{ sysctl_net_ipv6_conf_all_accept_redirects_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv6 Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_accept_source_route,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Accepting Source-Routed Packets on all IPv6 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv6_conf_all_accept_source_route_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      TlRUVkF2VW5salJVcEdaRWw1ZUVOVFQzcDRhRGcyTTB4dU5FUUtiVlJIUTBGamMzaHJaMmg2WkZO
      eVpqSTRWMnBqY1Vvd1oyaGxOVXRXWjBNMU5rTjJlRXRoVDBKNU4zaDNiR3RKUlhkdWMzaHNhREY0
      TWpVMFdtTmxUUXAzVTJkUWVFRXJRMUZ5TUVwQllXdFJTV0ZqTlhWV1NqZE9XR0pPUVZSc2RHSTRP
      V2hOWWtWSlFYazNRa3B6Wkdjd05sWXJaMWRuTjBOV1dYWm5kakYzQ25oNU9EbGFRWGxuT1hSTEt5
      OTNha2xxVGtscWJqaHhkRVY0VVZBNVJVUlFjRUo0TUN0V09XOURLMDFWWlZJNFYzZFNLMWxvTkda
      UlExUlpabXd6YlVVS2VGVmFSa2gyT1daVU1WbE9iV1p0UzBaRmNrODJielZpWmxFNWFsSjZTM1ZT
      SzFoak1uWnFVbkl2VFRsWU9ERlpVMDlqTDJKTFQyOTJLMDU0Vmxsb013cEZUWGRHY0RsbVJWVnVV
      MHRDVXpWT1NteFFOWFk1VEhOVWNHVm1ZVUZWWms5YU5tNUZRVzFCZGxCbloyTm9TbGRMUTBwMmNF
      ODNSbEpqVjNWaVZuRnFDa2Q1VW5sTFltZ3paREJEVTJkblMyNTNTRXhxYld4S1JHeElMMFF6Wm5G
      TVVIQnFTRTFDTjFjNVEwdE9OVzFRUlZwUE5EVkRUVWxDVjNoWGVFUkRha2NLTnk5RlEwWXhNMXBK
      YldrcldHWk1WM0ZqU0V3MVFuWkhSMlI0TnpJNFJrbDRlSGRhUm1KVUwwNHJaMko2UzI5dVdFVllX
      REZLVFVWeFNWSnRTRGxSVVFwR05XUkxkRkppVFdKc2VVTk1VakF3ZUZOeWVXSmxOMnRLY1VkemFF
      NHlXRzVRZURSc2NVVjBWbHBUZEdNdlVXWlVMMlZtU0RoVmNsQlBSVkJtUkRFd0NsbzFlRFZrVEVw
      Qlowa3ZiSEpPVXpGWFpqWnlUa3RaYlV0RFNXVnplbk5OYm5GdFdraFhUMHB1TVZoSWEyOHhTM1Zy
      V2xCNE9TczFabFp5VG5SaWVuTUtiRUphV0VodWNFSmhMMDVpUWtobFRWUlZhMVZOYkVOcGFpOHlX
      bWRNZEZWQmJXdEtiWEp4ZGxkcFVUZzRiMFZXTW5ZeU9VNUlNbTFVYnpobk5qQTFkQW8zUWl0d1Qy
      bHFMM2RCTkV4aGMxbGxPV1kzTUFvOUwzUmlWUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84131-2
    - DISA-STIG-RHEL-09-254020
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_all_accept_source_route
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.all.accept_source_route.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv6.conf.all.accept_source_route from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.all.accept_source_route
        replace: '#net.ipv6.conf.all.accept_source_route'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.all.accept_source_route
        value: '{{ sysctl_net_ipv6_conf_all_accept_source_route_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for IPv6 Forwarding
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_all_forwarding,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for IPv6 Forwarding
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv6_conf_all_forwarding_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      YzBkMUF2YVhCeVlWWXlaRkZ6YzB3dk5qaHZaR3d2WkRaVk1qRUtVbGxQZUhabWMwUktXV0l3V2xo
      RFJXZHFObE5uY21aVk0yMUhhWGt5TlRKMmVGTkRValJ3YkhoeGVVUnFNMGN2YUdkbFJqTmxaMnRZ
      WlZSSU5WaENNQXAyY2psaWNpOTNSVWhGZWpKalNGcHJjV0p1UzA0NVkzRlpTMmxqY0RKcFJtdHVh
      RWRPVFhGMWRHb3lLek5pY1VVd1MzTTRVVmxqTkhsV00ySmFZVE5rQ2xsQ016RmtURUpJY1U1c1Yy
      azROemhtYW1WQ2VETkhha28zWmtGTWFXeFRXa3RzZGtkeWFWTnhiVGcyWW5CdE0wdEVOSFZZVjFW
      TmFqaHhXa1JaVXpRS1EwUTRNSGx5Ymsxc1RHcFdaMHhSVDJKSlZHVlJha2wwUldjd1RGZzVWa2c0
      YUc1RmVuUk1RVGh1ZG10T0wybFBURzVvWXpOR2VtWlRTMWh3TlRsbU53cHVla1ZtZFdaT1FVUklO
      VGxHWjNsMk5XbHNWMEY1T1RoMFRYQXhkakF3V0VSUGVYQndWbmhsUVRoblJWZzVhRUprUmtsMWFX
      WkRNa2t3TW0xemFXSk9Dbk5sUjBwSGJ6TkNVMk1yY0c0NVpqTm1OMWhwVG04dlFsUndZMnh5TUcx
      MGFIZzJaREI0ZW0xeGRraEVXakFyWWpoMlRERmlaWGxCZVRFeVJIZDNla01LUW5OR1NsSnFPRGxK
      SzFwc04ySjNlSFF6WjJkRlYxbFZka0o2UzBGNmNFbERORWRoVDFCbE9Va3JiRWxZYUU1dlpDOU1a
      akZxWmpsa1ltSXJWamhvUlFwc05rRTJXRk5qZFRSdEsySnJkazlqWm5kNVdqRm5WbmxIV2xGMGRG
      ZERkRGxvYzBRMldGSlZTVE0yVWtObFVuZEZOMDlhZEd4NVpHWk9SMXAwWkUxV0NrOWpUWE4zYW05
      U04zVjJkbUZXVmpsSmVrUXpNemhRWVhaUmNURjFNRVkwTHpCVmNDOVZVVmRQWjJFeWRsY3ZMMDVQ
      WXpOVmVqTTBkQ3R1TlVvd1Z6QUtabXBuVjNCR01XbDFNRmhtZDFRd05GaFhaM3BzVVhWME1IQnll
      bnBUYVROMldWaG1XU3RKVEZCWU5UYzVaMDVEVUdoMGRGbFVORFJHTlZKQ09ITlRad3BNTDJoSlRE
      UXJhRGhFWkVNdlpqVTFRbVpyZUFvOVZFMHpNUW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84114-8
    - DISA-STIG-RHEL-09-254025
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-6(b)
    - NIST-800-53-CM-6.1(iv)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_all_forwarding
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.all.forwarding.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv6.conf.all.forwarding from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.all.forwarding
        replace: '#net.ipv6.conf.all.forwarding'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv6.conf.all.forwarding is set
      sysctl:
        name: net.ipv6.conf.all.forwarding
        value: '{{ sysctl_net_ipv6_conf_all_forwarding_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Accepting Router Advertisements on all IPv6 Interfaces by Default
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_ra,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Accepting Router Advertisements on all IPv6 Interfaces by Default
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv6_conf_default_accept_ra_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFhRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rt
      cFhiMUF2TTFaSWRETmhkRE53Y0ROS2RFTlZWMFowVlRKdlQzVUtSelpvVTFwUU0yRlhXVmxwUkVV
      M1JrMUtiMWgxWlVGUFRGTnRTV0ZhZUd4SFVHSnBNblJZYlc1V2NsZDRUemwzWVhsT1VVZ3JabWxh
      VldSd1NIWlpPUW95U0U0M2RYTk1iMU5KZG5ndldrMWxTVTB2U3pCRmJrdFJWMEpyTm1KYVowdHpS
      bVUzUVhWcVZuUTViV3RQY2taV2VGSnVVakpyT0ZKa1YxUk9RMWh5Q2poUVNqaG5OVGh5ZVhkUFMw
      Wk9aak5pVlVWdGFXbHpObHBKWjIwMlpXdERTbmhNWTFoWVNXd3hSMFJuTjBZdlNVNVZRakZtWjJZ
      NVVqUXpXazV2YWtrS05XSkdiekJTVkdwTWMxZHlNWEJ3VjNsaFdIZEpLeTl3WmpJeGVrNW9iV2hF
      WW1oVlozcFpkM0pNY0RKU1ZXVlBLM0JsUkZGa1kxb3dRbGhUZVdsaVlRbzBWMmh2UkVkM1lpdFBU
      QzlzTURkWlRqWlJaMjVOVldoYWVHMW9ZbVpEYTJZeE5YSm5ZbmxRTTFsd2QyNHhOMDF6YldrNVRH
      VjNlbkJTV0dwR1JIZFFDbEI2TXpseVpHazVOSFJpZVRaMFlsTXlPRWx5UTBZMEwwMVBNMnN5UjJs
      VlFqTnBaRTVFU2tFek5qVlZXRTV0VVRaSk16Vm9jbXB6WjFrd1dtbEZibFFLV0hwck4wdHFRM0Jq
      VVRZNVZ6ZGlTVVZvVkV0RlUzUmtiV2hRT1Rkd2VEa3pRVVk0UW5acFJrWjJkVW8xZEhkV1QyRm1T
      RW93Y21sTk15dGFSWEl2V0FwVFJVRklaM0ZCYW5waE56Tk5aakUwUkhSVGQwcHBaRmxCTWtodFJG
      VllWall2V1dSMlUwZEhUSEJaT0RrMVRVNURNMDRyUzBKTk1XSlRZekJ0TkVkSUNteE5kVWs0Y0Ro
      SVNDdERkbWgxUkhFMVZISlZaWEZsZGxKd1ZFbGFOSGRoTjNoMU1XY3JNMUJ1U0hKcmVERjBOR2hX
      Y1c5NVlUbDRXamxrTVdoaWNrNEtVMnhrYVdGaVEza3lkV05zYW14VFpIRkRaVmRJUjJSaVN6QmhL
      elU1T0dkbEwyUnFURWNyYldsdU1IaEZXV3A0ZVdSeldUQTVVVk0xV1RsdlZGTTRVd3B2UkhkclMx
      cDJObXh1VEdOQldqWk5hblY1VndvOVlrcFZRZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84124-7
    - DISA-STIG-RHEL-09-254030
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_default_accept_ra
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.default.accept_ra.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv6.conf.default.accept_ra from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.default.accept_ra
        replace: '#net.ipv6.conf.default.accept_ra'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv6.conf.default.accept_ra is set
      sysctl:
        name: net.ipv6.conf.default.accept_ra
        value: '{{ sysctl_net_ipv6_conf_default_accept_ra_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv6 Interfaces
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_redirects,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Accepting ICMP Redirects by Default on IPv6 Interfaces
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv6_conf_default_accept_redirects_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Ru
      RnlRVkF2YW1kMVRXWndNbTR5UlM5RmFrSldXRlZ1Ym5KeFUzRUtTa2xSZW1ReGNEWlBLMFowT1M5
      emVtY3hlWGRCVUV4RmVDdE9SalUxTW5GdmJFSk5PV1ZNUTNoblIza3pRWGRRYlVZcmMxWjVhRGhP
      VFVKaEwwOTVlZ3BUVkdGbGF6bFhUVGhZTVRFclNVMUNibUZIZDIxa2REYzBaalZpUml0NldGUXdO
      VlJCVFRnM1lqUmtMMDl4VkZjNVkwSjZhazFQY0VGMGVteHBRMjFHQ2sxNlNURTFNSEZGUmxCclpE
      TjFVMU5uWkd0cFNHeHBlVVpwWTNacFdVcEpiMlV6YzFCd1ltVmtOV2QyVWxjMWVVWm1XWGRSVTJs
      bGNtdG5WblF6UWxZS2FHcERkbFJHWVVWMWFDOHhUVUZEU2tKSFJrRnpjMGRRWWtKVGVsaDJibGRz
      Y1hoaVJqVnJTVnBWZWxvMVdIQXJkbFJuT0RkWVVqTkxSMHAwTW00MFNncFBaR1F4VW5wb1JGaEtR
      MnQwV1VwWmN6SnJSV0o0Y3pWNFkyUm1XSEJQSzNneGVtbHdaak12YjNSblJpdDBiVVZvZWxwUFRu
      cE5jVVZoWW10UEsyWkdDbWQyUXk5RmRHdHNhRXBySzBKRVRsZE9Na3MxYzB4MlF5OVlXbEpTSzNs
      NGFscGthR2xRYTJ0R01tbE9NVlJCTjJWNmFVcDBOaXRDVTFoUE5rZE5ka2dLYzFjd2VtMWlNaXRR
      UVZkWGRrSlpWR2xJYjNsd2QyMHhhR1J0Ynl0RWFrdG5ORXN4VEhSVFlVaGtabWxYVERNemFrMXBi
      WGRxZERkR1pXbFlNRFJKVmdwaE5ucGpOMmw1WTBONGJVeG5SbUpNVW1VNVIyTTVPV3A1VFVzelNq
      UmpVelJUV1RSSmIyMUtiV014UkVKTU1HRjROVE5xUlVGSlJHMVBRVVo2YkU1cENscEpWQzlhVHpZ
      M1QzaFJOVkpVUkVoWmN6Um1VazR5Wm5sUGFFOXNLMk0wVmk5MlIycGlTR2hQTTFWS1NHNVNNR3RD
      Y1dwWmJUWnRhMVk1VDNWYWNVc0tiVTlVS3pCME5XWk5XR0Y2WXpaMVVteEtWMFpXVDI1T1FUWTNZ
      bWc1YWt3eWRtWlBTR2RsZUROb2F6WjFTMmRRU1VOdWF5dElObGhrYmxCSWJpdHdOUXBKYm1sa2Ns
      cEtVMjVIVFd0SlNqbFRjMFUyTHdvOU56VXphQW90TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84113-0
    - DISA-STIG-RHEL-09-254035
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_default_accept_redirects
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.default.accept_redirects.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv6.conf.default.accept_redirects from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.default.accept_redirects
        replace: '#net.ipv6.conf.default.accept_redirects'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv6.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.default.accept_redirects
        value: '{{ sysctl_net_ipv6_conf_default_accept_redirects_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Disable Kernel Parameter for Accepting Source-Routed Packets on IPv6 Interfaces by Default
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_sysctl_net_ipv6_conf_default_accept_source_route,fix)
# Version: undefined
# platform = multi_platform_all
# reboot = true
# strategy = disable
# complexity = low
# disruption = medium
- name: Disable Kernel Parameter for Accepting Source-Routed Packets on IPv6 Interfaces by Default
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    sysctl_net_ipv6_conf_default_accept_source_route_value: '0'
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rr
      SldiMUZCU1VZMWFHTkJMMnhrWTJKbVJEWkVaWFl5UW1Gc1dsWUtORVFyV2xsUEsyRjJlbkI0VVd4
      blMyRm5RMmxqVlU5dGQzQmhMM3BJTWpGMVkyaG9PWEpYWkZGck1IZGlTREJOWVRrclExQm5Oblpt
      TUhjNWRHNXhUZ29yUm5RM1NFRkRkVEZGUWxoalJ6aERXVlZTUTFoRWJVVnlhVkJaVmtveVR6ZzVO
      bEpxTkc1c00xTXJiRzVQWlZGUVdqUnhTa2dyT0cwcmFsRk1RaTl3Q2tseU1VdHNUa0pOZVVWb1FW
      WTNhV3c0ZUV0alIydFBOVFJ5WWtwcFdHMTZkRTl2UnpVM2RTdHRSVkZyYjFFMmNISmhVMEkxWTA1
      QlRXWjZOMjlSV0dvS2RFODRaQzlSYUUwdk1XdFRjMmxUYVd3dmVWRldUbkpFZVhocGEzVmFhRGQz
      TDFCcmREVjFUVmQxZDAxM01uZHJTR3c0Y2tReFJYaDFOemwwUkZaNmJRcFhPRlEyUVhwbllWVk5U
      M0p1VlVwellsazFiRTV1ZGpNNGFTOVlaVkY1ZG1saFRtOHhPRXRMVFhKck16VkZaVUZpVjJVeloy
      azVTM3BqSzBsSllrRldDa2RoY1ZKUGRsaE5kM0FyV0U1SWFWRjJjVEJFTWtKR1JYVkZWM00wWnps
      SVJYb3hhVlF5WkRObVdrd3lkbkJrU1VaSk1YWTBhMkkyVG5oR1RHSmxUVEVLSzBsYWNUQnhTRTk2
      Y2poeVUycG5halJ3YWk5U1dFdFZXR2RIVkROcU0zRmpiVUo0UVhFdmRrTk1jRkZwV1doM05rcEJS
      RzFxTDFsT1VXdHJkU3MxWmdwRmNISjJNMEpNTUVjdmJYVjBXVXRqWTJGNmNFdHZlVUpsU3pSTmQw
      aHZRWE5EUW1KdE0wTldaWEpLUWswck1EZDBOMHBUYTNabVowWlFiVTlEVVZsc0NtRlRUbloxT0RS
      Tk5VcHBUSGRLTURsVmNtUlZiMkpUV0hNNE1qVkNOMWh2WjBOUGVGVXlaVWhXTmxKalRYcDVSM0pP
      U3pZMGVFUlVPVXB4U1ZCbWIxWUtTV3RUTTI0NGFIVTBObmx6YjI5bVNqSlJkWGd6YW5ocEszWjZV
      alJHTmpadWVIUmxkSEpTWjBwVFVYbGhORVYwYzNkelJIaHlVR1ptTmxCS2VVSXZkZ3BPZERCdllu
      WjNiWEIyTlhGTFpYTjZPRlpQYmdvOU4xbDNUZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-84130-4
    - DISA-STIG-RHEL-09-254040
    - NIST-800-171-3.1.20
    - NIST-800-53-CM-6(a)
    - NIST-800-53-CM-6(b)
    - NIST-800-53-CM-6.1(iv)
    - NIST-800-53-CM-7(a)
    - NIST-800-53-CM-7(b)
    - PCI-DSS-Req-1.4.3
    - PCI-DSSv4-1.4
    - PCI-DSSv4-1.4.2
    - disable_strategy
    - low_complexity
    - medium_disruption
    - medium_severity
    - reboot_required
    - sysctl_net_ipv6_conf_default_accept_source_route
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: List /etc/sysctl.d/*.conf files
      find:
        paths:
          - /etc/sysctl.d/
          - /run/sysctl.d/
          - /usr/local/lib/sysctl.d/
        contains: ^[\s]*net.ipv6.conf.default.accept_source_route.*$
        patterns: '*.conf'
        file_type: any
      register: find_sysctl_d
      when: '"kernel" in ansible_facts.packages'

    - name: Comment out any occurrences of net.ipv6.conf.default.accept_source_route from config files
      replace:
        path: '{{ item.path }}'
        regexp: ^[\s]*net.ipv6.conf.default.accept_source_route
        replace: '#net.ipv6.conf.default.accept_source_route'
      loop: '{{ find_sysctl_d.files }}'
      when: '"kernel" in ansible_facts.packages'

    - name: Ensure sysctl net.ipv6.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.default.accept_source_route
        value: '{{ sysctl_net_ipv6_conf_default_accept_source_route_value }}'
        sysctl_file: /etc/sysctl.conf
        state: present
        reload: true
      when: '"kernel" in ansible_facts.packages'
  handlers:
    - name: insights_reboot_handler
      set_fact:
        insights_needs_reboot: true


# Enforce Usage of pam_wheel with Group Parameter for su Authentication
# Identifier: (ssg:xccdf_org.ssgproject.content_benchmark_RHEL-9|0.1.76|cis_server_l1|xccdf_org.ssgproject.content_rule_use_pam_wheel_group_for_su,fix)
# Version: undefined
# platform = multi_platform_rhel,multi_platform_sle,multi_platform_slmicro,multi_platform_ubuntu
# reboot = false
# strategy = restrict
# complexity = low
# disruption = low
- name: Enforce Usage of pam_wheel with Group Parameter for su Authentication
  hosts: 'ip-172-31-4-65.us-east-2.compute.internal'
  become: true
  vars:
    var_pam_wheel_group_for_su: sugroup
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU200eU5XbFlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      ZEJjMUZCU2premJERkliMkl6Vldoc1VrSnNhbHBJUm5sYWFEWUtSVEZVWlZsNGJXUnFPWGw2THpW
      Q1FUaGhVSFphZURkdWJIbzJZWE5rVTJJd1RVZGFjRzByVGpSS1dtcHpWMDl3ZDFoTE5rRlRORWM1
      ZW0xUVRWcFRhUW94TDBoSFRWZG5XR0pvTm1sek5HdFlTMFZTTUVvM2JsaFdXR3ByY2t4NlMzWmxR
      VTA0VVhsc05WbFNjMjQzU2k5VlJIcHJTVE4xZFhOMk0wdHdOMkl2Q2pkSWRrd3ZWRzgwTVdjeFNF
      aEVUMHRaWkVKVlNVbDFPRmhLYW1JM0sxVjRPR2dyVUN0cVltWkdaVEZ1WkVFd1p6aFdhVGswYkUx
      NlNFMTZRMkoxU1VFS1Zpc3hXWFl5ZERWcVZYZzBaV294YzNkM2NGZzVhbEYxWms5QlZHbE9Sbk5W
      V1VWcFNqUlRjblZWU0VaUVpUbHhWVUpqVkhSVlVFTTVabVFyTTJKTldnb3hjWGt5ZVhScWRtUnZV
      amx4Wlc5TlYxUkJVbVZoYkdrMVZVTkxjVXN3UlVsVk5YUnVkamxTTkRSNVpHVmFLekZNWlZscVVV
      dHdZM2wxY0VoWWVteDBDalpxZUVkaWFXbFpSREoxVjBkSmIySjZORkIxUVU4ek1XRXdTbmxWZWpJ
      eGVIWnBVMnBzUjJzd1pEUlVNbVV2VEVSTmMzRmxaemxCYkVveWEzQnljRGdLWW5KTVkwMU1kWHBY
      TkdSeVpWbDRjblZuY2pWdUswNDBSSGRuVXpFdlpsUkZNbGd6VkM5M1VURjBaRkJSUVhsM01VbGlV
      RGxvTjFoR05GRklNRzh4ZUFwamFXRnZPSGhOVm5aQ05IRXlValpqUjJ3M1JWUjVjbmgyTVU1NVN6
      Z3plRmt3Wm1OWVppOUxXSGxpTVhsSlZ6WmxjWGQyV1RoV2RETlBZWFZ4UkVsV0NuQlJXR2RwV2xs
      S1NsQjJNMDlQYkZaTGVEUXJjbkVyZWpkNU1VSmhSV2xyY1V4YVJrOTJVbXd2T1ZwdVZtTXpjbXBE
      VmxwM1QweDJiak42ZERsRE9XNEtUWFUyV1M5bFEzRlNNaTlqVkZGM1ZtNXlaSHAxYlZkNmVEZDZa
      SFpPU0hoU05qZ3ZlRk40VUdoTVpHYzBVMjFrTVUwM1RWUjZhVnAzY0VKSk5YTXlOUXBKU1dKTE1q
      Vk5ORzVUYjJReGJVbE5VelJTUXdvOVRDdE1Td290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tags:
    - CCE-86065-0
    - PCI-DSSv4-2.2
    - PCI-DSSv4-2.2.6
    - low_complexity
    - low_disruption
    - medium_severity
    - no_reboot_needed
    - restrict_strategy
    - use_pam_wheel_group_for_su
  tasks:

    - name: Gather the package facts
      package_facts:
        manager: auto

    - name: Enforce Usage of pam_wheel with Group Parameter for su Authentication - Add the group to the /etc/pam.d/su file
      ansible.builtin.lineinfile:
        path: /etc/pam.d/su
        state: present
        regexp: ^[\s]*#[\s]*auth[\s]+required[\s]+pam_wheel\.so[\s]+use_uid group=$
        line: auth             required        pam_wheel.so use_uid group={{ var_pam_wheel_group_for_su }}
      when: '"pam" in ansible_facts.packages'


- name: generate Compliance report
  hosts: "ip-172-31-4-65.us-east-2.compute.internal"
  become: true
  gather_facts: false
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTV05DUVVGQ1EwRkJSMEpSU213elMyZFlRVUZ2U2tWTmRuYzFPRVFyYWpWd1Rq
      a3djMUZCU1dwWVVsWklhUzh5WkdRclFrdzRhRnBCVXlzNGJrd0tjbUp5WkhobWRra3ZhM1p3TWxj
      eGNrMWtNbkJ0YmpsV1owOURXVll6YzI5Nk1FNURjRTVKZUhsUFFuZFpXVmhOYkdwYU5XcGhOSE5F
      TkZVME5HbzFRUXBQUmxWTE1IQmxaR3QwVTJseVVsbDJhbTFsVm1oU1YyRnhURzE0VnpJeFFVdDNN
      bmR5YTBRM1EwNVRjM1JtYmxWMlRtUkJabU5LYjFGV2NHODJOM2RyQ2sxUFNUaFJZMlo2ZFdJMWNu
      aHlTSFV3ZUM5eFZqVnROa3RPZVZORFptaFlLelo0SzFkMWFqQk1ibEZqYTJ4WVYyVkZVM2hQV1N0
      blRrMUJNMFkxYkU4S1dXcHdSMmhVU25oeFkzSXpTRWh0TURsV1RWTk1aeTkwTjNFNGRqaERWMlp1
      Wms1M2VVcDBOazVsYVV0MGFVYzVUa2hKV1d0M1NFZ3lOMFZZTlhORk9Rb3pSakEyWWs5NlpsQkdT
      RWRaUzBzeFlYTmplamhvTDNOMVRtMDRiWFJ4Ym5CQmIycHNkM1JZVDNKWmFVaG1hV1JsTWtSaWEz
      VjNOUzl0ZDBGSFFXZFVDbGhtTWtJMGMybFBVSHBpWWxvMVUzUjJSbFk0YzBaMVVrMTFjWEpHVTJj
      M2FsSkpkbkpQT1ZjeE5YQTBiV04xUnpkSWVDOVJRMVpvUmpkb1FuUkZUMG9LVFhCdmFYVjBOVlpx
      ZGxsVFkwcEJUM05tTUdsYU5FaFlRWEZtVEVWWWVtdzFja1ZzUmtoek1GSnlWRkJsWVZoSmRqTmti
      bkpUV0dkNFNUZFVTVUpUYVFwYWJtTkNZalpMVUdkNWFVSXJibWRQV0ZCbFEyMUhNbmRMVm5CSGVI
      ZDFkV0pXTWtScE5FdGxhWHB0V25KcWNtMVFPRlJLWjJWb2QyRktSMmt5TlZwakNrcFpVMlpGTVU5
      T1pucDVaR2gxVmxscVltSnhabkppZGxKWU4zaExlV1JNTVhWQlRucG9Ua05wY2pSRk0xcHRaRloy
      UlVSd04wNVNhalIwTmpReldrY0tTVGxSYnpGRldEazNlR001YmtwYU0wMDVWME5zYVhSa2MwUTJh
      V1JQWlhCU1FuRlBhSFJIU0hoRlkxVkJUMHgxWkUwelNVNDNNM1pDVlRCa1dsbFVXQXByYVhwNVRV
      VXJibGxEUmxKSk9XWjFaemx2ZGdvOVVtcGxWZ290TFMwdExVVk9SQ0JRUjFBZ1UwbEhUa0ZVVlZK
      RkxTMHRMUzBL
  tasks:
    - name: generate Compliance report
      command: insights-client --compliance
      changed_when: false

# Reboots a system if any of the preceeding plays sets the 'insights_needs_reboot' variable to true.
# The variable can be overridden to suppress this behavior.
- name: Reboot system (if applicable)
  hosts: "ip-172-31-4-65.us-east-2.compute.internal"
  become: true
  gather_facts: false
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldVaHBRMVk0ZG5jMU9FUXJhalZ3VGtGUmFrMUVRa0ZCYTJOeE1W
      WlhVbEF3VUVoMGRIRjBWMGt4UkZSdU4zcE1kbFUyU0hKd2QxSUtUbkJ3Um5SWGJWRktiM2xxYm1w
      bE5XUmFSemMxUTNCU1kzZGFPRU5XVW5sRlRVRXpVREExZW1Kc1UzSnFWbTUxVW5oNlpVeG1SbTFy
      YW1SRVJWcHdjZ3ByWTJ0d2FFazJSVUpIYWtJemEyaGFUalJ5YTNwUWRWQm1PR1pMUVdsSE1ESmxk
      SGhXVFZWV01tZHRkV3c0UjBJMmRIcEpkRk5uVFRGQlFYQkdORTFRQ2s1NFRDOUpUMlY2ZFdRMGFt
      VlFaV05KZWpGS1dtMTVkVGgzWTNoVFZqWkpTbTVPU1VGSGVHYzVWRUpVYzNNMFEwbHVaVlZXY0RG
      VWRrUlFPUzlHVXk4S2VGaFlaMFphWlM5VlZuQjBaRzA1ZDJkbmRVOXRiR2hvWVZCTVZHNU5Tbkoy
      UVRsV2FVUnZRVzV2WWt0b1VIbEtZMHBSYjJOTFdrRlRjVTF6ZWs1VWNncHVNek5JYlRoUk9IQnRW
      VTFLYldobU9VRnZkM2x4VW5GWVVHeHpXVGwzT0UxRU1WQkZjR3htY2pJeVlYTjFMMHhvYjNGNlIz
      TmtOMUUxTTJwdFMyNXBDaXM1Y0VjeWEzVkNSVXhpVVhoblRHcERiVlZsUzFCdmJuaFhjM0JuVFZs
      M2VYQjFaVFJvYnl0dmFsZG5WRGR2ZG1GbFRFNVRTMkV2UkZOS2JEWldRaThLZEd4YUwxUXJPRFZr
      Ym5ZclNWb3phbEJTZFM5bVpuZFBkVVpVV2xoNmVGTkJUalZSV1M5ak15c3hhbUZSTDBKeFdYTmhi
      M2RpUkZreGRXUXZVeXRsYVFwa2FEa3JWRkV5TlVKa1NYa3hibGh3ZWpoV1JHbHpjbEp3Y0VrNWFs
      SldWakkwTVVVelRVWkhka1ZaTm1aVFYzSlZWMWMzY0RKbFpUbGphelpOVlUweUNrNUZjRXBLWm5G
      UFNFdHBjRXRPZVRKdVFVRTJURmcxTHpNeGFWSk9VSEZZVXpKRVdqSlpkbVZTUTJOMmVDOHZPVTlo
      UzFWd1FsZElZVmxYYW5STU4wWUtSWFJWVEZGeFZESkJPVTF3WjFSU1RtOU5WbEZ4Y1haQ01GUlBP
      WE00TmxoTmRuUkdRa1IzYW5SbWIxSm9NRnBEYlUwME1FRlhRMHBxT0RKNlduTlRZUXBCYXpkUEsy
      UkpkMFl5VVQwS1BWcEtiallLTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:
    - when:
        - insights_needs_reboot is defined
        - insights_needs_reboot
      block:
        - name: Reboot system
          shell: sleep 2 && shutdown -r now "Ansible triggered reboot"
          async: 1
          poll: 0
          ignore_errors: true

        - name: Wait for system to boot up
          local_action:
            module: wait_for
            host: "{{ hostvars[inventory_hostname]['ansible_host'] | default(hostvars[inventory_hostname]['ansible_ssh_host'], true) | default(inventory_hostname, true) }}"
            port: "{{ hostvars[inventory_hostname]['ansible_port'] | default(hostvars[inventory_hostname]['ansible_ssh_port'], true) | default('22', true) }}"
            delay: 15
            search_regex: OpenSSH
            timeout: 300
          become: false

- name: run insights
  hosts: "ip-172-31-4-65.us-east-2.compute.internal"
  become: true
  gather_facts: false
  vars:
    insights_signature_exclude: /hosts,/vars/insights_signature
    insights_signature: !!binary |
      TFMwdExTMUNSVWRKVGlCUVIxQWdVMGxIVGtGVVZWSkZMUzB0TFMwS1ZtVnljMmx2YmpvZ1IyNTFV
      RWNnZGpFS0NtbFJTVlpCZDFWQldVaHBRaXR6ZG5jMU9FUXJhalZ3VGtGUmFXdDRaeTh2WmtaRFoz
      QXlTblIxVEd0UU5qQnNTa3BZYm1GU1JGTjVjVVYwU0ZSNlRGY0tOVlZSVlc5MWEyUmpVRFJVUlZn
      d01EaDFhRkJHUzFaSmVrdFVTR2RsYTFOaU1UUXlkMjlQYm5sR2VUUnpRbEJrZEZoaGREVlliWEp0
      VGxsR1EwaEVWZ28xYVhSdlNrcDBPVzg1UWtkQlJVaDVZMFJ3SzBoNVNqWXphM0paZVRGUk1rOXVU
      azF3VjJaSmNtYzJUakJXVTJoa1JtVk1lR0ppTjBaMlpFaEpjbFo2Q2pJNGFrdHhOemx1Tm13eUx6
      aDZZVkJSTDFkWVZIWkNaMDVhUkVWTFJ6TmhSSFl3WVRkbWIyUnlPRWhEZGxseE5tNUhNRkZOY1RO
      U1ZFOXBkbFZtTTFnS1JuQnlhVTh2TDNKSlRDOVlSelE1TTA1NGFWSjBRakVyZEhSUk0wZHNhM1ZE
      ZFVwck1EQkdaREp0ZDNZNFprRnZaR2xUUW5aelQydEpZekZyV25adFN3cEJjR3BEY1ZKMWVHaExU
      MDgzYWxZM1FYSnRTV0p6TkhobVJrUkJVMkZaV2t4R01VMHZhME42ZWs1d1MwTjFhbE5hVUUxRlVt
      WlhhV2RHVGpGMWRqRjNDalpQSzB0b1pTdFJVRU5hUm5CV1kwVndSbTFSTVdwcWFrOVFPV2haSzNW
      alZWSnhSVEkyTlhGTWRuWnFSWE4wUW5WQk4xQkZNRVZ3UkRsaU5VaFZSM1lLTkZKemJXc3pNbFpC
      Vnl0WE5IWk1VRWQwZG1sQ00wSXpUbE0wZUhCdVIzSmlObGs1Y1cwNFZuVTJSRUZIV2xOYWRsbFlk
      bWQwTm1WR2N6RTVTVFZZUWdvMGVtcFVSRUlyTW1sT2NrcE9jM2d5YURoU1VGVnJMMmhZUzFKMGEy
      WnZZMlpKZVRkcGNWY3hiMGRsTlZSMmFqTTFSbXRqUld0YU9VRnpSMjl6WXpWMENuUlZkVlZJWWpS
      ME5EVTFSSE5EWlZWc1ZEZFNOakJDTTB4d1Z6TmlTRTF0YzFCMEx6RktNRFEwYm1KS2RFTkhUM1Jy
      UVVWWVRsVTJlbGxUTDNBMFFqSUtaSFYxY2tZdlNHUnFWWFJNVDNSdlNFTnlZVWd2WkZwaFRVNTZk
      MVZpZUc1VFZXUkdZU3R6TTBaNFJHczFVVkU0VVRaMVVucFpRbWw0WkcxeWREZGpUQXBKYTA1NlEy
      aHBRMDlrY3owS1BVMVZOMk1LTFMwdExTMUZUa1FnVUVkUUlGTkpSMDVCVkZWU1JTMHRMUzB0Q2c9
      PQ==
  tasks:
    - name: run insights
      command: insights-client
      changed_when: false
